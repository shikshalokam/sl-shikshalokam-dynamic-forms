{"version":3,"file":"dynamic-form-builder.js.map","sources":["ng://dynamic-form-builder/lib/dynamic-form-builder.service.ts","ng://dynamic-form-builder/lib/dynamic-form-builder.component.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/dynamic-form-builder.component.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/field-builder/field-builder.component.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/textbox.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/dropdown.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/file.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/checkbox.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/radio.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/date.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/slider.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/multi-select.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/dynamic-form-builder.module.ts","ng://dynamic-form-builder/lib/dynamic-form-builder.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n// import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\n\n\n// @Injectable({\n//   // providedIn: 'root'\n// })\nexport class DynamicFormBuilderService {\n\n  communicateSubject: Subject<any> = new Subject<any>();\n\n  // private messageSource = new BehaviorSubject('default message');\n  // currentMessage = this.messageSource.asObservable();\n\n  list: any = [];\n  pagelist: any = [];\n\n  all: any = [];\n  criteriaList: any = [];\n\n  constructor() { }\n\n  currentMessage() {\n    return this.list;\n  }\n\n  sendData(obj) {\n\n    console.log(\"obj\", obj);\n\n    this.list = obj;\n    this.communicateSubject.next();\n  }\n\n  setPageNumber(data) {\n    this.pagelist = data;\n\n    console.log(\"data=====page\",data);\n     this.communicateSubject.next();\n  }\n\n  getPages(){\n    return this.pagelist; \n  }\n  getPageNumbers(): Observable<any> {\n    return this.pagelist;\n\n  }\n  // setQuestionList(list){\n  //   this.list = list;\n  // }\n\n  // changeMessage(message: string) {\n  //   this.messageSource.next(message);\n  // }\n\n  getALl(): Observable<any> {\n\n    // let all = {\n    //   questionList:[]\n    // }\n    this.all = {\n      criteriaList: this.criteriaList,\n      questionList: this.list\n    }\n\n    console.log(\"executing in service\",this.all);\n    // return this.communicateSubject.asObservable();\n    return this.all;\n  }\n\n  getQuestions(){\n    return this.list;\n  }\n  setCriteria(list) {\n\n    this.criteriaList = list;\n\n  }\n\n  updateQuestion(questionEle){\n\n    console.log(\"update question\",questionEle);\n    this.list = this.list['questionList'].filter(item=>{\n      if(item.field==questionEle.field){\n        return questionEle;\n      }else {\n        return item;\n      }\n    })\n  }\n\n}","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, FormArray } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { DndDropEvent } from 'ngx-drag-drop'\nimport { DynamicFormBuilderService } from './dynamic-form-builder.service';\n\n// import  { } from './dynamic-form-builder.service'\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'lib-dynamic-form-builder',\n  template: `<style>\n  p {\n      font-family: Lato;\n    }\n    .noPadding {\n        padding: 0px;\n    }\n    .margin-5 {\n        margin-top:5%;\n    }\n    .element {\n      border: 1px solid midnightblue;\n    list-style: none;\n    padding: 10px;\n    margin-bottom: 10px;\n    color: midnightblue;\n    width: 100%;\n    text-align: left;\n    cursor: pointer;  \n    text-transform: capitalize;\n  }\n  .element-old {\n    border: 1px solid #ccc;\n    padding: 10px;\n    margin-bottom: 10px;\n    color: #333;\n    text-align: left;\n    text-transform: capitalize;\n  }\n\n   .toolbar {\n    list-style: none;\n    padding: 10px;\n    margin-bottom: 10px;\n    color: midnightblue;\n    width: 100%;\n    text-align: left;\n    display: block;\n    margin: 1%;\n    font-size: 16px;\n    border: 1px solid midnightblue;\n    padding: 6px;\n    cursor: pointer;\n    text-transform: capitalize;\n   }\n    .element span {\n      text-transform: uppercase !important;\n    }\n    .form-group {\n        margin-bottom: 0.5rem;\n        border: 1px solid #ece7e7;\n    }\n    .cursor-pntr {\n        cursor: pointer;\n    }\n\n    .showQBlock {\n      background: #a5f1d7;\n      padding: 50px;\n      opacity: 0.75;\n      min-height: 390px;\n    }\n\n    .start-create {\n      width: 50%;\n      margin:auto;\n      padding:20px;\n    }\n    .start-create:hover .add-qicons{\n      display:block;\n    }\n    .toolbar i.material-icons {\n      vertical-align: middle;\n      padding: 0 px;\n      float: right;\n    }\n    .element i.material-icons {\n      vertical-align: middle;\n      float: right;\n    }\n    .add-qicons{\n     \n      // background: #d9d9f9;\n      padding: 5px;\n      text-align: center;\n      width:100%\n      margin: auto;\n      // box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.19);\n    }\n    .qtype {\n      float: left;\n      margin-left: 5pxpx;\n    }\n    .space {\n      padding-top:20px;\n    }\n\n    @media only screen and (max-width:600px) {\n      .qtype {\n        float: left;\n        width: 50%\n        margin-left: 0px;\n      }\n      .start-create {\n        width: 100%;\n        padding: 0px;\n      }\n    }\n    \n  </style>\n  <div class=\"col-sm-12\">\n      \n\n    <div class=\"col-sm-12 noPadding\">\n    <div class=\"card showQBlock\" *ngIf=\"fields.length <= 0 && showQuestionBlock\">\n\n      <div>\n        <div class=\"start-create\">\n         <h2 class=\"text-center\" ><span class=\"start-create\">Start Creating a Question</span></h2>\n         <div class=\"add-qicons\">\n              <div class=\"col-sm-6\"  *ngFor=\"let item of jsonData;let i = index\">\n                <div *ngIf=\"i <= 4\" class=\"element\"   (click)=\"onDrop(item.responseType)\">\n                  <span  >\n                  <i class=\"material-icons\">{{ item.icon }}</i>{{ item.responseType }}\n                  </span>\n                </div>\n                <div *ngIf=\"i > 4\" class=\"element\" (click)=\"onDrop(item.responseType)\">\n                  <span   >\n                  <i class=\"material-icons\">{{ item.icon }}</i>{{ item.responseType }}\n                  </span>\n                </div>\n              </div>\n              </div>\n         </div>\n      </div>\n\n    </div>\n    <div class=\"card\" *ngIf=\"fields.length > 0 || !showQuestionBlock\">\n          <div dndDropzone class=\"card-body\" (dndDrop)=\"onDrop($event)\">\n              <form (ngSubmit)=\"onSubmit(this.form.value)\" [formGroup]=\"form\" class=\"form-horizontal\">\n            <dynamic-form-builder [fields]=\"getFields()\" [form]=\"form\"  (onFieldUpdate)=\"onFieldUpdate($event)\" ></dynamic-form-builder>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-12 space\" *ngIf=\"fields.length > 0  || !showQuestionBlock\">\n          \n          <div  class=\"col-md-12\">\n            <!-- <dynamic-form-builder [fields]=\"getFields()\"></dynamic-form-builder> -->\n      \n            <span  class =\"qtype\" *ngFor=\"let item of jsonData\" >\n              <span [dndDraggable]=\"item\" (click)=\"onDrop(item.responseType)\"  class=\"toolbar\"  >\n            {{ item.responseType }}   <i class=\"material-icons\">{{ item.icon }}</i>\n             </span>\n              </span>\n\n              <!-- <div class=\"col-sm-12 element\" (click)=\"addFormElement(item.responseType)\" >Number</div> -->\n            <!-- <div class=\"col-sm-12 element\" (click)=\"addFormElement('input')\" >Input</div>\n            <div class=\"col-sm-12 element\" (click)=\"addFormElement('number')\" >Number</div> -->\n\n          </div>\n      </div>\n\n\n      \n      <div class=\"col-sm-12\">\n      </div>`,\n  styleUrls: []\n})\nexport class DynamicFormBuilderComponent implements OnInit {\n  public form: FormGroup;\n  unsubcribe: any;\n  jsonData: any;\n  formData: any;\n  pageNumber: any;\n\n  // @Input() data;\n  @Input() events: Observable<any>;\n  // @Output() questionList = new EventEmitter();\n  @Output() questionTrigger = new EventEmitter();\n  eventsSubscription: any;\n  criteriaList: any;\n\n  public fields: any[] = [];\n  showQuestionBlock = true;\n\n  constructor(private http: HttpClient,\n    private _formBuilder: FormBuilder,\n    private fb: FormBuilder,\n    private dynamicServe: DynamicFormBuilderService\n  ) {\n    // this.form = new FormGroup({\n    //   fields: this.fb.array([]),\n    // })\n    this.form = new FormGroup({\n      fields: new FormControl(JSON.stringify(this.fields))\n    })\n\n    this.unsubcribe = this.form.valueChanges.subscribe((update) => {\n      console.log(update);\n      // this.fields = JSON.parse(update.fields);\n    });\n  }\n\n\n\n  showQBlock() {\n    this.showQuestionBlock = false;\n  }\n\n  getCriteria() {\n    return this.criteriaList;\n  }\n  ngOnInit() {\n    this.criteriaList = [];\n    this.getCriteria();\n     this.eventsSubscription = this.events.subscribe(data => {\n      console.log(\"calling from parent with data\", data);\n      if (data) {\n        // let dt = data;\n        // this.formBuild(dt);\n        this.criteriaList = data.criteriaList;\n        let dt = data['questionArray'];\n\n        console.log(\"\")\n        this.formBuild(dt);\n\n        let completeData = {\n          questionList: data['questionArray'],\n          criteriaList: data.criteriaList\n        }\n\n        console.log(\" eventsSubscription completeData\", completeData);\n        this.sendToService(completeData);\n\n      } else {\n        const pages = this.dynamicServe.getPageNumbers();\n        let obj = {\n          action: \"all\",\n          data: this.fields,\n          pages: pages\n        }\n        console.log(\"to get all\", this.fields);\n       \n        this.questionTrigger.emit(obj);\n      }\n    })\n    this.formData = [];\n    this.jsonData = [\n      {\n        \"responseType\": \"text\",\n        \"icon\": \"text_format\"\n      }, {\n        \"responseType\": \"number\",\n        \"icon\": \"indeterminate_check_box\"\n      }, {\n        \"responseType\": \"radio\",\n        \"icon\": \"radio_button_checked\"\n      },\n      {\n        \"responseType\": \"checkbox\",\n        \"icon\": \"check_box\"\n      },\n      {\n        \"responseType\": \"dropdown\",\n        \"icon\": \"arrow_drop_down_circle\"\n      }, {\n        \"responseType\": \"date\",\n        \"icon\": \"date_range\"\n      }, {\n        \"responseType\": \"slider\",\n        \"icon\": \"date_range\"\n      },\n      {\n        \"responseType\": \"matrix\",\n        \"icon\": \"date_range\"\n      }\n    ]\n  }\n  onUpload(e) {\n    console.log(e);\n  }\n\n  getFields() {\n    return this.fields;\n  }\n\n  ngDistroy() {\n    this.unsubcribe();\n  }\n\n  sendToService(data): void {\n    // send message to subscribers via observable subject\n    this.dynamicServe.sendData(data);\n  }\n\n  getToolObj(ele, len) {\n\n    let obj = {\n\n    }\n    if (ele == 'text') {\n      obj = {\n        \"position\": len,\n        \"field\": len + \"question\",\n        \"type\": \"text\",\n        \"label\": \"Question\",\n        \"placeholder\": \"Please enter your question here\",\n        \"description\": \"\",\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        }\n      }\n    } else if (ele == 'number') {\n      obj = {\n        \"field\": len + \"question\",\n        \"type\": \"number\",\n        \"position\": len,\n        \"label\": \"Question\",\n        \"placeholder\": \"Please enter your question here\",\n        \"description\": \"\",\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        }\n      }\n    } else if (ele == 'radio') {\n      obj = {\n        field: len + \"question\",\n        \"position\": len,\n        type: 'radio',\n        name: len + \". question\",\n        label: \"Question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        },\n        options: [\n          { key: 'R1', label: 'Label 1' },\n          { key: 'R2', label: 'Label 2' }\n        ]\n      }\n    } else if (ele == \"checkbox\") {\n      obj = {\n        field: len + \"question\",\n        type: \"checkbox\",\n        \"position\": len,\n        name: len + \". question\",\n        label: \"Question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        },\n        options: [\n          { key: 'option1', label: 'option 1' },\n          { key: 'option2', label: 'option 2' }\n        ]\n      }\n    } else if (ele == \"dropdown\") {\n      obj = {\n        field: len + \"question\",\n        type: 'dropdown',\n        \"position\": len,\n        name: len + \". question\",\n        label: \"Question\",\n        value: 'option1',\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        },\n        options: [\n          { key: 'option1', label: 'Option 1' },\n          { key: 'option1', label: 'Option 2' }\n        ]\n      }\n    }\n    else if (ele == \"date\") {\n      obj = {\n        field: len + \"question\",\n        type: 'date',\n        \"position\": len,\n        name: len + \". question\",\n        label: \"Question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\",\n          \"maxDate\": \"\",\n          \"minDate\": \"\",\n\n        },\n        options: [\n\n        ]\n      }\n    } else if (ele == 'matrix') {\n      if (ele == 'childDroped') {\n        let childdata = {\n          field: len + \"question\",\n          \"type\": ele.type,\n          \"position\": len,\n          \"label\": \"Question\",\n          \"child\": [],\n          \"placeholder\": \"Please add Child's here\",\n          \"description\": \"\",\n          \"validations\": {\n            \"required\": false,\n            \"minLenght\": \"\",\n            \"maxLength\": \"\"\n          }\n        }\n      }\n      let finalchild = [];\n\n      finalchild.push()\n\n\n      obj = {\n        \"field\": len + \"question\",\n        \"type\": \"matrix\",\n        \"label\":  \"Question\",\n        \"position\": len,\n        \"child\": [],\n        \"placeholder\": \"Please add Child's here\",\n        \"description\": \"\",\n        \"validations\": {\n          \"required\": false,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        }\n      }\n    } else if (ele == \"slider\") {\n      obj = {\n        field: len + \"question\",\n        type: 'slider',\n        \"position\": len,\n        name: len + \". question\",\n        label: \". question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"min\": \"\",\n          \"max\": \"\",\n          \"maxDate\": \"\",\n          \"minDate\": \"\",\n\n        },\n        options: [\n\n        ]\n      }\n    }\n\n    return obj;\n  }\n\n  onDrop(ele, action = \"\") {\n\n    this.showQuestionBlock = false;\n    console.log(\"drop ele\", ele);\n    if (ele.data) {\n      ele = ele.data.responseType\n    }\n    let len = this.fields.length + 1;\n    var obj = {};\n\n    console.log(action,\"calling from child copy\",ele);\n    debugger;\n    if (action == \"copy\") {\n\n\n      let copyObj = {\n        \"position\": len,\n        \"field\": ele.field ? ele.field: len + \"question\",\n        \"type\": ele.type,\n        \"label\": ele.label,\n        \"placeholder\": ele.placeholder,\n        \"validations\": ele.validations,\n        \"options\": ele.options,\n        \"description\": ele.description,\n        \"copied\": true \n      }\n      obj = copyObj;\n\n    } else {\n\n\n      obj = this.getToolObj(ele, len);\n\n\n\n    }\n\n\n  \n\n\n    let elem = this.fields;\n    let trnasformData = {\n      action: 'add',\n      data: obj\n    }\n    console.log(\"transf\", trnasformData);\n   \n\n    this.formData.push(obj);\n    let fieldsCtrls = {};\n\n    this.form = new FormGroup(fieldsCtrls);\n    console.log(\"------\", obj);\n    for (let f of this.formData) {\n\n\n      if (f['type'] != 'checkbox') {\n\n        console.log(\"f.type\", f['field']);\n        fieldsCtrls[f['field']] = new FormControl(f['value'] || '')\n      } else {\n\n        let opts = {};\n        for (let opt of f['options']) {\n\n          opts[opt.key] = new FormControl(opt.label);\n        }\n        fieldsCtrls[f['field']] = new FormGroup(opts)\n      }\n\n      // const creds = this.form.controls.fields as FormArray;\n      // creds.push(this.fb.group(fieldsCtrls));\n\n\n      // console.log(\"fieldsCtrls\",fieldsCtrls);\n\n      // this.formData =  this.fields;\n\n    }\n    this.form = new FormGroup(fieldsCtrls);\n    // this.fields\n    // this.formBuild();\n    this.fields.push(obj);\n    let completeData = {\n      questionList: this.fields,\n      criteriaList: this.criteriaList\n    }\n\n    console.log(\"completeData\", completeData);\n    this.sendToService(completeData);\n\n    // this.questionTrigger.emit(trnasformData);\n\n    this.questionTrigger.emit(trnasformData);\n\n    // console.log(\"fields controls\", this.form);\n\n  }\n\n\n  formBuild(data) {\n    let formData = [];\n    this.fields = [];\n\n    this.fields.slice(this.fields.length, 0);\n    formData = data;\n    let fieldsCtrls = {};\n    this.form = new FormGroup(fieldsCtrls);\n    for (let f of formData) {\n      if (f['type'] != 'checkbox') {\n        console.log(\"f.type\", f['field']);\n        fieldsCtrls[f['field']] = new FormControl(f['value'] || '')\n      } else {\n        let opts = {};\n        for (let opt of f['options']) {\n          opts[opt.key] = new FormControl(opt.label);\n        }\n        fieldsCtrls[f['field']] = new FormGroup(opts)\n      }\n    }\n    this.form = new FormGroup(fieldsCtrls);\n\n    this.fields = formData;\n    let obj = {\n      action: \"all\",\n      data: formData\n    }\n\n    console.log(\"this.fields-------\", this.fields);\n    this.questionTrigger.emit(obj);\n\n\n    // this.fields = data;\n\n    // let fieldsCtrls = {};\n\n    // console.log(\" this.fields\", data);\n    // for (let f of data) {\n\n\n    //   if (f.type != 'checkbox') {\n\n    //     fieldsCtrls[f.name] = new FormControl(f.value || '')\n    //   } else {\n    //     let opts = {};\n    //     for (let opt of f.options) {\n\n    //       opts[opt.key] = new FormControl(opt.value);\n    //     }\n    //     fieldsCtrls[f.name] = new FormGroup(opts)\n    //   }\n    // }\n    // this.form = new FormGroup(fieldsCtrls);\n  }\n\n  onSubmit(value) {\n    console.log(\"value\", this.fields);\n\n    // this.questionList.emit(this.fields);\n\n    let obj = {\n      action: \"all\",\n      data: this.fields\n    }\n    this.questionTrigger.emit(obj);\n  }\n\n\n  // (event) {\n  //   console.log('Element was dragged', event);\n  // }\n\n  ngOnDestroy() {\n    this.eventsSubscription.unsubscribe()\n  }\n  onFieldUpdate($event) {\n    console.log(\"eventData sssssss------\", $event);\n\n    let eventObj = $event\n    let trnasformData = {};\n    if ($event.action == \"addnew\") {\n      this.onDrop($event.data.element);\n    }\n    if ($event.action == \"copy\") {\n      this.onDrop($event.data, \"copy\");\n    } else if ($event.action == \"delete\") {\n\n\n      // this.fields = this.fields.filter( each => {\n      //   return each.field != $event.data.field\n      // })\n\n      // console.log(\"$event\",$event.data.field); \n      trnasformData = {\n        action: 'delete',\n        data: $event\n      }\n    }\n     else if ($event.action == 'childDelete') {\n      trnasformData = {\n        action: 'childDelete',\n        data: $event\n      }\n    } \n    else if ($event.action == \"childDroped\") {\n\n      console.log('this.fields', this.fields);\n\n      var final = this.fields.filter(\n        item => {\n          if (item.field === eventObj.data.mutiSelect.field) {\n\n            console.log(\"\");\n            console.log(eventObj.data.mutiSelect.field, '====== this.fields  =====', item);\n\n            // if(item.child){\n            let obj = this.getToolObj($event.data.responseType, item.child.length + 1);\n            // }\n\n            item.child.push(obj);\n            trnasformData = {\n              action: 'childDroped',\n              data: $event\n            }\n            return item;\n          } else {\n            return item;\n          }\n        });\n\n      // final.push(obj);\n\n\n      // this.fields\n\n      console.log('final result', final);\n\n      // console.log(\"main obj\", obj);\n\n    } else {\n      trnasformData = {\n        action: 'update',\n        data: $event\n      }\n    }\n    this.questionTrigger.emit(trnasformData);\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'dynamic-form-builder',\n  styles: [`\n      \n  .addElement {\n    display:none;\n  }\n  .add-qicons {\n    display:none;\n    font-size: 17px;\n    width: 60%;\n    margin-left: 40%;\n    background: #a5f1d7;\n    float: left;\n    padding: 0px;\n  }\n  .element {\n    line-height: 26px;\n    font-size: 17px;\n    padding: 6px;\n    margin: 8px;\n    border: 1px solid midnightblue;\n    font-weight: bold;\n    color: midnightblue;\n  }\n  .element i.material-icons {\n    vertical-align: middle;\n    float: right;\n  }\n  .addElement:hover .add-qicons {\n    display:block;\n  }\n  `],\n  template: `\n   \n     <div cdkDropList (cdkDropListDropped)=\"drop($event)\"> <div *ngFor=\"let field of fields\"  cdkDrag>\n          <field-builder *ngIf=\"!field.isDeleted\" [field]=\"field\" [form]=\"form\"  \n          (sendDataToParent)=\"eventFromChild($event)\" (copyOrDeleteEvent)=\"copyOrDeleteEvent($event)\">\n          </field-builder>\n          <div class=\"addElement\">\n          <div style=\"float: right;\n          font-size: 4.5em;\n          color: midnightblue;\n          cursor: pointer;\n          line-height: 46px;\">+</div>\n\n          <div class=\"col add-qicons\">\n              <div class=\"col-sm-6\"  *ngFor=\"let item of jsonData;let i = index\">\n                <div *ngIf=\"i <= 4\" class=\"element\" (click)=\"addElement(item.responseType)\"  >\n                  <span  >\n                  <i class=\"material-icons\">{{ item.icon }}</i>{{ item.responseType }}\n                  </span>\n                </div>\n                <div *ngIf=\"i > 4\" class=\"element\" (click)=\"addElement(item.responseType)\" >\n                  <span   >\n                  <i class=\"material-icons\">{{ item.icon }}</i>{{ item.responseType }}\n                  </span>\n                </div>\n              </div>\n              </div>\n         \n          </div>\n      </div></div>`\n\n})\nexport class DynamicFormBuilderComponent implements OnInit {\n  @Output() onFieldUpdate = new EventEmitter();\n  @Input() fields: any[] = [];\n  // form: FormGroup;\n  @Input() form: any;\n  formData: any = [];\n  constructor() { };\n  jsonData = [\n    {\n      \"responseType\": \"text\",\n      \"icon\": \"text_format\"\n    }, {\n      \"responseType\": \"number\",\n      \"icon\": \"indeterminate_check_box\"\n    }, {\n      \"responseType\": \"radio\",\n      \"icon\": \"radio_button_checked\"\n    },\n    {\n      \"responseType\": \"checkbox\",\n      \"icon\": \"check_box\"\n    },\n    {\n      \"responseType\": \"dropdown\",\n      \"icon\": \"arrow_drop_down_circle\"\n    }, {\n      \"responseType\": \"date\",\n      \"icon\": \"date_range\"\n    }, {\n      \"responseType\": \"slider\",\n      \"icon\": \"date_range\"\n    },\n    {\n      \"responseType\": \"matrix\",\n      \"icon\": \"date_range\"\n    }\n  ]\n\n\n  addElement(element) {\n\n    let obj = {\n      action: \"addnew\",\n      element: element\n    }\n    this.copyOrDeleteEvent(obj)\n  }\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.fields, event.previousIndex, event.currentIndex);\n  }\n\n  copyOrDeleteEvent(data) {\n    debugger\n    console.log('data type', data);\n    console.log('this.fields', this.fields);\n\n    if (typeof (data) === 'string') {\n      data = JSON.parse(data);\n\n    }\n\n    // let childdata = data;\n    // let finaldata = JSON.parse(childdata);\n\n    // console.log(JSON.parse(data),\"parse copyEvent occured\");\n    // let obj = data;\n    console.log(data, \"copyEvent occured\");\n\n    // data.field =(this.fields.length+1)+\"question\";\n    // data.label = (this.fields.length+1)+\" question\";\n\n    if (data.action == \"addnew\") {\n\n\n      let transferData = {\n        action: \"addnew\",\n        data: data\n      }\n\n      this.onFieldUpdate.emit(transferData);\n\n    } else if (data.action == \"copy\") {\n\n      console.log(data, \"this.form before\");\n\n      let transferData = {\n        action: \"copy\",\n        data: data\n      }\n\n      this.onFieldUpdate.emit(transferData);\n\n      //  data.field = (this.fields.length+1)+\"question\";\n\n      //  console.log(\"data\",data)\n      // this.formBuild(obj);\n\n    } else if (data.action == \"delete\") {\n\n      // var index = this.fields.indexOf(data);\n\n      // console.log(\"ind\", index);\n\n      this.onFieldUpdate.emit(data);\n\n      // this.fields.splice(index, 1);\n\n\n\n      // this.fields = this.fields.filter(function(value, index, arr){\n      //   return value!=data;\n      // });\n\n\n\n      // console.log(\"evens\",evens);\n      // this.fields= evens;\n      // console.log(\"this.form\",this.form);\n      // this.fields.\n      // console.log(this.fields.length,\"copyEvent occured\",evens);\n    } else if(data.action == \"childDelete\"){\n\n      // console.log('childDelete', this.fields);\n\n      \n      // var index = this.fields[0].child.indexOf(data);\n\n      // console.log(\"ind\", index);\n\n      this.onFieldUpdate.emit(data);\n    }\n     else if (data.action == \"childDroped\") {\n      this.onFieldUpdate.emit(data);\n    }\n\n  }\n\n  eventFromChild(data) {\n\n    this.onFieldUpdate.emit(data);\n    console.log(\"data from child  ------- \", data);\n  }\n\n  ngOnInit() {\n\n    this.formData = this.fields;\n\n    console.log(\"this.form ---\", this.form)\n    // this.formBuild();\n  }\n\n  //   formBuild(item){\n  //     let fieldsCtrls = {};\n\n  //     this.form = new FormGroup(fieldsCtrls);\n\n  //     // var formData = this.fields;\n\n  //     // console.log(\"this.fields\",this.fields); \n\n  //     let len = this.fields.length + 1;\n\n\n  //     var obj = {\n  //       \"position\":len,\n  //       \"field\": len + \"question\",\n  //       \"type\": item.type,\n  //       \"label\": item.label,\n  //       \"placeholder\": item.placeholder,\n  //       \"validations\":item.validations  \n\n  //     }\n\n  //     this.fields.push(obj);\n  //    this.fields.forEach(function(f){\n  //     // console.log(\"f.type\", f);\n\n  //     if (f['type'] != 'checkbox') {\n\n  //       fieldsCtrls[f['field']] = new FormControl(f['value'] || '')\n  //     } else {\n\n  //       let opts = {};\n  //       for (let opt of f['options']) {\n\n  //         opts[opt.key] = new FormControl(opt.label);\n  //       }\n  //       fieldsCtrls[f['field']] = new FormGroup(opts)\n  //     }\n  //   });\n\n  //   this.form = new FormGroup(fieldsCtrls);\n\n  //   // console.log(\"fieldsCtrls\",fieldsCtrls);\n  // }\n}\n","import { Component, Input, OnInit, ViewChild, ElementRef, EventEmitter, Output } from '@angular/core';\n// import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { DynamicFormBuilderService } from '../../dynamic-form-builder.service';\nimport { Subscription } from 'rxjs';\nimport { isNgTemplate } from '@angular/compiler';\n// import { ConfirmationComponent, ConfirmDialogModel } from '../../common/confirmation/confirmation.component';\nimport { MatTabChangeEvent, MatPaginator, MatTableDataSource, MatSort, MatSnackBar, MatDialog } from '@angular/material';\n\n\n\n\n\n@Component({\n  selector: 'field-builder',\n  template: `\n  <style>\n  .mat-slider-horizontal {\n    min-width: 80% !important;\n  }\n  .example-radio-group {\n    display: flex;\n    flex-direction: block;\n    margin: 15px 0; \n  }\n\n  .mat-form-field {\n    display: block;\n    position: relative;\n    flex: auto;\n    min-width: 0;\n    width: 100%;\n  }\n\n  .input-group {\n    position: relative;\n     border-collapse: separate;\n     display: block;\n  }\n  \n  .example-radio-button {\n    margin: 5px;\n  }\n  .action-component {\n    padding:10px 10px 0px 0px;\n    right: 0px;\n    cursor: pointer;\n    float: right;\n  \n}\nspan.cursor-pntr {\n  cursor: pointer;\n  padding: 3px;\n}\n.form-control {\n  display: block;\n  visibility: hidden;\n\n}\n.addicon {\n  margin-left: 90%\n}\n.spacearoundbtn{\n  margin-top: 10px;\n  margin-bottom: 15px;\n}\n.label.col-md-8.form-control-label {\n  text-decoration: underline;\n}\n@media only screen and (max-width: 600px) {\n  .col-sm-12 {\n    padding: 0px\n  }\n  .col-sm-6 {\n    padding: 0px\n  }\n}\n\n  </style>\n  <div class=\"row\" *ngIf=\"openEdit\" style=\"padding: 15px;\n  border: 1px solid #ccc;margin-top:10px;width:85%;margin-top:40px;margin: auto;\n  box-shadow: 1px 1px 1px 1px rgba(0,0,0,0.19);margin-top:20px;\">\n    <div class=\"col-sm-6\">\n      <mat-form-field>\n        <input matInput placeholder=\"Label\" [(ngModel)]=\"label\" name=\"label\">\n      </mat-form-field>\n    </div>\n  \n    <div class=\"col-sm-6\">\n      <mat-form-field>\n        <input matInput placeholder=\"Input Place Holder\" [(ngModel)]=\"placeholder\" name=\"placeholder\">\n      </mat-form-field>\n    </div>\n  \n    <div class=\"col-sm-6\">\n      <mat-form-field>\n        <input matInput placeholder=\"Hint/Description\" [(ngModel)]=\"description\" name=\"Description\">\n      </mat-form-field>\n    </div>\n  \n    <div class=\"col-sm-6 \" style=\"display:none\">\n      <mat-form-field>\n        <mat-label>Input Type</mat-label>\n        <mat-select [(ngModel)]=\"type\">\n          <mat-option value=\"text\">text</mat-option>\n          <mat-option value=\"number\">number</mat-option>\n          <mat-option value=\"radio\">radio</mat-option>\n          <mat-option value=\"date\">date</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  \n    <div class=\"col-sm-5\">\n      <mat-form-field>\n        <mat-label>Pages</mat-label>\n  \n        <mat-select [(ngModel)]=\"pageNumber\">\n          <mat-option *ngFor=\"let page of pages; let i = index\" value=\"{{page.value}}\">{{page.label}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"col-sm-1\">\n      <span class=\"cursor-pntr addicon\"><i title=\"Add Page\" class=\"fa fa-plus\"\n          (click)=\"add(pages)\"></i></span>\n    </div>\n  \n    <div class=\"col-sm-6\">\n      <mat-form-field>\n        <mat-label>Criteria</mat-label>\n        <mat-select [(ngModel)]=\"draftCriteriaId\">\n          <mat-option *ngFor=\"let item of criteriaList\" [value]=\"item._id\">{{ item.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"col-sm-6\">\n    <label id=\"example-radio-group-label\">is Reqired ?</label>\n    <mat-radio-group aria-labelledby=\"radio-group-label\" class=\"radio-group\" [(ngModel)]=\"required\">\n      <mat-radio-button class=\"example-radio-button\" [value]=true>\n        Yes\n      </mat-radio-button>\n      <mat-radio-button class=\"example-radio-button\" [value]=false>\n        No\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n  \n  \n  \n    <div class=\"col-sm-6\" *ngIf=\"type=='slider'\">\n      <mat-form-field>\n        <input type=\"text\" placeholder=\"Min\" matInput [(ngModel)]=\"min\" name=\"min value\">\n      </mat-form-field>\n    </div>\n  \n    <div class=\"col-sm-6\" *ngIf=\"type=='slider'\">\n      <mat-form-field>\n        <input type=\"text\" placeholder=\"Max\" matInput [(ngModel)]=\"max\" name=\"min value\">\n      </mat-form-field>\n    </div>\n  \n    <div class=\"col-sm-6\" *ngIf=\"type=='date'\">\n      <mat-form-field>\n        <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"minDate\" placeholder=\"Choose a min date\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n  \n      <mat-form-field>\n        <input matInput [matDatepicker]=\"pickerMaxDate\" [(ngModel)]=\"maxDate\" placeholder=\"Choose a max date\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerMaxDate\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerMaxDate></mat-datepicker>\n      </mat-form-field>\n  \n  \n    </div>\n    <div class=\"\" *ngIf=\"type=='radio' || type=='checkbox' || type=='dropdown'\">\n      <label for=\"label\" class=\"col-sm-12\">Options</label>\n  \n      <ul class=\"col-sm-12 option-ul\" *ngFor=\"let opt of options;let i = index\">\n        <li class=\"\">\n          <span>{{opt.label}} </span><span style=\"\n      margin-left: 30px;cursor: pointer\" title = \"delete\" (click)=\"deleteOption(opt,i)\">\n            <i class=\"fa fa-trash\"></i></span>\n        </li>\n      </ul>\n  \n      <div class=\"col-sm-12\">\n        <div class=\"input-group pull-left col-sm-6\">\n          <mat-form-field>\n            <input type=\"text\" placeholder=\"Label\" matInput style=\"\" [(ngModel)]=\"newOptionLabel\"\n              name=\"newOption\">\n          </mat-form-field>\n        </div>\n        <button mat-flat-button color=\"primary\" class = \"spacearoundbtn\" (click)=\"AddNewOptions()\">\n          Add\n        </button>\n      </div>\n    </div>\n  \n    <div *ngIf=\"filtereddata && filtereddata.length > 0\">\n      <div class=\"col-sm-12\">\n        <label id=\"example-radio-group-label\">Do you want to related the question based on below options ?</label>\n        <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\"\n          [(ngModel)]=\"selectedOption\">\n          <mat-radio-button class=\"example-radio-button\" *ngFor=\"let ele of options\" [value]=\"ele\">\n            {{ ele.label }}\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n  \n  \n      <div class=\"col-sm-6\">\n        <mat-form-field>\n          <mat-label>Select Question to add </mat-label>\n          <select matNativeControl [(ngModel)]=\"currentSelectedQtn\">\n            <option *ngFor=\"let values of filtereddata\" [ngValue]=\"values\"> {{ values.label }} </option>\n          </select>\n        </mat-form-field>\n      </div>\n  \n      <div class=\"col-sm-6\" *ngIf=\"type=='text' || type=='date' || type=='number'\">\n        <mat-form-field>\n          <mat-label>Select Condition </mat-label>\n          <select matNativeControl [(ngModel)]=\"condition\">\n            <option *ngFor=\"let values of conditionArray\" [ngValue]=\"values.condition\"> {{ values.label }} </option>\n          </select>\n        </mat-form-field>\n      </div>\n  \n      <div class=\"col-sm-6\" *ngIf=\"type=='text' || type=='date' || type=='number'\">\n        <mat-form-field>\n          <input type=\"text\" matInput name=\"conditionMatchValue\" placeholder=\"Value\" [(ngModel)]=\"conditionMatchValue\">\n        </mat-form-field>\n      </div>\n  \n      <div class=\"col-sm-2\">\n        <button mat-flat-button color=\"primary\" class = \"spacearoundbtn\" (click)=\"parentMapping()\">\n          Add\n        </button>\n      </div>\n    </div>\n  \n    <ul class=\"col-sm-12\" *ngFor=\"let relate of listOfRelation;let i = index\">\n      <li class=\"col-sm-12\">\n        <span>{{relate.label}} </span><span style=\"\n  margin-left: 30px;\" (click)=\"deleteCondition(relate,i)\">\n          <i class=\"fa fa-trash\"></i></span>\n      </li>\n    </ul>\n  \n  \n   \n  \n    <div class=\"col-sm-12\" *ngIf=\"type=='date'\">  \n    <label id=\"example-radio-group-label\">is autoCollect</label>\n      <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [(ngModel)]=\"autoCollect\">\n        <mat-radio-button class=\"example-radio-button\" [value]=true>\n          True\n        </mat-radio-button>\n        <mat-radio-button class=\"example-radio-button\" [value]=false>\n          False\n        </mat-radio-button>\n      </mat-radio-group>\n    </div>\n  \n  \n    <div class=\"col-sm-12\">\n  \n      <button mat-flat-button color=\"primary\" style=\"margin-right:10px;\" (click)=\"closeModel('save')\">\n        Save\n      </button>\n  \n    </div>\n  \n  </div>\n  <div class=\"form-group row\" [formGroup]=\"form\"\n    style=\"padding:0px;margin:0px;margin-top:10px;box-shadow: 1px 1px 2px 1px rgba(0,0,0,0.19);padding-bottom:10px;\">\n    <span class=\"qtn_position\"><span class=\"\">#{{ field.position }}</span></span>\n  \n    <div class=\"action-component\">\n  \n      <span class=\"cursor-pntr\" title = \"delete\" (click)=\"deleteElement(field)\"><i class=\"fa fa-trash\"></i> </span>\n      <span class=\"cursor-pntr\" title = \"copy\" (click)=\"copyElement(field)\"><i class=\"fa fa-copy\"></i></span>\n      <span class=\"cursor-pntr\" title = \"edit\"><i class=\"fa fa-edit\" (click)=\"loadFormElement(field)\"></i></span>\n  \n    </div>\n    <div class=\"col-md-12\" [ngSwitch]=\"field.type\">\n      <textbox *ngSwitchCase=\"'number'\" [field]=\"field\" [form]=\"form\"></textbox>\n      <textbox *ngSwitchCase=\"'text'\" [field]=\"field\" [form]=\"form\"></textbox>\n      <date *ngSwitchCase=\"'date'\" [field]=\"field\" [form]=\"form\"></date>\n      <slider *ngSwitchCase=\"'slider'\" [field]=\"field\" [form]=\"form\"></slider>\n      <dropdown *ngSwitchCase=\"'dropdown'\" [field]=\"field\" [form]=\"form\"></dropdown>\n      <checkbox *ngSwitchCase=\"'checkbox'\" [field]=\"field\" [form]=\"form\"></checkbox>\n      <radio *ngSwitchCase=\"'radio'\" [field]=\"field\" [form]=\"form\"></radio>\n      <lib-multi-select *ngSwitchCase=\"'matrix'\" cdkDrag   (sendDataToParent)=\"eventFromChild($event)\" \n      (childrenDropEvent)=\"childrenDropEvent($event)\" [field]=\"field\" [form]=\"form\"></lib-multi-select>\n      <file *ngSwitchCase=\"'file'\" [field]=\"field\" [form]=\"form\"></file>\n      <div style=\"float:right\">\n      </div>\n    </div>\n    </div>`,\n  styles: [`\n  .qtn_position {\n    float: left;\n    width: 40px;\n    padding: 5px 0px 0px 5px;\n    color: #ccc;\n  }\n  .radio-group {\n    display: inline-block;\n    margin: 15px 0; \n  }\n   .option-ul {\n    padding-left: 44px;\n    padding-top: 5px;\n   }\n  \n  `\n  ]\n})\n\n// <div class=\"alert alert-danger my-1 p-2 fadeInDown animated\" *ngIf=\"!isValid && isDirty\">{{field.label}} is required</div>\n\nexport class FieldBuilderComponent implements OnInit {\n  @Input() field: any;\n\n  @Input() criteriaList: any;\n  @Input() form: any;\n\n  @Output() sendDataToParent = new EventEmitter<any>();\n\n  @Output() copyOrDeleteEvent = new EventEmitter<any>();\n  filtereddata: any;\n  getSelectQuestion: any;\n  closeResult: string;\n  modalReference: any;\n  label: any;\n  type: any;\n  placeholder: any;\n  options: any;\n  newOptionKey: any;\n  newOptionLabel: any;\n\n  pages = [{\n    label: 'page 1',\n    value: 'page 1'\n  }, {\n    label: 'page 2',\n    value: 'page 2'\n  }, {\n    label: 'page 3',\n    value: 'page 3'\n  }]\n\n  activeModelData: any;\n  validations: any;\n  required: any;\n  autoCollect: any;\n  openEdit: boolean = false;\n  _id: any;\n  description: any;\n  pageNumber: any;\n  minDate: any;\n  maxDate: any;\n  min: any;\n  max: any;\n  draftCriteriaId: any;\n  subscription: Subscription;\n  allData: any;\n  currentSelectedQtn: any;\n  selectedOption: any;\n\n  listOfRelation: any = [];\n  condition: any;\n\n  conditionMatchValue: any;\n\n  conditionArray: any = [\n    {\n      label: \"equals\",\n      condition: \"===\"\n    },\n    {\n      label: \"Not Equal To\",\n      condition: \"!=\"\n    },\n    {\n      label: \"Greater Than\",\n      condition: \">\"\n    },\n    {\n      label: \"Less Than\",\n      condition: \"<\"\n    },\n    {\n      label: \"Greater Than Or Equal\",\n      condition: \">=\"\n    },\n    {\n      label: \"Less Than Or Equal\",\n      condition: \"<=\"\n    }\n  ]\n\n\n  // private modalRef: NgbModalRef;\n  @ViewChild('content', { static: false }) myModal: ElementRef;\n\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n  constructor(\n    // private modalService: NgbModal\n    private dynamicServe: DynamicFormBuilderService,\n    private _snackBar: MatSnackBar,\n    private dialog: MatDialog\n  ) {\n\n  }\n\n  // getAll(){\n  //   this.subscription = this.dynamicServe.getALl().subscribe(message => { \n  //     console.log(\"get all info\",message);\n\n  //    });\n\n  // }   \n\n\n  parentMapping() {\n    console.log(this.condition, \"condition\", this.currentSelectedQtn, \"selectedOption\", this.selectedOption);\n    let obj = {}\n    // option:this.selectedOption,\n    // question:this.currentSelectedQtn\n    // obj['visibleIf'] = [];\n\n\n    let condiObj = {\n      operator: this.condition,\n      value: this.conditionMatchValue,\n      field: this.field.field,\n      label: this.field.label\n      // parent:this.selectedOption.field\n    }\n\n    // if (this.currentSelectedQtn.parentChildren) {\n    //   this.currentSelectedQtn.parentChildren.push(condiObj);\n    // } else {\n    //   this.currentSelectedQtn.parentChildren = [];\n    //   this.currentSelectedQtn.parentChildren.push(condiObj);\n    // }\n    console.log('this.currentSelectedQtn', this.currentSelectedQtn);\n\n    console.log(\"condiObj\", condiObj);\n    this.getSelectQuestion = this.allData['questionList']['questionList'].filter(ele => {\n      if (ele.field == this.field.field) {\n        return ele;\n      }\n    });\n\n    console.log(\"getSelectQuestion\", this.getSelectQuestion);\n\n    let isAvailable = false;\n    if (this.getSelectQuestion['visibleIf'] && this.getSelectQuestion['visibleIf'].length > 0) {\n      isAvailable = this.getSelectQuestion['visibleIf'].filter(item => {\n        if (item.visibleIf.field == this.field.field) {\n          return true\n        }\n      })\n    }\n\n\n\n\n\n    console.log(\"after getSelectQuestion\", this.getSelectQuestion);\n\n    let allData = [];\n\n\n\n    let addObj = false;\n    for (let i = 0; i < this.getSelectQuestion.length; i++) {\n      debugger\n      if (this.getSelectQuestion[i].parentChildren) {\n        if (this.getSelectQuestion[i].parentChildren.indexOf(this.currentSelectedQtn.field) !== -1) {\n          alert(\"Value exists!\")\n\n          addObj = false;\n\n        } else {\n\n          addObj = true;\n          this.getSelectQuestion[i].parentChildren.push(this.currentSelectedQtn.field);\n        }\n\n      } else {\n        addObj = true;\n        this.getSelectQuestion[i].parentChildren = [];\n        this.getSelectQuestion[i].parentChildren.push(this.currentSelectedQtn.field);\n      }\n    }\n\n\n    if (addObj) {\n\n\n      allData = this.allData['questionList']['questionList'].filter(ele => {\n        if (ele.field == this.currentSelectedQtn.field) {\n          if (ele.visibleIf && ele.visibleIf.length > 0 && isAvailable == false) {\n            ele.visibleIf.push(condiObj);\n          } else {\n            ele.visibleIf = [];\n            ele.visibleIf.push(condiObj);\n          }\n          return ele;\n        } else {\n          return ele\n        }\n      });\n\n\n\n      console.log(\"all data in question\", allData);\n\n      // this.sendDataToParent()\n\n\n\n\n\n\n      if (!this.listOfRelation.includes(condiObj)) {\n\n        this.listOfRelation.push(condiObj);\n\n\n      }\n\n\n    }\n\n\n\n    if (this.condition) {\n\n\n\n\n    }\n\n\n\n    // 'option':this.selectedOption,\n    //       'question':this.currentSelectedQtn\n\n    // this.field.childQnt = this.currentSelectedQtn.field;\n\n    console.log(\"this.field.validations.relation\", this.listOfRelation);\n\n\n  }\n\n  ngOnInit() {\n    // this.currentSelectedQtn = { };\n    // this.dynamicServe.getALl();\n    this.options = [];\n    this.validations = {\n      'relation': []\n    }\n\n    this.field.validations = {\n      'relation': []\n    };\n    this.dynamicServe.setPageNumber(this.pages);\n  }\n  loadFormElement(item) {\n\n    console.log('loadFormElement', item);\n    this.allData = this.dynamicServe.getALl();\n\n    console.log(this.allData, \" all questions \", this.allData['questionList']);\n\n\n\n    this.filtereddata = this.allData['questionList']['questionList'].filter(t => t.field !== item.field);\n\n    this.allData['questionList']['questionList'];\n\n    this.criteriaList = this.allData['criteriaList'];\n    console.log('const filtereddata', this.filtereddata);\n    // console.log('length', this.filtereddata['questionList'].length);\n\n    // this.dynamicServe.getALl()\n\n    // console.log(\"item ---\", );\n\n    this.activeModelData = \"\";\n    this.label = item.label;\n    this.type = item.type;\n    this.placeholder = item.placeholder;\n    this.options = item.options;\n    this.draftCriteriaId = item.draftCriteriaId;\n    // this.pages = this.pages\n    this.required = item.validations.required;\n\n    this.description = item.description;\n    this.pageNumber = item.pageNumber;\n\n    if (item.validations.relation) {\n      this.listOfRelation = item.validations.relation;\n    }\n\n    if (item.type == \"date\") {\n      this.minDate = item.validations.minDate;\n      this.maxDate = item.validations.maxDate\n      this.autoCollect = item.validations.autoCollect;\n    }\n    else if (item.type == \"slider\") {\n      this.min = item.validations.min;\n      this.max = item.validations.max;\n    }\n\n\n\n    this.required = this.field.validations.required;\n    console.log(item.validations.required, \"item.validations.required\", this.required, \"label\", this.label);\n    // console.log(\"label\",this.label);\n\n    this.openEdit = this.openEdit ? false : true;\n    // document.getElementById(\"openModalButton\").click();\n    // this.open(this.myModal);\n    // this.myModal.show();\n    // this.myModal.nativeElement.className = 'modal fade show';\n\n  }\n\n  saveEdit() {\n  }\n  closeModel(action) {\n\n    if (action == \"save\") {\n\n\n\n      console.log(this.validations, \"this.field\", this.required);\n      // this.modalReference.close();\n\n\n      // this.activeModelData.field = this.field.field;\n\n      // this.activeModelData.label = this.label;\n      // this.activeModelData.type = this.type;\n      // this.activeModelData.placeholder = this.placeholder;\n      // this.activeModelData.options = this.options;\n\n      let obj = {\n        label: this.label,\n        type: this.type,\n        placeholder: this.placeholder,\n        options: this.options,\n        validations: this.validations,\n        field: this.field,\n        _id: this._id,\n        description: this.description,\n        pageNumber: this.pageNumber,\n        draftCriteriaId: this.draftCriteriaId,\n\n      }\n\n      if (this.type == 'date') {\n        obj['minDate'] = this.minDate;\n        obj['maxDate'] = this.maxDate\n      } else if (this.type == 'slider') {\n        obj['min'] = this.min;\n        obj['max'] = this.max;\n      }\n\n      // console.log(\"obj\",obj);\n\n\n\n\n      // this.field.label = this.label;\n\n\n      this.field.label = this.label;\n      this.field.type = this.type;\n      this.field.placeholder = this.placeholder;\n      this.field.options = this.options;\n      this.field.description = this.description;\n      this.field.pageNumber = this.pageNumber;\n      this.field.draftCriteriaId = this.draftCriteriaId;\n      // this.field.field = this.field.field;\n\n      if (this.type == 'date') {\n        this.field.validations.minDate = this.minDate;\n        this.field.validations.maxDate = this.maxDate;\n        this.field.validations.autoCollect = this.autoCollect;\n      } else if (this.type == 'slider') {\n        this.field.validations.min = this.min;\n        this.field.validations.max = this.max;\n      }\n\n      // if(this.field.validations.relation){\n\n      if (this.listOfRelation) {\n        obj.validations.relation = this.listOfRelation;\n        this.field.validations.relation = this.listOfRelation;\n      }\n\n      // }\n\n\n\n      // this.field.validations\n\n      // console.log(\" this.field.validations.required\", this.field.validations.required, \"sdds\", this.required);\n      this.field.validations.required = this.required;\n      this.field.validations.autoCollect = this.autoCollect;\n\n\n      console.log(obj, \"this.field.validations\", this.field.validations);\n      let op = {\n        action: \"save\",\n        data: obj\n      }\n\n      this.dynamicServe.updateQuestion(this.field);\n\n      this.sendDataToParent.emit(op);\n      // this.sendDataToParent.emit(JSON.stringify(obj));\n\n      // console.log(\" this.field\", this.field);\n      this.openEdit = false;\n\n      // this.sendDataToParent.emit(this.activeModelData);\n\n    } else {\n\n      this.openEdit = false;\n      // this.modalReference.close();\n    }\n\n    // this.modalService.close();\n    //  this.myModal.nativeElement.className = 'modal hide';\n  }\n\n  open(content) {\n\n\n\n    // console.log(\" this.activeModelData\", selectedData);\n    // this.modalReference = this.modalService.open(content);\n    // this.modalReference.result.then((result) => {\n    //   this.closeResult = `Closed with`;\n    // }, (reason) => {\n    //   this.closeResult = `Dismissed`;\n    // });\n  }\n\n  // private getDismissReason(reason: any): string {\n  //   // if (reason === ModalDismissReasons.ESC) {\n  //   //   return 'by pressing ESC';\n  //   // } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n  //   //   return 'by clicking on a backdrop';\n  //   // } else {\n  //   //   return `with: ${reason}`;\n  //   // }\n  // }\n\n  deleteOption(opt, index) {\n    // this.deleteDraftCriteria();\n    console.log(\"delete\", this.options);\n\n    // let newArr = [];\n    // let optionsArr = this.options.filter(item => {\n    // if(item.lable==opt.label && item.key==opt.key){\n\n    // }else{\n\n    // }\n\n    // return (item.label != opt.label && item.key != opt.key)\n\n    // if(item.lable==opt.label && item.key==opt.key){\n\n    // }else{\n    //   return true;\n    // }\n    // })\n    this.options.splice(index, 1);\n\n    // this.options = optionsArr;\n    console.log(\"delete new \", this.options);\n  }\n  AddNewOptions() {\n\n    if (this.newOptionLabel != \"\") {\n\n      this.newOptionKey = 'R' + this.options.length;\n      console.log(\"this.newOption\", this.newOptionLabel);\n\n      if (Array.isArray(this.options)) {\n\n      } else {\n        this.options = [];\n      }\n\n      this.options.push({\n        key: this.newOptionKey,\n        label: this.newOptionLabel\n      });\n\n      console.log(\"this.options.push\", this.options);\n    }\n    this.newOptionKey = \"\";\n    this.newOptionLabel = \"\";\n  }\n\n  copyElement(item) {\n    // this.field.push(item);\n    item.action = 'copy';\n    console.log(\"field ----------\", item);\n    this.copyOrDeleteEvent.emit(item);\n\n  }\n  deleteElement(item) {\n    item.action = 'delete';\n    this.field.isDelete = true;\n    this.copyOrDeleteEvent.emit(item);\n    console.log(\"field delete\", this.field);\n\n  }\n  childrenDropEvent($event) {\n    console.log(\"childrenDropEvent\", this.field);\n    // const action  = 'childDroped';\n    let newObj = {\n      action: 'childDroped',\n      data: $event\n    }\n    this.copyOrDeleteEvent.emit(newObj);\n    console.log(\"field delete\", this.field);\n  }\n\n  deleteCondition(data, value) {\n    // var index = this.listOfRelation.indexOf(value);\n    // if (index > -1) {\n    this.listOfRelation.splice(value, 1);\n    this.getSelectQuestion[0].parentChildren.splice(value, 1);\n    // }\n\n    console.log('after delete data', this.listOfRelation);\n  }\n\n\n  add(data) {\n    console.log(' add data', data);\n    let page = {\n      label: 'page' + ' ' + (data.length + 1),\n      value: 'page' + ' ' + (data.length + 1),\n    }\n    this.pages.push(page);\n    this.dynamicServe.setPageNumber(this.pages);\n  }\n\n  eventFromChild($event) {\n    if ($event.action == 'copy') {\n      // $event.action = 'copy';\n    } else {\n      $event.action = 'childDelete';\n    }\n\n    this.copyOrDeleteEvent.emit($event);\n  }\n\n  //  deleteDraftCriteria() {\n  //   let message = `Are you sure you delete criteria?`;\n  //   let dialogData = new ConfirmDialogModel(\"Confirm Action\", message);\n  //   const dialogRef = this.dialog.open(ConfirmationComponent, {\n  //     width: '350px',\n  //     data: dialogData\n  //   })\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     if (result) {\n  //       alert('result'+ result);\n  //     }\n  //   });\n  // }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n  selector: 'textbox',\n  template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-0 form-control-label labeloverflow\" [attr.for]=\"field.label\">\n      {{field.label}}\n      </label>\n    \n        <input *ngIf=\"!field.multiline\" [attr.type]=\"field.type\" class=\"form-control\"  [id]=\"field.field\" [name]=\"field.field\" >\n        <textarea *ngIf=\"field.multiline\"  [id]=\"field.field\"\n        rows=\"20\" class=\"form-control\" [placeholder]=\"field.placeholder\"></textarea>\n\n      </div> \n    `,\n    styles:[`\n    .form-control {\n      display: none;\n    }\n    .labeloverflow {\n      float: left;\n    }\n    `]\n})\nexport class TextBoxComponent {\n  @Input() field: any = {};\n  @Input() form: FormGroup;\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n \n  \n  constructor() {\n\n    // this.form.controls = this.field.name;\n    // console.log(\"form\",this.form);\n\n  }\n \n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'dropdown',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-sm-0 form-control-label labeloverflow\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <select class=\"form-control\" [id]=\"field.field\">\n          <option *ngFor=\"let opt of field.options\" [value]=\"opt.key\">{{opt.label}}</option>\n        </select>\n      </div> \n    `,\n    styles:[`\n    .form-control {\n      display: none;\n    }\n    .labeloverflow {\n      float: left;\n      padding-top: 5px;\n    }\n    `]\n})\nexport class DropDownComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n\n    constructor() {\n\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'file',\n    template: `\n      <div [formGroup]=\"form\">\n        <div *ngIf=\"!field.value\" class=\"drop-container dropzone\" dropZone \\\n          (dropped)=\"field.onUpload($event)\">\n          <p class=\"m-0\">\n            Drag a file here or\n            <label class=\"upload-button\">\n              <input type=\"file\" multiple=\"\" (change)=\"field.onUpload($event.target.files)\"> browse\n            </label>\n            to upload.\n          </p>\n        </div>\n        <div *ngIf=\"field.value\">\n          <!-- <button type=\"button\" class=\"btn btn-primary\">Change</button> -->\n          <div class=\"card\">\n            <img class=\"card-img-top\" [src]=\"field.value\">\n          </div>\n        </div>\n      </div> \n    `,\n    styles:[\n      `\n      .form-control {\n        display:none;\n      }\n      .drop-container {\n        background: #fff;\n        border-radius: 6px;\n        height: 150px;\n        width: 100%;\n        box-shadow: 1px 2px 20px hsla(0,0%,4%,.1);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border: 2px dashed #c0c4c7;\n      }\n      p {\n        font-size: 16px;\n        font-weight: 400;\n        color: #c0c4c7; \n      }\n      .upload-button {\n        display: inline-block;\n        border: none;\n        outline: none;\n        cursor: pointer;\n        color: #5754a3;\n      }\n      .upload-button input {\n        display: none;\n      }\n      .dropzone { \n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column; \n        border-radius: 5px;\n        background: white;\n        margin: 10px 0;\n      }\n      .dropzone.hovering {\n          border: 2px solid #f16624;\n          color: #dadada !important;\n      }\n      progress::-webkit-progress-value {\n        transition: width 0.1s ease;\n      }\n      `\n    ]\n})\nexport class FileComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n    }\n\n    ngOnChange(){\n      console.log(this.field.value);\n      // this.field.value.\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'checkbox',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-sm -12 form-control-label labeloverflow\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <div [formGroupName]=\"field.field\" >\n          <div *ngFor=\"let opt of field.options\" class=\"form-check form-check\">\n          <label class=\"form-check-label checkflow\">\n             <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\" />\n             {{opt.label}}</label>\n          </div>\n        </div>\n\n      </div> \n    `,\n    styles:[`\n    .form-control {\n      display: none;\n    }\n    .labeloverflow {\n      float: left;\n      padding-top: 5px;\n    }\n    .checkflow {\n      float: left;\n      width: 100%\n    }\n    `]\n})\nexport class CheckBoxComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'radio',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-sm-12 form-control-label labeloverflow\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <div class=\"form-check rnxtline\" *ngFor=\"let opt of field.options\">\n          <input class=\"form-check-input\" type=\"radio\" [id]=\"field.field\" [value]=\"opt.key\">\n          <label class=\"form-check-label space\">\n            {{opt.label}}\n          </label>\n        </div>\n      </div> \n    `,\n    styles:[`\n    .form-control {\n      display: none;\n    }\n    .space {\n      padding-left: 5px\n    }\n    .labeloverflow {\n      float: left;\n      padding-top: 5px;\n    }\n     .rnxtline {\n       float: left;\n       width: 100%\n     }\n    `]\n})\nexport class RadioComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'date',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-8 form-control-label labeloverflow\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <input *ngIf=\"!field.multiline\" [attr.type]=\"field.type\" class=\"form-control\" \n         [id]=\"field.field\" [name]=\"field.field\">\n        <textarea *ngIf=\"field.multiline\" [class.is-invalid]=\"isDirty && !isValid\" [id]=\"field.field\"\n        rows=\"20\" class=\"form-control\" [placeholder]=\"field.placeholder\"></textarea>\n\n      </div> \n    `,\n    styles:[`\n    .form-control {\n      display: none;\n    } .labeloverflow {\n      float: left;\n      padding-top: 5px;\n    }\n    `]\n})\nexport class DateComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n      // this.form.controls = this.field.name;\n      // console.log(\"form\",this.form);\n\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'slider',\n    template: `\n      <div [formGroup]=\"form\" >\n      <label class=\"col-md-0 form-control-label labeloverflow\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <input *ngIf=\"!field.multiline\" type=\"hidden\" class=\"form-control\" [id]=\"field.field\" [name]=\"field.field\">\n        \n        <mat-slider\n   class = \"tp-margin\"\n   [disabled] = \"false\"\n   [invert] = \"false\"      \n   [thumbLabel] = \"false\"\n   [max]=\"field.max\"\n   [min]=\"field.min\"    \n   [vertical] = \"false\">\n</mat-slider>\n\n      </div> \n    `,\n    styles:[`\n    .form-control {\n      display: none;\n    }\n    .labeloverflow {\n      float: left;\n    }\n    `]\n})\nexport class SliderComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n      // this.form.controls = this.field.name;\n      // console.log(\"form\",this.form);\n\n    }\n}","import { Component, Input, Output, EventEmitter, NgModule, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { DynamicFormBuilderService } from '../../dynamic-form-builder.service';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@NgModule({\n  imports: [ReactiveFormsModule, FormsModule],\n  declarations: []\n})\n\n\n@Component({\n  selector: 'lib-multi-select',\n  template: `<div [formGroup]=\"form\" dndDropzone (dndDrop)=\"onDropNew($event,field)\" class=\"card-body\">\n  <label class=\"col-md-0 form-control-label labeloverflow\" [attr.for]=\"field.label\">\n    {{field.label}}\n  </label>\n  <textarea rows=\"2\" class=\"form-control\">\n\n  </textarea>\n\n\n  <div *ngIf=\"field.child.length > 0\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\n\n    <div *ngFor=\"let obj of field.child; let i =index; let data\" cdkDrag>\n      <div class=\"col-sm-2 edit-icon actions\">\n        <i class=\"fa fa-trash\" title = \"delete\" (click)=\"deleteElement(obj, i)\"></i>\n        <i class=\"fa fa-copy\" title = \"copy\" (click)=\"copyElement(obj, i)\"></i>\n        <i class=\"fa fa-edit\" title = \"edit\" (click)=\"loadFormChildElement(obj, i)\"></i>\n      </div>\n      <div class=\"row\" *ngIf=\"obj.expand\" style=\"padding: 20px;\n      border: 1px solid #ccc;margin-top:10px; margin:40px; margin-left: 20%;\n      box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.19); margin-top:20px;\">\n\n        <div class=\"col-sm-6\">\n          <mat-form-field>\n            <input matInput placeholder=\"Label\" [(ngModel)]=\"obj.label\" [ngModelOptions]=\"{standalone: true}\">\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-sm-6\">\n          <mat-form-field>\n            <input matInput placeholder=\"Input Place Holder\" [(ngModel)]=\"obj.placeholder\"\n              [ngModelOptions]=\"{standalone: true}\">\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-sm-6\">\n          <mat-form-field>\n            <input matInput placeholder=\"Hint/Description\" [(ngModel)]=\"obj.description\"\n              [ngModelOptions]=\"{standalone: true}\">\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-sm-6\">\n          <mat-form-field>\n            <mat-label>Input Type</mat-label>\n            <mat-select [(ngModel)]=\"obj.type\" [ngModelOptions]=\"{standalone: true}\">\n              <mat-option value=\"text\">text</mat-option>\n              <mat-option value=\"number\">number</mat-option>\n              <mat-option value=\"radio\">radio</mat-option>\n              <mat-option value=\"date\">date</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-sm-6\" *ngIf=\"obj.type=='slider'\">\n          <mat-form-field>\n            <input type=\"text\" placeholder=\"Min\" matInput [(ngModel)]=\"min\" [ngModelOptions]=\"{standalone: true}\">\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-sm-6\" *ngIf=\"obj.type=='slider'\">\n          <mat-form-field>\n            <input type=\"text\" placeholder=\"Max\" matInput [(ngModel)]=\"max\" [ngModelOptions]=\"{standalone: true}\">\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-sm-6\" *ngIf=\"obj.type=='date'\">\n          <mat-form-field>\n            <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"minDate\" [ngModelOptions]=\"{standalone: true}\"\n              placeholder=\"Choose a min date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n\n          <mat-form-field>\n            <input matInput [matDatepicker]=\"pickerMaxDate\" [(ngModel)]=\"maxDate\" [ngModelOptions]=\"{standalone: true}\"\n              placeholder=\"Choose a max date\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerMaxDate\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerMaxDate></mat-datepicker>\n          </mat-form-field>\n\n\n        </div>\n        <div class=\"col-sm-12 form-group \" *ngIf=\"type=='radio' || type=='checkbox' || type=='dropdown'\">\n          <label for=\"label\" class=\"col-sm-12\">Options</label>\n\n          <div class=\"col-sm-7 form-group\" *ngIf=\"type=='slider'\">\n            <mat-form-field>\n              <input type=\"text\" placeholder=\"Max\" matInput [(ngModel)]=\"max\" [ngModelOptions]=\"{standalone: true}\">\n            </mat-form-field>\n          </div>\n\n        </div>\n\n        <div *ngIf=\"field.child && field.child.length > 0\">\n          <div class=\"col-sm-12\">\n            <label id=\"example-radio-group-label\">Do you want to related the question based on below options ?</label>\n            <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\"\n              [(ngModel)]=\"selectedOption\" [ngModelOptions]=\"{standalone: true}\">\n              <mat-radio-button style=\"padding: 10px\" class=\"example-radio-button\" *ngFor=\"let ele of options\"\n                [value]=\"ele\">\n                {{ ele.label }}\n              </mat-radio-button>\n            </mat-radio-group>\n          </div>\n\n\n          <div class=\"col-sm-6\">\n            <mat-form-field>\n              <mat-label>Select Question to add </mat-label>\n              <select matNativeControl [(ngModel)]=\"currentSelectedQtn\" [ngModelOptions]=\"{standalone: true}\">\n                <option *ngFor=\"let values of filtereddata\" [ngValue]=\"values\"> {{ values.label }} </option>\n              </select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Select Condition </mat-label>\n              <select matNativeControl [(ngModel)]=\"condition\" [ngModelOptions]=\"{standalone: true}\">\n                <option *ngFor=\"let values of conditionArray\" [ngValue]=\"values.condition\"> {{ values.label }} </option>\n              </select>\n            </mat-form-field>\n          </div>\n\n          <div class=\"col-sm-6\" *ngIf=\"type=='text' || type=='date' || type=='number'\">\n            <mat-form-field>\n              <input type=\"tex\" matInput name=\"conditionMatchValue\" placeholder=\"\" [(ngModel)]=\"conditionMatchValue\"\n                [ngModelOptions]=\"{standalone: true}\">\n            </mat-form-field>\n          </div>\n\n          <div class=\"col-sm-2\">\n            <button mat-flat-button color=\"primary\" style=\"margin-top: 10px;\" (click)=\"parentMapping()\">\n              Add\n            </button>\n          </div>\n        </div>\n\n        <ul class=\"col-sm-12\" *ngFor=\"let relate of listOfRelation;let i = index\">\n          <li class=\"col-sm-12\">\n            <span>{{relate.label}} </span><span style=\"\n      margin-left: 30px;\" (click)=\"deleteCondition(relate,i)\">\n              <i class=\"fa fa-trash\"></i></span>\n          </li>\n        </ul>\n\n\n        <div class=\"col-sm-12\">\n          <label id=\"example-radio-group-label\">is Reqired ?</label>\n          <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\"\n            [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"required\">\n            <mat-radio-button class=\"example-radio-button\" [value]=true>\n              Yes\n            </mat-radio-button>\n            <mat-radio-button class=\"example-radio-button\" [value]=false>\n              No\n            </mat-radio-button>\n          </mat-radio-group>\n        </div>\n\n        <div class=\"col-sm-7\" *ngIf=\"type=='date'\">\n          <label id=\"example-radio-group-label\">is autoCollect</label>\n          <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\"\n            [(ngModel)]=\"autoCollect\" [ngModelOptions]=\"{standalone: true}\">\n            <mat-radio-button class=\"example-radio-button\" [value]=true>\n              True\n            </mat-radio-button>\n            <mat-radio-button class=\"example-radio-button\" [value]=false>\n              False\n            </mat-radio-button>\n          </mat-radio-group>\n        </div>\n\n\n        <div class=\"col-sm-12\">\n\n          <button mat-flat-button color=\"primary\" style=\"margin-right:10px;\" (click)=\"closeModelChild('save', obj)\">\n            Save\n          </button>\n\n        </div>\n      </div>\n\n      <div class=\"col-md-0\" [ngSwitch]=\"obj.type\" style=\"width: 80%;\n          margin-left: 20%;\n          padding-left: 10px;\n          margin-top: 10px;\n          box-shadow: 1px 1px 2px 1px rgba(0,0,0,0.19);\n          padding-bottom: 30px;\">\n\n        <textbox style=\"padding-left:30px\" *ngSwitchCase=\"'number'\" [field]=\"obj\" [form]=\"form\"></textbox>\n\n        <textbox style=\"padding-left:30px\" *ngSwitchCase=\"'text'\" [field]=\"obj\" [form]=\"form\"></textbox>\n\n        <date style=\"padding-left:30px\" *ngSwitchCase=\"'date'\" [field]=\"obj\" [form]=\"form\"></date>\n\n        <slider style=\"padding-left:30px\" *ngSwitchCase=\"'slider'\" [field]=\"obj\" [form]=\"form\"></slider>\n\n        <dropdown style=\"padding-left:30px\" *ngSwitchCase=\"'dropdown'\" [field]=\"obj\" [form]=\"form\"></dropdown>\n\n        <checkbox style=\"padding-left:30px\" *ngSwitchCase=\"'checkbox'\" [field]=\"obj\" [form]=\"form\"></checkbox>\n\n        <radio style=\"padding-left:30px\" *ngSwitchCase=\"'radio'\" [field]=\"obj\" [form]=\"form\"></radio>\n\n        <file style=\"padding-left:30px\" *ngSwitchCase=\"'file'\" [field]=\"obj\" [form]=\"form\"></file>\n\n\n      </div>\n      \n    </div>\n\n  </div>\n</div>\n`,\n  styles: [`\n    .form-control {\n      display: none;\n    }\n    .mat-form-field {\n      display: block;\n    }\n    .fa {\n      padding: 3px;\n    }\n    .actions {\n      float: right;\n      cursor: pointer;\n     padding-top: 10px;\n     right: -70px;\n    }\n    .labeloverflow {\n      float: left;\n    }\n    @media only screen and (max-width: 600px) {\n      .actions {\n       position: inherit\n      }\n    }\n    `]\n})\nexport class MultiSelectComponent {\n\n  @Input() field: any = {};\n  @Input() form: any;\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n  @Output() sendDataToParent = new EventEmitter<string>();\n  @Output() childrenDropEvent = new EventEmitter<string>();\n  @Output() copyOrDeleteEvent = new EventEmitter<string>();\n  @Output() onFieldUpdate = new EventEmitter();\n\n  // obj:Object= {};\n\n  activeModelData: any;\n  validations: any;\n  required: any;\n  autoCollect: any;\n  openEditChild: boolean = false;\n  _id: any;\n  description: any;\n  minDate: any;\n  maxDate: any;\n  min: any;\n  max: any;\n  label: any;\n  type: any;\n  placeholder: any;\n  options: any;\n  pageNumber: any;\n  allData: any;\n  filtereddata: any;\n  conditionMatchValue: any;\n  selectedOption: any;\n  currentSelectedQtn: any;\n  listOfRelation: any = [];\n  condition: any;\n  getSelectQuestion: any;\n  conditionArray: any = [\n    {\n      label: \"equals\",\n      condition: \"===\"\n    },\n    {\n      label: \"Not Equal To\",\n      condition: \"!=\"\n    },\n    {\n      label: \"Greater Than\",\n      condition: \">\"\n    },\n    {\n      label: \"Less Than\",\n      condition: \"<\"\n    },\n    {\n      label: \"Greater Than Or Equal\",\n      condition: \">=\"\n    },\n    {\n      label: \"Less Than Or Equal\",\n      condition: \"<=\"\n    }\n  ]\n\n  constructor(public cdr: ChangeDetectorRef,\n    private dynamicServe: DynamicFormBuilderService) {\n\n    // this.form.controls = this.field.name;\n    // console.log(\"form\",this.form);\n\n  }\n  onDropNew($event, field) {\n    console.log(\"---- MultiSelectComponent -\", $event);\n\n    if ($event.data.responseType && $event.data.responseType != 'matrix') {\n\n      $event.data.mutiSelect = field;\n      this.childrenDropEvent.emit($event.data);\n    } else {\n      console.log(\"not allowed\");\n    }\n  }\n\n\n  parentMapping() {\n    console.log(this.condition, \"condition\", this.currentSelectedQtn, \"selectedOption\", this.selectedOption);\n    let obj = {}\n    // option:this.selectedOption,\n    // question:this.currentSelectedQtn\n    // obj['visibleIf'] = [];\n    let condiObj = {\n      operator: this.condition,\n      value: this.conditionMatchValue,\n      field: this.field.field,\n      label: this.field.label\n      // parent:this.selectedOption.field\n    }\n\n    // if (this.currentSelectedQtn.parentChildren) {\n    //   this.currentSelectedQtn.parentChildren.push(condiObj);\n    // } else {\n    //   this.currentSelectedQtn.parentChildren = [];\n    //   this.currentSelectedQtn.parentChildren.push(condiObj);\n    // }\n    console.log('this.currentSelectedQtn', this.currentSelectedQtn);\n\n    console.log(\"condiObj\", condiObj);\n    this.getSelectQuestion = this.allData['questionList']['questionList'].filter(ele => {\n      if (ele.field == this.field.field) {\n        return ele;\n      }\n    });\n\n    console.log(\"getSelectQuestion\", this.getSelectQuestion);\n\n    let isAvailable = false;\n    if (this.getSelectQuestion['visibleIf'] && this.getSelectQuestion['visibleIf'].length > 0) {\n      isAvailable = this.getSelectQuestion['visibleIf'].filter(item => {\n        if (item.visibleIf.field == this.field.field) {\n          return true\n        }\n      })\n    }\n    console.log(\"after getSelectQuestion\", this.getSelectQuestion);\n    let allData = [];\n    let addObj = false;\n    for (let i = 0; i < this.getSelectQuestion.length; i++) {\n      debugger\n      if (this.getSelectQuestion[i].parentChildren) {\n        if (this.getSelectQuestion[i].parentChildren.indexOf(this.currentSelectedQtn.field) !== -1) {\n          alert(\"Value exists!\")\n\n          addObj = false;\n\n        } else {\n\n          addObj = true;\n          this.getSelectQuestion[i].parentChildren.push(this.currentSelectedQtn.field);\n        }\n\n      } else {\n        addObj = true;\n        this.getSelectQuestion[i].parentChildren = [];\n        this.getSelectQuestion[i].parentChildren.push(this.currentSelectedQtn.field);\n      }\n    }\n    if (addObj) {\n      allData = this.allData['questionList']['questionList'].filter(ele => {\n        if (ele.field == this.currentSelectedQtn.field) {\n          if (ele.visibleIf && ele.visibleIf.length > 0 && isAvailable == false) {\n            ele.visibleIf.push(condiObj);\n          } else {\n            ele.visibleIf = [];\n            ele.visibleIf.push(condiObj);\n          }\n          return ele;\n        } else {\n          return ele\n        }\n      });\n      console.log(\"all data in question\", allData);\n      // this.sendDataToParent()\n      if (!this.listOfRelation.includes(condiObj)) {\n        this.listOfRelation.push(condiObj);\n      }\n    }\n    if (this.condition) {\n    }\n    // 'option':this.selectedOption,\n    //       'question':this.currentSelectedQtn\n    // this.field.childQnt = this.currentSelectedQtn.field;\n    console.log(\"this.field.validations.relation\", this.listOfRelation);\n  }\n\n  closeModelChild(action, data) {\n    if (action == \"save\") {\n      console.log(\"closeModel\", this.field);\n      console.log('!!!!!!!!!!!', data);\n      // this.modalReference.close();\n      // this.activeModelData.field = this.field.field;\n      // this.activeModelData.label = this.label;\n      // this.activeModelData.type = this.type;\n      // this.activeModelData.placeholder = this.placeholder;\n      // this.activeModelData.options = this.options;\n\n    \n\n      let obj = {\n        label: '',\n        type: '',\n        placeholder: '',\n        options: '',\n        validations: '',\n        field: '',\n        _id: this._id,\n        description: ''\n      }\n\n      obj.label = data.label;\n      obj.field = data.field;\n      obj.type = data.type;\n      obj.placeholder = data.placeholder;\n      obj.options = data.options;\n      obj.description = data.description;\n\n      if (data.type == 'date') {\n        obj['minDate'] = data.minDate;\n        obj['maxDate'] = data.maxDate\n      } else if (data.type == 'slider') {\n        obj['min'] = data.min;\n        obj['max'] = data.max;\n      }\n\n      // console.log(\"obj\",obj);\n\n      debugger;\n\n      var index = this.field.child.findIndex(el => el.field === this.currentItem.field);\n      this.field.child.splice(index, 1, obj)\n\n      // let newObj =  this.field.child.filter(item => {\n      //   if (item.field == this.currentItem.field) {\n      //     // this.field.child[this.currentItem.position] = obj;\n      //     return obj;\n      //   } else {\n      //     return item;\n      //   }\n      // });\n\n      console.log('aaaaaaaaaaa', this.field);\n\n\n\n      // this.sendDataToParent.emit(JSON.stringify(obj));\n\n\n      // this.field.label = this.label;\n\n\n      // this.field.label = this.label;\n      // this.field.type = this.type;\n      // this.field.placeholder = this.placeholder;\n      // this.field.options = this.options;\n      // this.field.description = this.description;\n\n      // if (this.type == 'date') {\n      //   this.field.validations.minDate = this.minDate;\n      //   this.field.validations.maxDate = this.maxDate;\n      //   this.field.validations.autoCollect = this.autoCollect;\n      // } else if (this.type == 'slider') {\n      //   this.field.validations.min = this.min;\n      //   this.field.validations.max = this.max;\n      // }\n\n      // this.field.validations\n\n      // console.log(\" this.field.validations.required\", this.field.validations.required, \"sdds\", this.required);\n      // this.field.validations.required = this.required;\n      // this.field.validations.autoCollect = this.autoCollect;\n\n\n      // console.log(\" this.field\", this.field);\n      this.openEditChild = false;\n\n      // this.sendDataToParent.emit(this.activeModelData);\n\n    } else {\n\n      this.openEditChild = false;\n      // this.modalReference.close();\n    }\n\n    // this.modalService.close();\n    //  this.myModal.nativeElement.className = 'modal hide';\n  }\n\n  currentItem: any;\n\n  loadFormChildElement(loadEle, id) {\n    console.log(\"item ---\", loadEle, \"id\", id);\n    loadEle.expand = !loadEle.expand;\n    this.activeModelData = \"\";\n    this.label = loadEle.label;\n    this.currentItem = loadEle;\n    this.allData = this.dynamicServe.getALl();\n    console.log('this.field', this.field);\n    // for(let i = 0; i < this.allData['questionList']['questionList'][0].child.length; i++) {\n    this.filtereddata = this.field.child.filter(t => t.field !== loadEle.field);\n    // }\n    // this.filtereddata = this.field.child;\n\n\n    console.log('multi select', this.allData);\n    console.log('this.filtereddata', this.filtereddata)\n    this.type = loadEle.type;\n    this.placeholder = loadEle.placeholder;\n    this.options = loadEle.options;\n    this._id = loadEle._id;\n    // this.required = item.validations.required;\n    this.description = loadEle.description;\n    if (loadEle.type == \"date\") {\n      this.minDate = loadEle.validations.minDate;\n      this.maxDate = loadEle.validations.maxDate\n      this.autoCollect = loadEle.validations.autoCollect;\n    }\n    else if (loadEle.type == \"slider\") {\n      this.min = loadEle.validations.min;\n      this.max = loadEle.validations.max;\n    }\n\n    // this.required = this.field.validations.required;\n\n    // console.log(item.validations.required, \"item.validations.required\",\n    // this.required, \"label\", this.label);\n    // console.log(\"label\",this.label);\n    this.openEditChild = this.openEditChild ? false : true;\n    this.cdr.detectChanges();\n    // document.getElementById(\"openModalButton\").click();\n    // this.open(this.myModal);\n    // this.myModal.show();\n    // this.myModal.nativeElement.className = 'modal fade show';\n  }\n\n  deleteCondition(data, value) {\n    // var index = this.listOfRelation.indexOf(value);\n    // if (index > -1) {\n    this.listOfRelation.splice(value, 1);\n    this.getSelectQuestion[0].child.splice(value, 1);\n    // }\n\n    console.log('after delete data', this.listOfRelation);\n  }\n\n  deleteElement(item, index) {\n    console.log('deleteElement', item);\n    this.field.deleteindex = index;\n\n    this.field.isDelete = true;\n    // this.field.child.splice(index, 1);\n  console.log('deleteElement', this.field);\n  \n    this.sendDataToParent.emit( this.field);\n    // this.childrenDropEvent.emit(item);\n    // console.log(\"field delete\", this.field, 'index', index);\n    // console.log('after delete', this.allData);\n\n  }\n\n  copyElement(item, index) {\n    // this.field.push(item);\n    console.log(\"before copy field ----------\", this.field.child.length);\n\n    let lengthOfChild = this.field.child.length + 1;\n    let newobj: any = {\n    action: \"copy\",\n    description: item.description,\n    field: item.field + '' +lengthOfChild ,\n    label: item.label,\n    placeholder: item.placeholder,\n    position: item.pointer,\n    type: item.type\n    }\n   \n    console.log(\"after copy field ----------\", newobj, 'index', index);\n    this.field.child.push(newobj);\n    // this.copyOrDeleteEvent.emit(item);\n    // this.sendDataToParent.emit(newobj);\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.field.child, event.previousIndex, event.currentIndex);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\n\n\n// components\nimport { DynamicFormBuilderComponent } from './dynamic-form-builder.component';\nimport { FieldBuilderComponent } from './field-builder/field-builder.component';\nimport { TextBoxComponent } from './atoms/textbox';\nimport { DropDownComponent } from './atoms/dropdown';\nimport { FileComponent } from './atoms/file';\nimport { CheckBoxComponent } from './atoms/checkbox';\nimport { RadioComponent } from './atoms/radio';\nimport { DateComponent } from './atoms/date';\nimport { SliderComponent } from './atoms/slider';\n\n// import {MatIconModule} from '@angular/material/icon';\n// import { NgDragDropModule } from 'ng-drag-drop';\n// import { DragAndDropModule } from 'angular-draggable-droppable';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport  {\n  MatButtonModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatInputModule ,\n  MatSliderModule,\n  MatSelectModule\n} from '@angular/material';\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { MultiSelectComponent } from './atoms/multi-select';\nimport { DndModule } from 'ngx-drag-drop';\n\nimport {  DynamicFormBuilderService } from '../dynamic-form-builder.service'\n// import {  } from '@angular/cdk/'\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSliderModule,\n    MatSelectModule,\n    // MatIconModule\n    AngularFontAwesomeModule,\n    DragDropModule,\n    DndModule\n  ],\n  declarations: [\n    DynamicFormBuilderComponent,\n    FieldBuilderComponent,\n    TextBoxComponent,\n    DropDownComponent,\n    CheckBoxComponent,\n    FileComponent,\n    RadioComponent,\n    DateComponent,\n    SliderComponent,\n    MultiSelectComponent\n    \n  ],\n  exports: [DynamicFormBuilderComponent],\n  providers: [DynamicFormBuilderService]\n})\nexport class DynamicFormBuilderModule { }\n","import { NgModule } from '@angular/core';\nimport { DynamicFormBuilderComponent } from './dynamic-form-builder.component';\n\nimport { CommonModule } from '@angular/common';\n// import { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n// import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// dynamic form builder\nimport { DynamicFormBuilderModule } from './dynamic-form-builder/dynamic-form-builder.module';\n// import {} from './'\n\n// import { FormComponent } from './form.component';\nimport { HttpClientModule } from '@angular/common/http';\n// import { NgDragDropModule } from 'ng-drag-drop';\n// import { DragAndDropModule } from 'angular-draggable-droppable';\n\n\n// import { DragulaModule } from 'ng2-dragula';\n// \n// import  {  } from ''\n// import { ConfirmationComponent} from './common/confirmation/confirmation.component';\n\n// import  { MatButtonModule,MatDatepickerModule, MatDialogModule, MatFormFieldModule,\n//   MatTabsModule, MatSelectModule} from '@angular/material'\n\n  import { MatTooltipModule,MatTabsModule,MatRadioModule,MatCardModule,\n    MatDialogModule, MatButtonModule, MatStepperModule, MatFormFieldModule, \n    MatInputModule, MatSelectModule,MatTableModule,MatExpansionModule,\n    MatPaginatorModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatToolbarModule\n   } from '@angular/material';\n\nimport { DndModule } from 'ngx-drag-drop';\n\n\n@NgModule({\n  declarations: [DynamicFormBuilderComponent],\n  imports: [\n    // BrowserModule,\n    CommonModule,\n     ReactiveFormsModule,\n    DynamicFormBuilderModule,\n    HttpClientModule,\n    FormsModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatDialogModule,\n    MatTooltipModule,MatTabsModule,MatRadioModule,MatCardModule,\n    MatTableModule,MatExpansionModule,\n    MatPaginatorModule,\n    MatNativeDateModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatStepperModule,\n    // NgbModule.forRoot(),\n    // DragulaModule.forRoot()\n    // DragAndDropModule\n    MatFormFieldModule,\n    DndModule,\n    MatButtonModule,\n    MatDatepickerModule\n  ],\n  entryComponents: [],\n  exports: [DynamicFormBuilderComponent]\n})\nexport class DynamicFormBuilderModule1 {\n\n\n }\n"],"names":["tslib_1.__values","DynamicFormBuilderComponent"],"mappings":"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"}
