{"version":3,"file":"dynamic-form-builder.js","sources":["ng://dynamic-form-builder/lib/dynamic-form-builder.service.ts","ng://dynamic-form-builder/lib/dynamic-form-builder.component.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/dynamic-form-builder.component.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/field-builder/field-builder.component.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/textbox.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/dropdown.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/file.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/checkbox.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/radio.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/date.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/slider.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/multi-select.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/dynamic-form-builder.module.ts","ng://dynamic-form-builder/lib/dynamic-form-builder.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n// @Injectable({\n//   // providedIn: 'root'\n// })\nexport class DynamicFormBuilderService {\n\n  constructor() { }\n}\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, FormArray } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { DndDropEvent } from 'ngx-drag-drop'\n\n// import  { } from './dynamic-form-builder.service'\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'lib-dynamic-form-builder',\n  template: `<style>\n  p {\n      font-family: Lato;\n    }\n    .noPadding {\n        padding: 0px;\n    }\n    .margin-5 {\n        margin-top:5%;\n    }\n    .element {\n      border: 1px solid #ccc;\n      padding: 10px;\n      margin-bottom: 10px;\n      color: #333;\n      text-align: left;\n      text-transform: capitalize;\n      box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.19);\n  }\n    .form-group {\n        margin-bottom: 0.5rem;\n        border: 1px solid #ece7e7;\n    }\n    .cursor-pntr {\n        cursor: pointer;\n    }\n    \n    \n  </style>\n  <div class=\"col-sm-12\">\n      \n\n    <div class=\"col-sm-12 noPadding\">\n    <mat-tab-group>\n    <mat-tab label=\"Page 1\"> \n    <div class=\"card\">\n          <div dndDropzone class=\"card-body\" (dndDrop)=\"onDrop($event)\">\n              <form (ngSubmit)=\"onSubmit(this.form.value)\" [formGroup]=\"form\" class=\"form-horizontal\">\n            <dynamic-form-builder [fields]=\"getFields()\" [form]=\"form\"  (onFieldUpdate)=\"onFieldUpdate($event)\" ></dynamic-form-builder>\n            </form>\n          </div>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Page 2\"> \n    <div class=\"card\">\n          <div dndDropzone class=\"card-body\" (dndDrop)=\"onDrop($event)\">\n              <form (ngSubmit)=\"onSubmit(this.form.value)\" [formGroup]=\"form\" class=\"form-horizontal\">\n            <dynamic-form-builder [fields]=\"getFields()\" [form]=\"form\"  (onFieldUpdate)=\"onFieldUpdate($event)\" ></dynamic-form-builder>\n            </form>\n          </div>\n        </div>\n     </mat-tab>\n    <mat-tab label=\"Page 3\">\n    <div class=\"card\">\n          <div dndDropzone class=\"card-body\" (dndDrop)=\"onDrop($event)\">\n              <form (ngSubmit)=\"onSubmit(this.form.value)\" [formGroup]=\"form\" class=\"form-horizontal\">\n            <dynamic-form-builder [fields]=\"getFields()\" [form]=\"form\"  (onFieldUpdate)=\"onFieldUpdate($event)\" ></dynamic-form-builder>\n            </form>\n          </div>\n        </div>\n     </mat-tab>\n    </mat-tab-group>\n      </div>\n\n      <div class=\"col-sm-4\" style=\"padding-top:25px\">\n          \n          <div  class=\"col-md-12\">\n            <!-- <dynamic-form-builder [fields]=\"getFields()\"></dynamic-form-builder> -->\n      \n            <span *ngFor=\"let item of jsonData\" style =\"padding:5px\">\n              <span [dndDraggable]=\"item\"  class=\"element\"  >{{ item.responseType }}</span>\n              </span>\n\n              <!-- <div class=\"col-sm-12 element\" (click)=\"addFormElement(item.responseType)\" >Number</div> -->\n            <!-- <div class=\"col-sm-12 element\" (click)=\"addFormElement('input')\" >Input</div>\n            <div class=\"col-sm-12 element\" (click)=\"addFormElement('number')\" >Number</div> -->\n\n          </div>\n      </div>\n\n\n      \n      <div class=\"col-sm-12\">\n      </div>`,\n  styleUrls: []\n})\nexport class DynamicFormBuilderComponent implements OnInit {\n  public form: FormGroup;\n  unsubcribe: any;\n  jsonData: any;\n  formData: any;\n  pageNumber: any;\n\n  // @Input() data;\n  @Input() events: Observable<any>;\n  // @Output() questionList = new EventEmitter();\n  @Output() questionTrigger = new EventEmitter();\n  eventsSubscription: any\n\n  public fields: any[] = [];\n\n  constructor(private http: HttpClient, private _formBuilder: FormBuilder, private fb: FormBuilder) {\n    // this.form = new FormGroup({\n    //   fields: this.fb.array([]),\n    // })\n    this.form = new FormGroup({\n      fields: new FormControl(JSON.stringify(this.fields))\n    })\n\n    this.unsubcribe = this.form.valueChanges.subscribe((update) => {\n      console.log(update);\n      // this.fields = JSON.parse(update.fields);\n    });\n  }\n\n\n\n  ngOnInit() {\n\n    this.eventsSubscription = this.events.subscribe(data => {\n      console.log(\"calling from parent with data\", data);\n      if (data) {\n        let dt = data;\n        this.formBuild(dt);\n      } else {\n        let obj = {\n          action: \"all\",\n          data: this.fields\n        }\n        console.log(\"to get all\", this.fields);\n        this.questionTrigger.emit(obj);\n      }\n    })\n    this.formData = [];\n    this.jsonData = [\n      {\n        \"responseType\": \"text\",\n\n      }, {\n        \"responseType\": \"number\",\n      }, {\n        \"responseType\": \"radio\",\n      },\n      {\n        \"responseType\": \"checkbox\",\n      },\n      {\n        \"responseType\": \"dropdown\"\n      }, {\n        \"responseType\": \"date\"\n      }, {\n        \"responseType\": \"slider\"\n      },\n      {\n        \"responseType\": \"multiselect\"\n      }\n    ]\n  }\n  onUpload(e) {\n    console.log(e);\n  }\n\n  getFields() {\n    return this.fields;\n  }\n\n  ngDistroy() {\n    this.unsubcribe();\n  }\n\n\n  getToolObj(ele, len) {\n\n    let obj = {\n\n    }\n    if (ele == 'text') {\n      obj = {\n        \"position\": len,\n        \"field\": len + \"question\",\n        \"type\": \"text\",\n        \"label\": len + \". question\",\n        \"placeholder\": \"Please enter your question here\",\n        \"description\": \"\",\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        }\n      }\n    } else if (ele == 'number') {\n      obj = {\n        \"field\": len + \"question\",\n        \"type\": \"number\",\n        \"label\": len + \". question\",\n        \"placeholder\": \"Please enter your question here\",\n        \"description\": \"\",\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        }\n      }\n    } else if (ele == 'radio') {\n      obj = {\n        field: len + \"question\",\n        type: 'radio',\n        name: len + \". question\",\n        label: len + \". question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        },\n        options: [\n          { key: 'option1', label: 'Label 1' },\n          { key: 'option2', label: 'Label 1' }\n        ]\n      }\n    } else if (ele == \"checkbox\") {\n      obj = {\n        field: len + \"question\",\n        type: \"checkbox\",\n        name: len + \". question\",\n        label: len + \". question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        },\n        options: [\n          { key: 'option1', label: 'option 1' },\n          { key: 'option2', label: 'option 2' }\n        ]\n      }\n    } else if (ele == \"dropdown\") {\n      obj = {\n        field: len + \"question\",\n        type: 'dropdown',\n        name: len + \". question\",\n        label: len + \". question\",\n        value: 'option1',\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        },\n        options: [\n          { key: 'option1', label: 'Option 1' },\n          { key: 'option1', label: 'Option 2' }\n        ]\n      }\n    }\n    else if (ele == \"date\") {\n      obj = {\n        field: len + \"question\",\n        type: 'date',\n        name: len + \". question\",\n        label: len + \". question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\",\n          \"maxDate\": \"\",\n          \"minDate\": \"\",\n\n        },\n        options: [\n\n        ]\n      }\n    } else if (ele == 'multiselect') {\n      if (ele == 'childDroped') {\n        let childdata = {\n          \"field\": len + \"question\",\n          \"type\": ele.type,\n          \"label\": len + \". question\",\n          \"child\": [],\n          \"placeholder\": \"Please add Child's here\",\n          \"description\": \"\",\n          \"validations\": {\n            \"required\": false,\n            \"minLenght\": \"\",\n            \"maxLength\": \"\"\n          }\n        }\n      }\n      let finalchild = [];\n\n      finalchild.push()\n\n\n      obj = {\n        \"field\": len + \"question\",\n        \"type\": \"multiselect\",\n        \"label\": len + \". question\",\n        \"child\": [],\n        \"placeholder\": \"Please add Child's here\",\n        \"description\": \"\",\n        \"validations\": {\n          \"required\": false,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        }\n      }\n    } else if (ele == \"slider\") {\n      obj = {\n        field: len + \"question\",\n        type: 'slider',\n        name: len + \". question\",\n        label: len + \". question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"min\": \"\",\n          \"max\": \"\",\n          \"maxDate\": \"\",\n          \"minDate\": \"\",\n\n        },\n        options: [\n\n        ]\n      }\n    }\n\n    return obj;\n  }\n\n  onDrop(ele, action = \"\") {\n    console.log(\"drop ele\", ele);\n    if (ele.data) {\n      ele = ele.data.responseType\n    }\n    let len = this.fields.length + 1;\n    var obj = {};\n    if (action == \"copy\") {\n      let copyObj = {\n        \"position\": len,\n        \"field\": len + \"question\",\n        \"type\": ele.type,\n        \"label\": ele.label,\n        \"placeholder\": ele.placeholder,\n        \"validations\": ele.validations,\n        \"options\": ele.options,\n        \"description\": ele.description\n      }\n      obj = copyObj;\n\n    } else {\n\n\n      obj = this.getToolObj(ele, len);\n\n\n\n    }\n\n\n    let elem = this.fields;\n    let trnasformData = {\n      action: 'add',\n      data: obj\n    }\n    // console.log(\"transf\", trnasformData);\n    this.questionTrigger.emit(trnasformData);\n\n    this.formData.push(obj);\n    let fieldsCtrls = {};\n\n    this.form = new FormGroup(fieldsCtrls);\n    // console.log(\"------\", obj);\n    for (let f of this.formData) {\n\n\n      if (f['type'] != 'checkbox') {\n\n        console.log(\"f.type\", f['field']);\n        fieldsCtrls[f['field']] = new FormControl(f['value'] || '')\n      } else {\n\n        let opts = {};\n        for (let opt of f['options']) {\n\n          opts[opt.key] = new FormControl(opt.label);\n        }\n        fieldsCtrls[f['field']] = new FormGroup(opts)\n      }\n\n      // const creds = this.form.controls.fields as FormArray;\n      // creds.push(this.fb.group(fieldsCtrls));\n\n\n      // console.log(\"fieldsCtrls\",fieldsCtrls);\n\n      // this.formData =  this.fields;\n\n    }\n    this.form = new FormGroup(fieldsCtrls);\n    // this.fields\n    // this.formBuild();\n    this.fields.push(obj);\n    console.log(\"fields controls\", this.form);\n\n  }\n\n\n  formBuild(data) {\n    let formData = [];\n    this.fields = [];\n\n    this.fields.slice(this.fields.length, 0);\n    formData = data;\n    let fieldsCtrls = {};\n    this.form = new FormGroup(fieldsCtrls);\n    for (let f of formData) {\n      if (f['type'] != 'checkbox') {\n        console.log(\"f.type\", f['field']);\n        fieldsCtrls[f['field']] = new FormControl(f['value'] || '')\n      } else {\n        let opts = {};\n        for (let opt of f['options']) {\n          opts[opt.key] = new FormControl(opt.label);\n        }\n        fieldsCtrls[f['field']] = new FormGroup(opts)\n      }\n    }\n    this.form = new FormGroup(fieldsCtrls);\n\n    this.fields = formData;\n    let obj = {\n      action: \"all\",\n      data: formData\n    }\n\n    console.log(\"this.fields-------\", this.fields);\n    this.questionTrigger.emit(obj);\n\n\n    // this.fields = data;\n\n    // let fieldsCtrls = {};\n\n    // console.log(\" this.fields\", data);\n    // for (let f of data) {\n\n\n    //   if (f.type != 'checkbox') {\n\n    //     fieldsCtrls[f.name] = new FormControl(f.value || '')\n    //   } else {\n    //     let opts = {};\n    //     for (let opt of f.options) {\n\n    //       opts[opt.key] = new FormControl(opt.value);\n    //     }\n    //     fieldsCtrls[f.name] = new FormGroup(opts)\n    //   }\n    // }\n    // this.form = new FormGroup(fieldsCtrls);\n  }\n\n  onSubmit(value) {\n    console.log(\"value\", this.fields);\n\n    // this.questionList.emit(this.fields);\n\n    let obj = {\n      action: \"all\",\n      data: this.fields\n    }\n    this.questionTrigger.emit(obj);\n  }\n\n\n  // (event) {\n  //   console.log('Element was dragged', event);\n  // }\n\n  ngOnDestroy() {\n    this.eventsSubscription.unsubscribe()\n  }\n  onFieldUpdate($event) {\n    console.log(\"eventData sssssss------\", $event.data);\n\n    let eventObj = $event\n    let trnasformData = {};\n    if ($event.action == \"copy\") {\n      this.onDrop($event.data, \"copy\");\n    } else if ($event.action == \"delete\") {\n      trnasformData = {\n        action: 'delete',\n        data: $event\n      }\n    } else if ($event.action == \"childDroped\") {\n\n      console.log('this.fields', this.fields);\n\n      var final = this.fields.filter(\n        item => {\n          if (item.field === eventObj.data.mutiSelect.field) {\n\n            let obj = this.getToolObj($event.data.responseType, item.child.length + 1);\n            item.child.push(obj);\n            return item;\n          } else {\n            return item;\n          }\n        });\n\n      // final.push(obj);\n\n\n      // this.fields\n\n      console.log('final result', final);\n\n      // console.log(\"main obj\", obj);\n\n    } else {\n      trnasformData = {\n        action: 'update',\n        data: JSON.parse($event)\n      }\n    }\n    this.questionTrigger.emit(trnasformData);\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'dynamic-form-builder',\n  template:`\n   \n     <div cdkDropList (cdkDropListDropped)=\"drop($event)\"> <div *ngFor=\"let field of fields\"  cdkDrag>\n          <field-builder *ngIf=\"!field.isDeleted\" [field]=\"field\" [form]=\"form\"  \n          (sendDataToParent)=\"eventFromChild($event)\" (copyOrDeleteEvent)=\"copyOrDeleteEvent($event)\">\n          </field-builder>\n      </div></div>`, \n})\nexport class DynamicFormBuilderComponent implements OnInit {\n  @Output() onFieldUpdate = new EventEmitter();\n  @Input() fields: any[] = [];\n  // form: FormGroup;\n  @Input() form:any;\n  formData:any = [];\n  constructor() { }\n\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.fields, event.previousIndex, event.currentIndex);\n  }\n\n  copyOrDeleteEvent(data){\n\n    console.log('data type', typeof(data));\n\n    if(typeof(data) === 'string') {\n      data  = JSON.parse(data);\n      console.log('inside string');\n    }\n\n    // let childdata = data;\n    // let finaldata = JSON.parse(childdata);\n\n    // console.log(JSON.parse(data),\"parse copyEvent occured\");\n    // let obj = data;\n    console.log(data,\"copyEvent occured\");\n\n    // data.field =(this.fields.length+1)+\"question\";\n    // data.label = (this.fields.length+1)+\" question\";\n\n    if(data.action==\"copy\"){\n\n      console.log(data,\"this.form before\");\n\n     let transferData =  {\n        action:\"copy\",\n        data:data\n      }\n\n      this.onFieldUpdate.emit(transferData);\n      \n    //  data.field = (this.fields.length+1)+\"question\";\n\n    //  console.log(\"data\",data)\n      // this.formBuild(obj);\n\n    }else if(data.action==\"delete\"){\n\n      var index = this.fields.indexOf(data);\n\n      console.log(\"ind\",index);\n      \n      this.onFieldUpdate.emit(data);\n\n      // this.fields.splice(index, 1);\n\n      \n\n      // this.fields = this.fields.filter(function(value, index, arr){\n      //   return value!=data;\n      // });\n     \n\n    \n      // console.log(\"evens\",evens);\n      // this.fields= evens;\n      // console.log(\"this.form\",this.form);\n      // this.fields.\n      // console.log(this.fields.length,\"copyEvent occured\",evens);\n    } else if(data.action ==\"childDroped\"){\n      this.onFieldUpdate.emit(data);\n    }\n    \n  }\n\n  eventFromChild(data){\n\n    this.onFieldUpdate.emit(data);\n    console.log(\"data from child  ------- \",data);\n  }\n\n  ngOnInit() {\n\n    this.formData = this.fields;\n\n    console.log(\"this.form ---\",this.form)\n    // this.formBuild();\n  }\n\n//   formBuild(item){\n//     let fieldsCtrls = {};\n\n//     this.form = new FormGroup(fieldsCtrls);\n\n//     // var formData = this.fields;\n\n//     // console.log(\"this.fields\",this.fields); \n\n//     let len = this.fields.length + 1;\n\n\n//     var obj = {\n//       \"position\":len,\n//       \"field\": len + \"question\",\n//       \"type\": item.type,\n//       \"label\": item.label,\n//       \"placeholder\": item.placeholder,\n//       \"validations\":item.validations  \n\n//     }\n   \n//     this.fields.push(obj);\n//    this.fields.forEach(function(f){\n//     // console.log(\"f.type\", f);\n\n//     if (f['type'] != 'checkbox') {\n   \n//       fieldsCtrls[f['field']] = new FormControl(f['value'] || '')\n//     } else {\n\n//       let opts = {};\n//       for (let opt of f['options']) {\n\n//         opts[opt.key] = new FormControl(opt.label);\n//       }\n//       fieldsCtrls[f['field']] = new FormGroup(opts)\n//     }\n//   });\n\n//   this.form = new FormGroup(fieldsCtrls);\n\n//   // console.log(\"fieldsCtrls\",fieldsCtrls);\n// }\n}\n","import { Component, Input, OnInit, ViewChild, ElementRef, EventEmitter, Output } from '@angular/core';\n// import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n\n@Component({\n  selector: 'field-builder',\n  template: `\n  <style>\n  .mat-slider-horizontal {\n    min-width: 80% !important;\n  }\n  .example-radio-group {\n    display: flex;\n    flex-direction: block;\n    margin: 15px 0;\n  }\n\n  .mat-form-field {\n    display: block;\n    position: relative;\n    flex: auto;\n    min-width: 0;\n    width: 372px;\n  }\n  .input-group {\n    position: relative;\n     border-collapse: separate;\n     display: block;\n  }\n  \n  .example-radio-button {\n    margin: 5px;\n  }\n  .edit-icon {\n    position: relative;\n  width: 36px;\n  max-width: 57px;\n  right: 0px;\n  left: 94%;\n  top: 25px;cursor: pointer;z-index: 100;\n}\n  </style>\n  <div class=\"row\"  *ngIf=\"openEdit\" style=\"padding: 25px;\n  border: 1px solid #ccc;margin-top:10px; margin: 40px;\n  box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.19);\">\n\n    <div class=\"col-sm-7 form-group\">\n      <mat-form-field>\n        <input matInput placeholder=\"Label\" [(ngModel)]=\"label\" name=\"label\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"col-sm-7 form-group\">\n      <mat-form-field>\n        <input matInput placeholder=\"Input Place Holder\" [(ngModel)]=\"placeholder\" name=\"placeholder\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"col-sm-7 form-group\">\n      <mat-form-field>\n        <input matInput placeholder=\"Hint/Description\" [(ngModel)]=\"description\" name=\"placeholder\">\n      </mat-form-field>\n    </div>\n\n<div class=\"col-sm-7 form-group\">\n  <mat-form-field>\n  <mat-label>Input Type</mat-label>\n    <mat-select  [(ngModel)]=\"type\">\n      <mat-option value=\"text\">text</mat-option>\n      <mat-option value=\"number\">number</mat-option>\n      <mat-option value=\"radio\">radio</mat-option>\n      <mat-option value=\"date\">date</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<div class=\"col-sm-7 form-group\">\n<mat-form-field>\n<mat-label>Pages</mat-label>\n  <mat-select  [(ngModel)]=\"pageNumber\">\n    <mat-option value=\"page_1\">page 1</mat-option>\n    <mat-option value=\"page_2\">page 2</mat-option>\n    <mat-option value=\"page_3\">page 3</mat-option>\n  </mat-select>\n</mat-form-field>\n</div>\n\n    <div class=\"col-sm-7 form-group\" *ngIf=\"type=='slider'\">\n    <mat-form-field>\n    <input type=\"text\" placeholder=\"Min\" matInput  [(ngModel)]=\"min\" name=\"min value\">\n    </mat-form-field>\n    </div>\n\n    <div class=\"col-sm-7 form-group\" *ngIf=\"type=='slider'\">\n    <mat-form-field>\n    <input type=\"text\" placeholder=\"Max\" matInput  [(ngModel)]=\"max\" name=\"min value\">\n    </mat-form-field>\n    </div>\n    \n  <div class=\"col-sm-12 form-group\" *ngIf=\"type=='date'\">\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"minDate\" placeholder=\"Choose a min date\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"pickerMaxDate\" [(ngModel)]=\"maxDate\" placeholder=\"Choose a max date\">\n      <mat-datepicker-toggle matSuffix [for]=\"pickerMaxDate\"></mat-datepicker-toggle>\n      <mat-datepicker #pickerMaxDate></mat-datepicker>\n    </mat-form-field>\n\n\n    </div>\n    <div class=\"col-sm-12 form-group\" *ngIf=\"type=='radio' || type=='checkbox' || type=='dropdown'\">\n    <label for=\"label\" class=\"col-sm-12\">Options</label>\n    \n    <ul class=\"col\" *ngFor=\"let opt of options;let index\">\n     <li class=\"\">\n      <span>{{opt.label}} </span><span style=\"\n      margin-left: 30px;\" (click)=\"deleteOption(opt,index)\">\n      <i class=\"fa fa-close\" style=\"font-size:36px;color:red\"></i></span>\n    </li>\n    \n    </ul>\n\n    <div class=\"col-sm-7 form-group\" *ngIf=\"type=='slider'\">\n    <mat-form-field>\n    <input type=\"text\" placeholder=\"Max\" matInput  [(ngModel)]=\"max\" name=\"min value\">\n    </mat-form-field>\n    </div>\n\n    <div class=\"col-sm-7 form-group\">\n    <div class=\"input-group\">\n    <mat-form-field>\n    <input type=\"text\" placeholder=\"Label\" matInput style=\"margin-bottom: 10px;\" [(ngModel)]=\"newOptionLabel\" name=\"newOption\">\n    </mat-form-field>\n    <mat-form-field>\n    <input type=\"tex\" matInput name=\"newOption\" placeholder=\"key\"  [(ngModel)]=\"newOptionKey\">\n    </mat-form-field>  \n    </div>\n      <button mat-flat-button color=\"primary\" style=\"margin-top: 10px;\"  (click)=\"AddNewOptions()\">\n      Add\n      </button>\n    </div>\n\n    \n    \n    </div>\n\n    \n<div class=\"col-sm-7\">\n<label id=\"example-radio-group-label\">is Reqired ?</label>\n<mat-radio-group\n  aria-labelledby=\"example-radio-group-label\"\n  class=\"example-radio-group\"\n  [(ngModel)]=\"required\">\n  <mat-radio-button class=\"example-radio-button\" [value]=true>\n    Yes\n  </mat-radio-button>\n  <mat-radio-button class=\"example-radio-button\" [value]=false>\n    No\n  </mat-radio-button>\n</mat-radio-group>\n</div>\n\n<div class=\"col-sm-7\" *ngIf=\"type=='date'\">\n<label id=\"example-radio-group-label\">is autoCollect</label>\n<mat-radio-group\n  aria-labelledby=\"example-radio-group-label\"\n  class=\"example-radio-group\"\n  [(ngModel)]=\"autoCollect\">\n  <mat-radio-button class=\"example-radio-button\" [value]=true>\n    True\n  </mat-radio-button>\n  <mat-radio-button class=\"example-radio-button\" [value]=false>\n    False\n  </mat-radio-button>\n</mat-radio-group>\n</div>\n\n  \n<div  class=\"col-sm-12\">\n\n<button mat-flat-button color=\"primary\" style=\"margin-right:10px;\"  (click)=\"closeModel('save')\">\nSave\n</button>\n\n</div>\n  </div>\n  <div class=\"form-group row\" [formGroup]=\"form\" style=\"padding:10px;margin:0px;margin-top:10px;box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.19)\">\n  <div class=\"col-sm-2 edit-icon\" ><i class=\"fa fa-edit\" (click)=\"loadFormElement(field)\" ></i></div>\n    <div class=\"col-md-12\" [ngSwitch]=\"field.type\">\n    <textbox *ngSwitchCase=\"'number'\" [field]=\"field\" [form]=\"form\"></textbox>\n    <textbox *ngSwitchCase=\"'text'\" [field]=\"field\" [form]=\"form\"></textbox>\n    <date *ngSwitchCase=\"'date'\" [field]=\"field\" [form]=\"form\"></date>\n    <slider *ngSwitchCase=\"'slider'\" [field]=\"field\" [form]=\"form\"></slider>\n      <dropdown *ngSwitchCase=\"'dropdown'\" [field]=\"field\" [form]=\"form\"></dropdown>\n      <checkbox *ngSwitchCase=\"'checkbox'\" [field]=\"field\" [form]=\"form\"></checkbox>\n      <radio *ngSwitchCase=\"'radio'\" [field]=\"field\" [form]=\"form\"></radio>\n      <lib-multi-select *ngSwitchCase=\"'multiselect'\" (childrenDropEvent)=\"childrenDropEvent($event)\" [field]=\"field\" [form]=\"form\"></lib-multi-select>\n      <file *ngSwitchCase=\"'file'\" [field]=\"field\" [form]=\"form\"></file>\n      <div style=\"float:right\">\n          <span class=\"cursor-pntr\" (click)=\"copyElement(field)\"><i class=\"fa fa-copy\"></i></span>\n          <span class=\"cursor-pntr\" (click)=\"deleteElement(field)\"><i class=\"fa fa-trash\"></i> </span>\n       </div> \n       </div>`,\n  styleUrls: []\n})\n\n// <div class=\"alert alert-danger my-1 p-2 fadeInDown animated\" *ngIf=\"!isValid && isDirty\">{{field.label}} is required</div>\n\nexport class FieldBuilderComponent implements OnInit {\n  @Input() field: any;\n  @Input() form: any;\n\n  @Output() sendDataToParent = new EventEmitter<string>();\n\n  @Output() copyOrDeleteEvent = new EventEmitter<string>();\n  \n  closeResult: string;\n  modalReference: any;\n  pageNumber; any;\n  label: any;\n  type: any;\n  placeholder: any;\n  options: any;\n  newOptionKey: any;\n  newOptionLabel: any;\n\n  activeModelData: any;\n  validations: any;\n  required: any;\n  autoCollect: any;\n  openEdit: boolean = false;\n  _id: any;\n  description: any;\n  minDate: any;\n  maxDate: any;\n  min: any;\n  max: any;\n\n\n  // private modalRef: NgbModalRef;\n  @ViewChild('content', { static: false }) myModal: ElementRef;\n\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n  constructor(\n    // private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n\n    this.options = [];\n    this.validations = {}\n  }\n\n\n\n  loadFormElement(item) {\n\n    console.log(\"item ---\", item);\n\n    this.activeModelData = \"\";\n    this.label = item.label;\n    this.type = item.type;\n    this.placeholder = item.placeholder;\n    this.options = item.options;\n    this._id = item._id;\n\n    this.required = item.validations.required;\n    \n    this.description = item.description;\n\n    if (item.type == \"date\") {\n      this.minDate = item.validations.minDate;\n      this.maxDate = item.validations.maxDate\n      this.autoCollect = item.validations.autoCollect;\n    }\n    else if (item.type == \"slider\") {\n      this.min = item.validations.min;\n      this.max = item.validations.max;\n    }\n\n    this.required = this.field.validations.required;\n    \n\n\n    console.log(item.validations.required, \"item.validations.required\", this.required, \"label\", this.label);\n    // console.log(\"label\",this.label);\n\n    this.openEdit = this.openEdit ? false : true;\n    // document.getElementById(\"openModalButton\").click();\n    // this.open(this.myModal);\n    // this.myModal.show();\n    // this.myModal.nativeElement.className = 'modal fade show';\n\n  }\n\n  saveEdit() {\n  }\n  closeModel(action) {\n\n    if (action == \"save\") {\n\n\n\n      console.log(\"this.field\", this.required);\n      // this.modalReference.close();\n\n\n      // this.activeModelData.field = this.field.field;\n\n      // this.activeModelData.label = this.label;\n      // this.activeModelData.type = this.type;\n      // this.activeModelData.placeholder = this.placeholder;\n      // this.activeModelData.options = this.options;\n\n      let obj = {\n        label: this.label,\n        type: this.type,\n        placeholder: this.placeholder,\n        options: this.options,\n        validations: this.validations,\n        field: this.field,\n        _id: this._id,\n        description: this.description\n      }\n\n      if (this.type == 'date') {\n        obj['minDate'] = this.minDate;\n        obj['maxDate'] = this.maxDate\n      } else if (this.type == 'slider') {\n        obj['min'] = this.min;\n        obj['max'] = this.max;\n      }\n\n      // console.log(\"obj\",obj);\n\n\n      this.sendDataToParent.emit(JSON.stringify(obj));\n\n\n      // this.field.label = this.label;\n\n\n      this.field.label = this.label;\n      this.field.type = this.type;\n      this.field.placeholder = this.placeholder;\n      this.field.options = this.options;\n      this.field.description = this.description;\n\n      if (this.type == 'date') {\n        this.field.validations.minDate = this.minDate;\n        this.field.validations.maxDate = this.maxDate;\n        this.field.validations.autoCollect = this.autoCollect;\n      } else if (this.type == 'slider') {\n        this.field.validations.min = this.min;\n        this.field.validations.max = this.max;\n      }\n\n      // this.field.validations\n\n      console.log(\" this.field.validations.required\", this.field.validations.required, \"sdds\", this.required);\n      this.field.validations.required = this.required;\n      this.field.validations.autoCollect = this.autoCollect;\n      \n\n      // console.log(\" this.field\", this.field);\n      this.openEdit = false;\n\n      // this.sendDataToParent.emit(this.activeModelData);\n\n    } else {\n\n      this.openEdit = false;\n      // this.modalReference.close();\n    }\n\n    // this.modalService.close();\n    //  this.myModal.nativeElement.className = 'modal hide';\n  }\n\n  open(content) {\n\n\n\n    // console.log(\" this.activeModelData\", selectedData);\n    // this.modalReference = this.modalService.open(content);\n    // this.modalReference.result.then((result) => {\n    //   this.closeResult = `Closed with`;\n    // }, (reason) => {\n    //   this.closeResult = `Dismissed`;\n    // });\n  }\n\n  // private getDismissReason(reason: any): string {\n  //   // if (reason === ModalDismissReasons.ESC) {\n  //   //   return 'by pressing ESC';\n  //   // } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n  //   //   return 'by clicking on a backdrop';\n  //   // } else {\n  //   //   return `with: ${reason}`;\n  //   // }\n  // }\n\n  deleteOption(opt, index) {\n    console.log(\"delete\", this.options);\n\n    // let newArr = [];\n    let optionsArr = this.options.filter(item => {\n      // if(item.lable==opt.label && item.key==opt.key){\n\n      // }else{\n\n      // }\n\n      return (item.label != opt.label && item.key != opt.key)\n\n      // if(item.lable==opt.label && item.key==opt.key){\n\n      // }else{\n      //   return true;\n      // }\n    })\n\n    this.options = optionsArr;\n    console.log(\"delete new \", optionsArr);\n  }\n  AddNewOptions() {\n\n    if (this.newOptionKey != \"\" && this.newOptionLabel != \"\") {\n\n      console.log(\"this.newOption\", this.newOptionLabel);\n\n      if (Array.isArray(this.options)) {\n\n      } else {\n        this.options = [];\n      }\n      this.options.push({\n        key: this.newOptionKey,\n        label: this.newOptionLabel\n      });\n\n      console.log(\"this.options.push\", this.options);\n    }\n    this.newOptionKey = \"\";\n    this.newOptionLabel = \"\";\n  }\n\n  copyElement(item) {\n    // this.field.push(item);\n    item.action = 'copy';\n    console.log(\"field ----------\", item);\n    this.copyOrDeleteEvent.emit(item);\n\n  }\n  deleteElement(item) {\n\n    item.action = 'delete';\n    this.field.isDelete = true;\n    this.copyOrDeleteEvent.emit(item);\n    console.log(\"field delete\", this.field);\n\n  }\n  childrenDropEvent($event){\n    console.log(\"childrenDropEvent\", this.field);\n    // const action  = 'childDroped';\n    let newObj = {\n      action : 'childDroped',\n      data:$event\n    }\n   \n    this.copyOrDeleteEvent.emit(JSON.stringify(newObj));\n    console.log(\"field delete\", this.field);\n  }\n}\n\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n  selector: 'textbox',\n  template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-8 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n      </label>\n    \n        <input *ngIf=\"!field.multiline\" [attr.type]=\"field.type\" class=\"form-control\"  [id]=\"field.field\" [name]=\"field.field\" >\n        <textarea *ngIf=\"field.multiline\"  [id]=\"field.field\"\n        rows=\"20\" class=\"form-control\" [placeholder]=\"field.placeholder\"></textarea>\n\n      </div> \n    `\n})\nexport class TextBoxComponent {\n  @Input() field: any = {};\n  @Input() form: FormGroup;\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n \n  \n  constructor() {\n\n    // this.form.controls = this.field.name;\n    // console.log(\"form\",this.form);\n\n  }\n \n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'dropdown',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-8 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <select class=\"form-control\" [id]=\"field.field\">\n          <option *ngFor=\"let opt of field.options\" [value]=\"opt.key\">{{opt.label}}</option>\n        </select>\n      </div> \n    `\n})\nexport class DropDownComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n\n    constructor() {\n\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'file',\n    template: `\n      <div [formGroup]=\"form\">\n        <div *ngIf=\"!field.value\" class=\"drop-container dropzone\" dropZone \\\n          (dropped)=\"field.onUpload($event)\">\n          <p class=\"m-0\">\n            Drag a file here or\n            <label class=\"upload-button\">\n              <input type=\"file\" multiple=\"\" (change)=\"field.onUpload($event.target.files)\"> browse\n            </label>\n            to upload.\n          </p>\n        </div>\n        <div *ngIf=\"field.value\">\n          <!-- <button type=\"button\" class=\"btn btn-primary\">Change</button> -->\n          <div class=\"card\">\n            <img class=\"card-img-top\" [src]=\"field.value\">\n          </div>\n        </div>\n      </div> \n    `,\n    styles:[\n      `\n      .drop-container {\n        background: #fff;\n        border-radius: 6px;\n        height: 150px;\n        width: 100%;\n        box-shadow: 1px 2px 20px hsla(0,0%,4%,.1);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border: 2px dashed #c0c4c7;\n      }\n      p {\n        font-size: 16px;\n        font-weight: 400;\n        color: #c0c4c7; \n      }\n      .upload-button {\n        display: inline-block;\n        border: none;\n        outline: none;\n        cursor: pointer;\n        color: #5754a3;\n      }\n      .upload-button input {\n        display: none;\n      }\n      .dropzone { \n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column; \n        border-radius: 5px;\n        background: white;\n        margin: 10px 0;\n      }\n      .dropzone.hovering {\n          border: 2px solid #f16624;\n          color: #dadada !important;\n      }\n      progress::-webkit-progress-value {\n        transition: width 0.1s ease;\n      }\n      `\n    ]\n})\nexport class FileComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n    }\n\n    ngOnChange(){\n      console.log(this.field.value);\n      // this.field.value.\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'checkbox',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-12 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <div [formGroupName]=\"field.field\" >\n          <div *ngFor=\"let opt of field.options\" class=\"form-check form-check\">\n          <label class=\"form-check-label\">\n             <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\" />\n             {{opt.label}}</label>\n          </div>\n        </div>\n\n      </div> \n    `\n})\nexport class CheckBoxComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'radio',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-12 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <div class=\"form-check\" *ngFor=\"let opt of field.options\">\n          <input class=\"form-check-input\" type=\"radio\" [id]=\"field.field\" [value]=\"opt.key\">\n          <label class=\"form-check-label\">\n            {{opt.label}}\n          </label>\n        </div>\n      </div> \n    `\n})\nexport class RadioComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'date',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-8 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <input *ngIf=\"!field.multiline\" [attr.type]=\"field.type\" class=\"form-control\" \n         [id]=\"field.field\" [name]=\"field.field\">\n        <textarea *ngIf=\"field.multiline\" [class.is-invalid]=\"isDirty && !isValid\" [id]=\"field.field\"\n        rows=\"20\" class=\"form-control\" [placeholder]=\"field.placeholder\"></textarea>\n\n      </div> \n    `\n})\nexport class DateComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n      // this.form.controls = this.field.name;\n      // console.log(\"form\",this.form);\n\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'slider',\n    template: `\n      <div [formGroup]=\"form\" >\n      <label class=\"col-md-0 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <input *ngIf=\"!field.multiline\" type=\"hidden\" class=\"form-control\" [id]=\"field.field\" [name]=\"field.field\">\n        \n        <mat-slider\n   class = \"tp-margin\"\n   [disabled] = \"false\"\n   [invert] = \"false\"      \n   [thumbLabel] = \"false\"\n   [max]=\"field.max\"\n   [min]=\"field.min\"    \n   [vertical] = \"false\">\n</mat-slider>\n\n      </div> \n    `\n})\nexport class SliderComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n      // this.form.controls = this.field.name;\n      // console.log(\"form\",this.form);\n\n    }\n}","import { Component, Input, Output, EventEmitter, NgModule, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [ReactiveFormsModule, FormsModule],\n  declarations: []\n})\n\n\n@Component({\n  selector: 'lib-multi-select',\n  template: `<div [formGroup]=\"form\" dndDropzone  (dndDrop)=\"onDropNew($event,field)\" class=\"card-body\">\n  <label class=\"col-md-8 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n  <textarea  rows=\"2\" class=\"form-control\">\n  \n  </textarea>\n  <div class=\"row\" *ngIf=\"openEditChild\" style=\"padding: 20px;\n  border: 1px solid #ccc;margin-top:10px; margin:40px; margin-left: 20%;\n  box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.19);\">\n\n  <div class=\"col-sm-7 form-group\">\n    <mat-form-field>\n      <input matInput placeholder=\"Label\" [(ngModel)]=\"label\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-7 form-group\">\n    <mat-form-field>\n      <input matInput placeholder=\"Input Place Holder\" [(ngModel)]=\"placeholder\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-7 form-group\">\n    <mat-form-field>\n      <input matInput placeholder=\"Hint/Description\" [(ngModel)]=\"description\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-7 form-group\">\n    <mat-form-field>\n      <mat-label>Input Type</mat-label>\n      <mat-select [(ngModel)]=\"type\" [ngModelOptions]=\"{standalone: true}\">\n        <mat-option value=\"text\">text</mat-option>\n        <mat-option value=\"number\">number</mat-option>\n        <mat-option value=\"radio\">radio</mat-option>\n        <mat-option value=\"date\">date</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-7 form-group\">\n    <mat-form-field>\n      <mat-label>Pages</mat-label>\n      <mat-select [(ngModel)]=\"pageNumber\" [ngModelOptions]=\"{standalone: true}\">\n        <mat-option value=\"page_1\">page 1</mat-option>\n        <mat-option value=\"page_2\">page 2</mat-option>\n        <mat-option value=\"page_3\">page 3</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-7 form-group\" *ngIf=\"type=='slider'\">\n    <mat-form-field>\n      <input type=\"text\" placeholder=\"Min\" matInput [(ngModel)]=\"min\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-7 form-group\" *ngIf=\"type=='slider'\">\n    <mat-form-field>\n      <input type=\"text\" placeholder=\"Max\" matInput [(ngModel)]=\"max\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-12 form-group\" *ngIf=\"type=='date'\">\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"minDate\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Choose a min date\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"pickerMaxDate\" [(ngModel)]=\"maxDate\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Choose a max date\">\n      <mat-datepicker-toggle matSuffix [for]=\"pickerMaxDate\"></mat-datepicker-toggle>\n      <mat-datepicker #pickerMaxDate></mat-datepicker>\n    </mat-form-field>\n\n\n  </div>\n  <div class=\"col-sm-12 form-group\" *ngIf=\"type=='radio' || type=='checkbox' || type=='dropdown'\">\n    <label for=\"label\" class=\"col-sm-12\">Options</label>\n\n    <div class=\"col-sm-7 form-group\" *ngIf=\"type=='slider'\">\n      <mat-form-field>\n        <input type=\"text\" placeholder=\"Max\" matInput [(ngModel)]=\"max\" [ngModelOptions]=\"{standalone: true}\">\n      </mat-form-field>\n    </div>\n\n  </div>\n\n\n  <div class=\"col-sm-7\">\n    <label id=\"example-radio-group-label\">is Reqired ?</label>\n    <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"required\">\n      <mat-radio-button class=\"example-radio-button\" [value]=true>\n        Yes\n      </mat-radio-button>\n      <mat-radio-button class=\"example-radio-button\" [value]=false>\n        No\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n\n  <div class=\"col-sm-7\" *ngIf=\"type=='date'\">\n    <label id=\"example-radio-group-label\">is autoCollect</label>\n    <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [(ngModel)]=\"autoCollect\" [ngModelOptions]=\"{standalone: true}\">\n      <mat-radio-button class=\"example-radio-button\" [value]=true>\n        True\n      </mat-radio-button>\n      <mat-radio-button class=\"example-radio-button\" [value]=false>\n        False\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n\n\n  <div class=\"col-sm-12\">\n\n    <button mat-flat-button color=\"primary\" style=\"margin-right:10px;\" (click)=\"closeModelChild('save')\">\n      Save\n    </button>\n\n  </div>\n</div>\n  <div *ngIf=\"field.child.length > 0\">\n\n  <div *ngFor=\"let obj of field.child let i =index\">\n  <div style=\"float: right;right: -90px; cursor:pointer;\n  top: 20px;\" class=\"col-sm-2 edit-icon\"><i class=\"fa fa-edit\" (click)=\"loadFormElement(obj, i)\">{{i}}</i></div>\n  <div [ngSwitch]=\"obj.type\" style=\"width:80%;margin-left:20%\">\n\n  <textbox style =\"padding-left:30px\" *ngSwitchCase=\"'number'\" [field]=\"obj\" [form]=\"form\"></textbox>\n\n  <textbox style =\"padding-left:30px\" *ngSwitchCase=\"'text'\" [field]=\"obj\" [form]=\"form\"></textbox>\n\n  <date style =\"padding-left:30px\" *ngSwitchCase=\"'date'\" [field]=\"obj\" [form]=\"form\"></date>\n\n  <slider style =\"padding-left:30px\" *ngSwitchCase=\"'slider'\" [field]=\"obj\" [form]=\"form\"></slider>\n\n    <dropdown style =\"padding-left:30px\" *ngSwitchCase=\"'dropdown'\" [field]=\"obj\" [form]=\"form\"></dropdown>\n\n    <checkbox style =\"padding-left:30px\" *ngSwitchCase=\"'checkbox'\" [field]=\"obj\" [form]=\"form\"></checkbox>\n\n   <radio style =\"padding-left:30px\" *ngSwitchCase=\"'radio'\" [field]=\"obj\" [form]=\"form\"></radio>\n\n    <file style =\"padding-left:30px\" *ngSwitchCase=\"'file'\" [field]=\"obj\" [form]=\"form\"></file>\n\n    \n  </div>\n  </div>\n  </div>\n  </div>`,\n})\nexport class MultiSelectComponent {\n\n  @Input() field: any = {};\n  @Input() form: any;\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n  @Output() sendDataToParent = new EventEmitter<string>();\n  @Output() childrenDropEvent = new EventEmitter<string>();\n\n  activeModelData: any;\n  validations: any;\n  required: any;\n  autoCollect: any;\n  openEditChild: boolean = false;\n  _id: any;\n  description: any;\n  minDate: any;\n  maxDate: any;\n  min: any;\n  max: any;\n  label: any;\n  type: any;\n  placeholder: any;\n  options: any;\n  pageNumber: any;\n\n  constructor(public cdr: ChangeDetectorRef) {\n\n    // this.form.controls = this.field.name;\n    // console.log(\"form\",this.form);\n\n  }\n  onDropNew($event, field) {\n    console.log(\"---- MultiSelectComponent -\", $event);\n    $event.data.mutiSelect = field;\n    this.childrenDropEvent.emit($event.data);\n  }\n\n\n  closeModelChild(action, data = \"\") {\n    if (action == \"save\") {\n      debugger\n      console.log(\"closeModel\", this.field);\n      // this.modalReference.close();\n      // this.activeModelData.field = this.field.field;\n      // this.activeModelData.label = this.label;\n      // this.activeModelData.type = this.type;\n      // this.activeModelData.placeholder = this.placeholder;\n      // this.activeModelData.options = this.options;\n\n      let obj = {\n        label: this.label,\n        type: this.type,\n        placeholder: this.placeholder,\n        options: this.options,\n        validations: this.validations,\n        field: this.field,\n        _id: this._id,\n        description: this.description\n      }\n\n      if (this.type == 'date') {\n        obj['minDate'] = this.minDate;\n        obj['maxDate'] = this.maxDate\n      } else if (this.type == 'slider') {\n        obj['min'] = this.min;\n        obj['max'] = this.max;\n      }\n\n      // console.log(\"obj\",obj);\n\n\n      var index = this.field.child.findIndex(item => item.field === this.currentItem.field);\n      this.field.child.splice(index, 1, obj)\n\n      // let newObj =  this.field.child.filter(item => {\n      //   if (item.field == this.currentItem.field) {\n      //     // this.field.child[this.currentItem.position] = obj;\n      //     return obj;\n      //   } else {\n      //     return item;\n      //   }\n      // });\n\n      console.log('aaaaaaaaaaa', this.field);\n\n\n\n      // this.sendDataToParent.emit(JSON.stringify(obj));\n\n\n      // this.field.label = this.label;\n\n\n      // this.field.label = this.label;\n      // this.field.type = this.type;\n      // this.field.placeholder = this.placeholder;\n      // this.field.options = this.options;\n      // this.field.description = this.description;\n\n      // if (this.type == 'date') {\n      //   this.field.validations.minDate = this.minDate;\n      //   this.field.validations.maxDate = this.maxDate;\n      //   this.field.validations.autoCollect = this.autoCollect;\n      // } else if (this.type == 'slider') {\n      //   this.field.validations.min = this.min;\n      //   this.field.validations.max = this.max;\n      // }\n\n      // this.field.validations\n\n      // console.log(\" this.field.validations.required\", this.field.validations.required, \"sdds\", this.required);\n      // this.field.validations.required = this.required;\n      // this.field.validations.autoCollect = this.autoCollect;\n\n\n      // console.log(\" this.field\", this.field);\n      this.openEditChild = false;\n\n      // this.sendDataToParent.emit(this.activeModelData);\n\n    } else {\n\n      this.openEditChild = false;\n      // this.modalReference.close();\n    }\n\n    // this.modalService.close();\n    //  this.myModal.nativeElement.className = 'modal hide';\n  }\n\n  currentItem: any;\n\n  loadFormElement(item, id) {\n    console.log(\"item ---\", item, \"id\", id);\n    this.activeModelData = \"\";\n    this.label = item.label;\n\n    this.currentItem = item;\n\n\n    this.type = item.type;\n    this.placeholder = item.placeholder;\n    this.options = item.options;\n    this._id = item._id;\n    // this.required = item.validations.required;\n    this.description = item.description;\n    if (item.type == \"date\") {\n      this.minDate = item.validations.minDate;\n      this.maxDate = item.validations.maxDate\n      this.autoCollect = item.validations.autoCollect;\n    }\n    else if (item.type == \"slider\") {\n      this.min = item.validations.min;\n      this.max = item.validations.max;\n    }\n\n    // this.required = this.field.validations.required;\n\n    // console.log(item.validations.required, \"item.validations.required\",\n      // this.required, \"label\", this.label);\n    // console.log(\"label\",this.label);\n    this.openEditChild = this.openEditChild ? false : true;\n    this.cdr.detectChanges();\n    // document.getElementById(\"openModalButton\").click();\n    // this.open(this.myModal);\n    // this.myModal.show();\n    // this.myModal.nativeElement.className = 'modal fade show';\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\n\n\n// components\nimport { DynamicFormBuilderComponent } from './dynamic-form-builder.component';\nimport { FieldBuilderComponent } from './field-builder/field-builder.component';\nimport { TextBoxComponent } from './atoms/textbox';\nimport { DropDownComponent } from './atoms/dropdown';\nimport { FileComponent } from './atoms/file';\nimport { CheckBoxComponent } from './atoms/checkbox';\nimport { RadioComponent } from './atoms/radio';\nimport { DateComponent } from './atoms/date';\nimport { SliderComponent } from './atoms/slider';\n\n// import {MatIconModule} from '@angular/material/icon';\n// import { NgDragDropModule } from 'ng-drag-drop';\n// import { DragAndDropModule } from 'angular-draggable-droppable';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport  {\n  MatButtonModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatInputModule ,\n  MatSliderModule,\n  MatSelectModule\n} from '@angular/material';\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { MultiSelectComponent } from './atoms/multi-select';\nimport { DndModule } from 'ngx-drag-drop';\n\n// import {  } from '@angular/cdk/'\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSliderModule,\n    MatSelectModule,\n    // MatIconModule\n    AngularFontAwesomeModule,\n    DragDropModule,\n    DndModule\n  ],\n  declarations: [\n    DynamicFormBuilderComponent,\n    FieldBuilderComponent,\n    TextBoxComponent,\n    DropDownComponent,\n    CheckBoxComponent,\n    FileComponent,\n    RadioComponent,\n    DateComponent,\n    SliderComponent,\n    MultiSelectComponent\n    \n  ],\n  exports: [DynamicFormBuilderComponent],\n  providers: []\n})\nexport class DynamicFormBuilderModule { }\n","import { NgModule } from '@angular/core';\nimport { DynamicFormBuilderComponent } from './dynamic-form-builder.component';\n\nimport { CommonModule } from '@angular/common';\n// import { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n// import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// dynamic form builder\nimport { DynamicFormBuilderModule } from './dynamic-form-builder/dynamic-form-builder.module';\n// import {} from './'\n\n// import { FormComponent } from './form.component';\nimport { HttpClientModule } from '@angular/common/http';\n// import { NgDragDropModule } from 'ng-drag-drop';\n// import { DragAndDropModule } from 'angular-draggable-droppable';\n\n\n// import { DragulaModule } from 'ng2-dragula';\n\nimport  { MatButtonModule,MatDatepickerModule, MatFormFieldModule,\n  MatTabsModule, MatSelectModule} from '@angular/material'\n\nimport { DndModule } from 'ngx-drag-drop';\n\n\n@NgModule({\n  declarations: [DynamicFormBuilderComponent],\n  imports: [\n    // BrowserModule,\n    CommonModule,\n     ReactiveFormsModule,\n    DynamicFormBuilderModule,\n    HttpClientModule,\n    FormsModule,\n    MatSelectModule,\n    MatTabsModule,\n    // NgbModule.forRoot(),\n    // DragulaModule.forRoot()\n    // DragAndDropModule\n    MatFormFieldModule,\n    DndModule,\n    MatButtonModule,\n    MatDatepickerModule\n  ],\n  exports: [DynamicFormBuilderComponent]\n})\nexport class DynamicFormBuilderModule1 {\n\n\n }\n"],"names":["tslib_1.__values","DynamicFormBuilderComponent"],"mappings":"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"}