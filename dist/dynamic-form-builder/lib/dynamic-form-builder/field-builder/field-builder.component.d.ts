import { OnInit, ElementRef, EventEmitter } from '@angular/core';
import { DynamicFormBuilderService } from '../../dynamic-form-builder.service';
import { Subscription } from 'rxjs';
export declare class FieldBuilderComponent implements OnInit {
    private dynamicServe;
    field: any;
    criteriaList: any;
    form: any;
    sendDataToParent: EventEmitter<any>;
    copyOrDeleteEvent: EventEmitter<string>;
    filtereddata: any;
    getSelectQuestion: any;
    closeResult: string;
    modalReference: any;
    pageNumber: any;
    any: any;
    label: any;
    type: any;
    placeholder: any;
    options: any;
    newOptionKey: any;
    newOptionLabel: any;
    activeModelData: any;
    validations: any;
    required: any;
    autoCollect: any;
    openEdit: boolean;
    _id: any;
    description: any;
    minDate: any;
    maxDate: any;
    min: any;
    max: any;
    draftCriteriaId: any;
    subscription: Subscription;
    allData: any;
    currentSelectedQtn: any;
    selectedOption: any;
    listOfRelation: any;
    condition: any;
    conditionMatchValue: any;
    conditionArray: any;
    myModal: ElementRef;
    readonly isValid: any;
    readonly isDirty: any;
    constructor(dynamicServe: DynamicFormBuilderService);
    parentMapping(): void;
    ngOnInit(): void;
    loadFormElement(item: any): void;
    saveEdit(): void;
    closeModel(action: any): void;
    open(content: any): void;
    deleteOption(opt: any, index: any): void;
    AddNewOptions(): void;
    copyElement(item: any): void;
    deleteElement(item: any): void;
    childrenDropEvent($event: any): void;
    deleteCondition(data: any, value: any): void;
}
