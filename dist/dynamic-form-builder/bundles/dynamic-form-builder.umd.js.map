{"version":3,"file":"dynamic-form-builder.umd.js.map","sources":["ng://dynamic-form-builder/lib/dynamic-form-builder.service.ts","node_modules/tslib/tslib.es6.js","ng://dynamic-form-builder/lib/dynamic-form-builder.component.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/dynamic-form-builder.component.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/field-builder/field-builder.component.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/textbox.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/dropdown.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/file.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/checkbox.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/radio.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/date.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/slider.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/multi-select.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/dynamic-form-builder.module.ts","ng://dynamic-form-builder/lib/dynamic-form-builder.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n// import { Injectable } from '@angular/core';\nimport { BehaviorSubject,Subject,Observable } from 'rxjs';\n\n\n// @Injectable({\n//   // providedIn: 'root'\n// })\nexport class DynamicFormBuilderService {\n\n  communicateSubject: Subject<any> = new Subject<any>();\n\n  // private messageSource = new BehaviorSubject('default message');\n  // currentMessage = this.messageSource.asObservable();\n\n  list:any=[];\n\n  all:any =[];\n\n  constructor() { }\n\n  currentMessage(){\n    return this.list;\n  }\n\n  sendData(obj) {\n\n    console.log(\"obj\",obj);\n\n    this.list = obj;\n    this.communicateSubject.next();\n  }\n\n  // setQuestionList(list){\n  //   this.list = list;\n  // }\n\n  // changeMessage(message: string) {\n  //   this.messageSource.next(message);\n  // }\n\n  getALl(): Observable<any>{\n\n    // let all = {\n    //   questionList:[]\n    // }\n    this.all = {\n      questionList:this.list\n    }\n    // return this.communicateSubject.asObservable();\n    return this.all;\n  }\n\n  \n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, FormArray } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { DndDropEvent } from 'ngx-drag-drop'\n// private dynamicServe: DynamicFormBuilderService\n\nimport { DynamicFormBuilderService } from './dynamic-form-builder.service'\n\n// import  { } from './dynamic-form-builder.service'\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'lib-dynamic-form-builder',\n  template: `<style>\n  p {\n      font-family: Lato;\n    }\n    .noPadding {\n        padding: 0px;\n    }\n    .margin-5 {\n        margin-top:5%;\n    }\n    .element {\n      border: 1px solid #ccc;\n      padding: 10px;\n      margin-bottom: 10px;\n      color: #333;\n      text-align: left;\n      text-transform: capitalize;\n      box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.19);\n  }\n    .form-group {\n        margin-bottom: 0.5rem;\n        border: 1px solid #ece7e7;\n    }\n    span.cursor-pntr {\n        cursor: pointer;\n        padding: 2px;\n    }\n    \n    \n  </style>\n  <div class=\"col-sm-12\">\n      \n\n    <div class=\"col-sm-12 noPadding\">\n   \n    <div class=\"card\">\n          <div dndDropzone class=\"card-body\" (dndDrop)=\"onDrop($event)\" >\n              <form (ngSubmit)=\"onSubmit(this.form.value)\" [formGroup]=\"form\" class=\"form-horizontal\">\n            <dynamic-form-builder [criteriaList]=\"getCriteria()\" [fields]=\"getFields()\" [form]=\"form\"  (onFieldUpdate)=\"onFieldUpdate($event)\" ></dynamic-form-builder>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-sm-4\" style=\"padding-top:25px\">\n          \n          <div  class=\"col-md-12\">\n            <!-- <dynamic-form-builder [criteriaList]=\"getCriteria()\" [fields]=\"getFields()\"></dynamic-form-builder> -->\n      \n            <span *ngFor=\"let item of jsonData\" style =\"padding:5px\">\n              <span [dndDraggable]=\"item\"  class=\"element\"  >{{ item.responseType=='multiselect'?'metrix':item.responseType }}</span>\n              </span>\n\n              <!-- <div class=\"col-sm-12 element\" (click)=\"addFormElement(item.responseType)\" >Number</div> -->\n            <!-- <div class=\"col-sm-12 element\" (click)=\"addFormElement('input')\" >Input</div>\n            <div class=\"col-sm-12 element\" (click)=\"addFormElement('number')\" >Number</div> -->\n\n          </div>\n      </div>\n\n\n      \n      <div class=\"col-sm-12\">\n      </div>`,\n  styleUrls: []\n})\nexport class DynamicFormBuilderComponent implements OnInit {\n  public form: FormGroup;\n  unsubcribe: any;\n  jsonData: any;\n  formData: any;\n  pageNumber: any;\n\n  // @Input() data;\n  @Input() events: Observable<any>;\n  // @Output() questionList = new EventEmitter();\n  @Output() questionTrigger = new EventEmitter();\n  eventsSubscription: any;\n\n  criteriaList:any;\n\n  public fields: any[] = [];\n\n\n  sendToService(data): void {\n    // send message to subscribers via observable subject\n    this.dynamicServe.sendData(data);\n  }\n\n\n  constructor(\n    private http: HttpClient, \n    private _formBuilder: FormBuilder, \n    private fb: FormBuilder,\n    private dynamicServe: DynamicFormBuilderService\n    ) {\n    // this.form = new FormGroup({\n    //   fields: this.fb.array([]),\n    // })\n    this.form = new FormGroup({\n      fields: new FormControl(JSON.stringify(this.fields))\n    })\n\n    this.unsubcribe = this.form.valueChanges.subscribe((update) => {\n      console.log(update);\n      // this.fields = JSON.parse(update.fields);\n    });\n  }\n\n\n  getCriteria(){\n    return this.criteriaList;\n  }\n  ngOnInit() {\n\n    this.criteriaList = [];\n    this.eventsSubscription = this.events.subscribe(data => {\n      console.log(\"calling from parent with data === \", data);\n      if (data) {\n\n        console.log(\"criteria list\",data.criteriaList);\n\n        this.criteriaList = data.criteriaList;\n        let dt = data['questionArray'];\n        this.formBuild(dt);\n      } else {\n        let obj = {\n          action: \"all\",\n          data: this.fields\n        }\n        console.log(\"to get all\", this.fields);\n        this.questionTrigger.emit(obj);\n      }\n    })\n    this.formData = [];\n    this.jsonData = [\n      {\n        \"responseType\": \"text\",\n\n      }, {\n        \"responseType\": \"number\",\n      }, {\n        \"responseType\": \"radio\",\n      },\n      {\n        \"responseType\": \"checkbox\",\n      },\n      {\n        \"responseType\": \"dropdown\"\n      }, {\n        \"responseType\": \"date\"\n      }, {\n        \"responseType\": \"slider\"\n      },\n      {\n        \"responseType\": \"multiselect\"\n      }\n    ]\n  }\n  onUpload(e) {\n    console.log(e);\n  }\n\n  getFields() {\n    return this.fields;\n  }\n\n  ngDistroy() {\n    this.unsubcribe();\n  }\n\n\n  getToolObj(ele, len) {\n\n    let obj = {\n\n    }\n    if (ele == 'text') {\n      obj = {\n        \"position\": len,\n        \"field\": len + \"question\",\n        \"type\": \"text\",\n        \"label\":  \"Question\",\n        \"placeholder\": \"Please enter your question here\",\n        \"description\": \"\",\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        }\n      }\n    } else if (ele == 'number') {\n      obj = {\n        \"position\": len,\n        \"field\": len + \"question\",\n        \"type\": \"number\",\n        \"label\":  \"Question\",\n        \"placeholder\": \"Please enter your question here\",\n        \"description\": \"\",\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        }\n      }\n    } else if (ele == 'radio') {\n      obj = {\n        \"position\": len,\n        field: len + \"question\",\n        type: 'radio',\n        name: len + \". question\",\n        \"label\":  \"Question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        },\n        options: [\n          { key: 'option1', label: 'Label 1' },\n          { key: 'option2', label: 'Label 1' }\n        ]\n      }\n    } else if (ele == \"checkbox\") {\n      obj = {\n        \"position\": len,\n        field: len + \"question\",\n        type: \"checkbox\",\n        name: len + \". question\",\n        \"label\":  \"Question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        },\n        options: [\n          { key: 'option1', label: 'option 1' },\n          { key: 'option2', label: 'option 2' }\n        ]\n      }\n    } else if (ele == \"dropdown\") {\n      obj = {\n        \"position\": len,\n        field: len + \"question\",\n        type: 'dropdown',\n        name: len + \". question\",\n        \"label\":  \"Question\",\n        value: 'option1',\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        },\n        options: [\n          { key: 'option1', label: 'Option 1' },\n          { key: 'option1', label: 'Option 2' }\n        ]\n      }\n    }\n    else if (ele == \"date\") {\n      obj = {\n        \"position\": len,\n        field: len + \"question\",\n        type: 'date',\n        name: len + \". question\",\n        \"label\":  \"Question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\",\n          \"maxDate\": \"\",\n          \"minDate\": \"\",\n\n        },\n        options: [\n\n        ]\n      }\n    } else if (ele == 'multiselect') {\n      if (ele == 'childDroped') {\n        let childdata = {\n          \"position\": len,\n          \"field\": len + \"question\",\n          \"type\": ele.type,\n          \"label\":  \"Question\",\n          \"child\": [],\n          \"placeholder\": \"Please add Child's here\",\n          \"description\": \"\",\n          \"validations\": {\n            \"required\": false,\n            \"minLenght\": \"\",\n            \"maxLength\": \"\"\n          }\n        }\n      }\n      let finalchild = [];\n\n      finalchild.push()\n\n\n      obj = {\n        \"field\": len + \"question\",\n        \"type\": \"multiselect\",\n        \"label\":  \"Question\",\n        \"child\": [],\n        \"placeholder\": \"Please add Child's here\",\n        \"description\": \"\",\n        \"validations\": {\n          \"required\": false,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        }\n      }\n    } else if (ele == \"slider\") {\n      obj = {\n        field: len + \"question\",\n        type: 'slider',\n        name: len + \". question\",\n        \"label\":  \"Question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"min\": \"\",\n          \"max\": \"\",\n          \"maxDate\": \"\",\n          \"minDate\": \"\",\n\n        },\n        options: [\n\n        ]\n      }\n    }\n\n    return obj;\n  }\n\n  onDrop(ele, action = \"\") {\n    console.log(\"drop ele\", ele);\n    if (ele.data) {\n      ele = ele.data.responseType\n    }\n    let len = this.fields.length + 1;\n    var obj = {};\n    if (action == \"copy\") {\n      let copyObj = {\n        \"position\": len,\n        \"field\": len + \"question\",\n        \"type\": ele.type,\n        \"label\": ele.label,\n        \"placeholder\": ele.placeholder,\n        \"validations\": ele.validations,\n        \"options\": ele.options,\n        \"description\": ele.description\n      }\n      obj = copyObj;\n\n    } else {\n\n\n      obj = this.getToolObj(ele, len);\n\n\n\n    }\n\n\n    let elem = this.fields;\n    let trnasformData = {\n      action: 'add',\n      data: obj\n    }\n    // console.log(\"transf\", trnasformData);\n\n    \n    this.questionTrigger.emit(trnasformData);\n\n    this.formData.push(obj);\n    let fieldsCtrls = {};\n\n    this.form = new FormGroup(fieldsCtrls);\n    // console.log(\"------\", obj);\n    for (let f of this.formData) {\n\n\n      if (f['type'] != 'checkbox') {\n\n        console.log(\"f.type\", f['field']);\n        fieldsCtrls[f['field']] = new FormControl(f['value'] || '')\n      } else {\n\n        let opts = {};\n        for (let opt of f['options']) {\n\n          opts[opt.key] = new FormControl(opt.label);\n        }\n        fieldsCtrls[f['field']] = new FormGroup(opts)\n      }\n\n      // const creds = this.form.controls.fields as FormArray;\n      // creds.push(this.fb.group(fieldsCtrls));\n\n\n      // console.log(\"fieldsCtrls\",fieldsCtrls);\n\n      // this.formData =  this.fields;\n\n    }\n    this.form = new FormGroup(fieldsCtrls);\n    // this.fields\n    // this.formBuild();\n    this.fields.push(obj);\n\n    let completeData = {\n      criteriaList:this.criteriaList,\n      questionList:this.fields\n    }\n    console.log(\"completeData\",completeData);\n    this.sendToService(completeData);\n    \n    console.log(\"fields controls\", this.form);\n\n  }\n\n\n  formBuild(data) {\n    let formData = [];\n    this.fields = [];\n\n    this.fields.slice(this.fields.length, 0);\n    formData = data;\n    let fieldsCtrls = {};\n    this.form = new FormGroup(fieldsCtrls);\n    for (let f of formData) {\n      if (f['type'] != 'checkbox') {\n        console.log(\"f.type\", f['field']);\n        fieldsCtrls[f['field']] = new FormControl(f['value'] || '')\n      } else {\n        let opts = {};\n        for (let opt of f['options']) {\n          opts[opt.key] = new FormControl(opt.label);\n        }\n        fieldsCtrls[f['field']] = new FormGroup(opts)\n      }\n    }\n    this.form = new FormGroup(fieldsCtrls);\n\n    this.fields = formData;\n    let obj = {\n      action: \"all\",\n      data: formData\n    }\n\n    console.log(\"this.fields-------\", this.fields);\n    this.questionTrigger.emit(obj);\n\n\n    // this.fields = data;\n\n    // let fieldsCtrls = {};\n\n    // console.log(\" this.fields\", data);\n    // for (let f of data) {\n\n\n    //   if (f.type != 'checkbox') {\n\n    //     fieldsCtrls[f.name] = new FormControl(f.value || '')\n    //   } else {\n    //     let opts = {};\n    //     for (let opt of f.options) {\n\n    //       opts[opt.key] = new FormControl(opt.value);\n    //     }\n    //     fieldsCtrls[f.name] = new FormGroup(opts)\n    //   }\n    // }\n    // this.form = new FormGroup(fieldsCtrls);\n  }\n\n  onSubmit(value) {\n    console.log(\"value\", this.fields);\n\n    // this.questionList.emit(this.fields);\n\n    let obj = {\n      action: \"all\",\n      data: this.fields\n    }\n    this.questionTrigger.emit(obj);\n  }\n\n\n  // (event) {\n  //   console.log('Element was dragged', event);\n  // }\n\n  ngOnDestroy() {\n    this.eventsSubscription.unsubscribe()\n  }\n\n\n  onFieldUpdate($event) {\n    console.log(\"eventData sssssss------\", $event.data);\n\n    let eventObj = $event\n    let trnasformData = {};\n    if ($event.action == \"copy\") {\n      this.onDrop($event.data, \"copy\");\n    } else if ($event.action == \"delete\") {\n      trnasformData = {\n        action: 'delete',\n        data: $event\n      }\n\n     \n\n    } else if ($event.action == \"childDroped\") {\n\n      console.log('this.fields', this.fields);\n\n      var final = this.fields.filter(\n        item => {\n          if (item.field === eventObj.data.mutiSelect.field) {\n\n            let obj = this.getToolObj($event.data.responseType, item.child.length + 1);\n            item.child.push(obj);\n            return item;\n          } else {\n            return item;\n          }\n        });\n\n      // final.push(obj);\n\n\n      // this.fields\n\n      console.log('final result', final);\n\n      // console.log(\"main obj\", obj);\n\n    } else {\n      trnasformData = {\n        action: 'update',\n        data: $event\n      }\n    }\n\n    let completeData = {\n      questionList:this.fields,\n      criteriaList:this.criteriaList\n    }\n\n    console.log(\"completeData\",completeData);\n    this.sendToService(completeData);\n\n    this.questionTrigger.emit(trnasformData);\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'dynamic-form-builder',\n  template:`\n   \n     <div cdkDropList (cdkDropListDropped)=\"drop($event)\"> <div *ngFor=\"let field of fields\"  cdkDrag>\n          <field-builder [criteriaList]=\"criteriaList\" *ngIf=\"!field.isDeleted\" [field]=\"field\" [form]=\"form\"  \n          (sendDataToParent)=\"eventFromChild($event)\" (copyOrDeleteEvent)=\"copyOrDeleteEvent($event)\">\n          </field-builder>\n      </div></div>`, \n})\nexport class DynamicFormBuilderComponent implements OnInit {\n  @Output() onFieldUpdate = new EventEmitter();\n  @Input() fields: any[] = [];\n\n  @Input() criteriaList : any[] = [];\n  // form: FormGroup;\n  @Input() form:any;\n  formData:any = [];\n  constructor() { }\n\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.fields, event.previousIndex, event.currentIndex);\n  }\n\n  copyOrDeleteEvent(data){\n\n    console.log('data type', typeof(data));\n\n    if(typeof(data) === 'string') {\n      data  = JSON.parse(data);\n      console.log('inside string');\n    }\n\n    // let childdata = data;\n    // let finaldata = JSON.parse(childdata);\n\n    // console.log(JSON.parse(data),\"parse copyEvent occured\");\n    // let obj = data;\n    console.log(data,\"copyEvent occured\");\n\n    // data.field =(this.fields.length+1)+\"question\";\n    // data.label = (this.fields.length+1)+\" question\";\n\n    if(data.action==\"copy\"){\n\n      console.log(data,\"this.form before\");\n\n     let transferData =  {\n        action:\"copy\",\n        data:data\n      }\n\n      this.onFieldUpdate.emit(transferData);\n      \n    //  data.field = (this.fields.length+1)+\"question\";\n\n    //  console.log(\"data\",data)\n      // this.formBuild(obj);\n\n    }else if(data.action==\"delete\"){\n\n      var index = this.fields.indexOf(data);\n\n      console.log(\"ind\",index);\n      \n      this.onFieldUpdate.emit(data);\n\n      // this.fields.splice(index, 1);\n\n      \n\n      // this.fields = this.fields.filter(function(value, index, arr){\n      //   return value!=data;\n      // });\n     \n\n    \n      // console.log(\"evens\",evens);\n      // this.fields= evens;\n      // console.log(\"this.form\",this.form);\n      // this.fields.\n      // console.log(this.fields.length,\"copyEvent occured\",evens);\n    } else if(data.action ==\"childDroped\"){\n      this.onFieldUpdate.emit(data);\n    }\n    \n  }\n\n  eventFromChild(data:any){\n\n    this.onFieldUpdate.emit(data);\n    console.log(\"data from child  ------- \",data);\n  }\n\n  ngOnInit() {\n\n    this.formData = this.fields;\n\n    console.log(\"this.form ---\",this.form)\n    // this.formBuild();\n  }\n\n//   formBuild(item){\n//     let fieldsCtrls = {};\n\n//     this.form = new FormGroup(fieldsCtrls);\n\n//     // var formData = this.fields;\n\n//     // console.log(\"this.fields\",this.fields); \n\n//     let len = this.fields.length + 1;\n\n\n//     var obj = {\n//       \"position\":len,\n//       \"field\": len + \"question\",\n//       \"type\": item.type,\n//       \"label\": item.label,\n//       \"placeholder\": item.placeholder,\n//       \"validations\":item.validations  \n\n//     }\n   \n//     this.fields.push(obj);\n//    this.fields.forEach(function(f){\n//     // console.log(\"f.type\", f);\n\n//     if (f['type'] != 'checkbox') {\n   \n//       fieldsCtrls[f['field']] = new FormControl(f['value'] || '')\n//     } else {\n\n//       let opts = {};\n//       for (let opt of f['options']) {\n\n//         opts[opt.key] = new FormControl(opt.label);\n//       }\n//       fieldsCtrls[f['field']] = new FormGroup(opts)\n//     }\n//   });\n\n//   this.form = new FormGroup(fieldsCtrls);\n\n//   // console.log(\"fieldsCtrls\",fieldsCtrls);\n// }\n}\n","import { Component, Input, OnInit, ViewChild, ElementRef, EventEmitter, Output } from '@angular/core';\n// import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport  { DynamicFormBuilderService } from '../../dynamic-form-builder.service';\nimport { Subscription } from 'rxjs';\nimport { isNgTemplate } from '@angular/compiler';\n\n\n\n\n@Component({\n  selector: 'field-builder',\n  template: `\n  <style>\n  .mat-slider-horizontal {\n    min-width: 80% !important;\n  }\n  .example-radio-group {\n    display: flex;\n    flex-direction: block;\n    margin: 15px 0;\n  }\n\n  .mat-form-field {\n    display: block;\n    position: relative;\n    flex: auto;\n    min-width: 0;\n    width: 372px;\n  }\n  .input-group {\n    position: relative;\n     border-collapse: separate;\n     display: block;\n  }\n  \n  .example-radio-button {\n    margin: 5px;\n  }\n  .action-component {\n    padding:10px 10px 0px 0px;\n    right: 0px;\n    cursor: pointer;\n    float: right;\n  \n}\nspan.cursor-pntr {\n  cursor: pointer;\n  padding: 2px;\n}\n.form-control {\n  display: block;\n  visibility: hidden;\n\n}\n.label.col-md-8.form-control-label {\n  text-decoration: underline;\n}\n\n  </style>\n  <div class=\"row\"  *ngIf=\"openEdit\" style=\"padding: 15px;\n  border: 1px solid #ccc;margin-top:10px;width:85%;margin: auto;\n  box-shadow: 1px 1px 1px 1px rgba(0,0,0,0.19);\">\n\n    <div class=\"col-sm-6\">\n      <mat-form-field>\n        <input matInput placeholder=\"Label\" [(ngModel)]=\"label\" name=\"label\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"col-sm-6\">\n      <mat-form-field>\n        <input matInput placeholder=\"Input Place Holder\" [(ngModel)]=\"placeholder\" name=\"placeholder\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"col-sm-6\">\n      <mat-form-field>\n        <input matInput placeholder=\"Hint/Description\" [(ngModel)]=\"description\" name=\"Description\">\n      </mat-form-field>\n    </div>\n\n<div class=\"col-sm-6 \" style=\"display:none\">\n  <mat-form-field>\n  <mat-label>Input Type</mat-label>\n    <mat-select  [(ngModel)]=\"type\">\n      <mat-option value=\"text\">text</mat-option>\n      <mat-option value=\"number\">number</mat-option>\n      <mat-option value=\"radio\">radio</mat-option>\n      <mat-option value=\"date\">date</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<div class=\"col-sm-6\">\n<mat-form-field>\n<mat-label>Pages</mat-label>\n  <mat-select  [(ngModel)]=\"pageNumber\">\n    <mat-option value=\"page_1\">page 1</mat-option>\n    <mat-option value=\"page_2\">page 2</mat-option>\n    <mat-option value=\"page_3\">page 3</mat-option>\n  </mat-select>\n</mat-form-field>\n</div>\n \n<div class=\"col-sm-6\">\n<mat-form-field>\n<mat-label>Criteria</mat-label>\n  <mat-select  [(ngModel)]=\"draftCriteriaId\">\n    <mat-option *ngFor=\"let item of criteriaList\" value=\"item._id\">{{ item.name}}</mat-option>\n   </mat-select>\n</mat-form-field>\n</div>\n\n\n\n    <div class=\"col-sm-6\" *ngIf=\"type=='slider'\">\n    <mat-form-field>\n    <input type=\"text\" placeholder=\"Min\" matInput  [(ngModel)]=\"min\" name=\"min value\">\n    </mat-form-field>\n    </div>\n\n    <div class=\"col-sm-6\" *ngIf=\"type=='slider'\">\n    <mat-form-field>\n    <input type=\"text\" placeholder=\"Max\" matInput  [(ngModel)]=\"max\" name=\"min value\">\n    </mat-form-field>\n    </div>\n    \n  <div class=\"col-sm-6\" *ngIf=\"type=='date'\">\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"minDate\" placeholder=\"Choose a min date\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"pickerMaxDate\" [(ngModel)]=\"maxDate\" placeholder=\"Choose a max date\">\n      <mat-datepicker-toggle matSuffix [for]=\"pickerMaxDate\"></mat-datepicker-toggle>\n      <mat-datepicker #pickerMaxDate></mat-datepicker>\n    </mat-form-field>\n\n\n    </div>\n    <div class=\"col-sm-12\" *ngIf=\"type=='radio' || type=='checkbox' || type=='dropdown'\">\n    <label for=\"label\" class=\"col-sm-12\">Options</label>\n    \n    <ul class=\"col\" *ngFor=\"let opt of options;let index\">\n     <li class=\"\">\n      <span>{{opt.label}} </span><span style=\"\n      margin-left: 30px;\" (click)=\"deleteOption(opt,index)\">\n      <i class=\"fa fa-trash\"></i></span>\n    </li>\n    </ul>\n\n    <div class=\"col-sm-6\">\n    <div class=\"input-group\">\n    <mat-form-field>\n    <input type=\"text\" placeholder=\"Label\" matInput style=\"margin-bottom: 10px;\" [(ngModel)]=\"newOptionLabel\" name=\"newOption\">\n    </mat-form-field>\n    <mat-form-field>\n    <input type=\"tex\" matInput name=\"newOption\" placeholder=\"key\"  [(ngModel)]=\"newOptionKey\">\n    </mat-form-field>  \n    </div>\n      <button mat-flat-button color=\"primary\" style=\"margin-top: 10px;\"  (click)=\"AddNewOptions()\">\n      Add\n      </button>\n    </div>\n    </div>\n\n        \n    <div class=\"col-sm-12\">\n<label id=\"example-radio-group-label\">Do you want to related the question based on below options ?</label>\n<mat-radio-group\naria-labelledby=\"example-radio-group-label\"\nclass=\"example-radio-group\"\n[(ngModel)]=\"selectedOption\">\n<mat-radio-button class=\"example-radio-button\" *ngFor=\"let ele of options\"  [value]=\"ele\">\n{{ ele.label }}\n</mat-radio-button>\n</mat-radio-group>\n</div>\n\n\n<div class=\"col-sm-6\">\n<mat-form-field >\n<mat-label>Select Question to add </mat-label>\n<select matNativeControl [(ngModel)]=\"currentSelectedQtn\" >\n<option *ngFor=\"let values of allData.questionList.questionList\"  [ngValue]=\"values\"> {{ values.label }} </option>\n</select>  \n</mat-form-field>\n</div>\n\n<div class=\"col-sm-6\" *ngIf=\"type=='text' || type=='date' || type=='number'\">\n<mat-form-field >\n<mat-label>Select Condition </mat-label>\n<select matNativeControl [(ngModel)]=\"condition\" >\n<option *ngFor=\"let values of conditionArray\"  [ngValue]=\"values.condition\"> {{ values.label }} </option>\n</select>\n</mat-form-field>\n</div>\n\n<div class=\"col-sm-12\" *ngIf=\"type=='text' || type=='date' || type=='number'\">\n<mat-form-field>\n  <input type=\"tex\" matInput name=\"conditionMatchValue\" placeholder=\"\"  [(ngModel)]=\"conditionMatchValue\">\n  </mat-form-field> \n</div>\n\n<div class=\"col-sm-2\">\n<button mat-flat-button color=\"primary\" style=\"margin-top: 10px;\"  (click)=\"parentMapping()\">\nAdd\n</button>\n</div>\n<ul class=\"col-sm-12\" *ngFor=\"let relate of listOfRelation;let index\">\n <li class=\"col-sm-12\">\n  <span>{{relate.field}} </span><span style=\"\n  margin-left: 30px;\" >\n  <i class=\"fa fa-trash\"></i></span>\n</li>\n</ul>\n\n    \n<div class=\"col-sm-12\">\n<label id=\"example-radio-group-label\">is Reqired ?</label>\n<mat-radio-group\n  aria-labelledby=\"example-radio-group-label\"\n  class=\"example-radio-group\"\n  [(ngModel)]=\"required\">\n  <mat-radio-button class=\"example-radio-button\" [value]=true>\n    Yes\n  </mat-radio-button>\n  <mat-radio-button class=\"example-radio-button\" [value]=false>\n    No\n  </mat-radio-button>\n</mat-radio-group>\n</div>\n\n<div class=\"col-sm-12\" *ngIf=\"type=='date'\">\n<label id=\"example-radio-group-label\">is autoCollect</label>\n<mat-radio-group\n  aria-labelledby=\"example-radio-group-label\"\n  class=\"example-radio-group\"\n  [(ngModel)]=\"autoCollect\">\n  <mat-radio-button class=\"example-radio-button\" [value]=true>\n    True\n  </mat-radio-button>\n  <mat-radio-button class=\"example-radio-button\" [value]=false>\n    False\n  </mat-radio-button>\n</mat-radio-group>\n</div>\n\n  \n<div  class=\"col-sm-12\">\n\n<button mat-flat-button color=\"primary\" style=\"margin-right:10px;\"  (click)=\"closeModel('save')\">\nSave\n</button>\n\n</div>\n  </div>\n  <div class=\"form-group row\" [formGroup]=\"form\" style=\"padding:0px;margin:0px;margin-top:10px;box-shadow: 1px 1px 2px 1px rgba(0,0,0,0.19);padding-bottom:10px;\">\n  <span class=\"qtn_position\"><span class=\"\">#{{ field.position }}</span></span>\n  <div class=\"action-component\" >\n\n  <span class=\"cursor-pntr\" (click)=\"copyElement(field)\"><i class=\"fa fa-copy\"></i></span>\n  <span class=\"cursor-pntr\" (click)=\"deleteElement(field)\"><i class=\"fa fa-trash\"></i> </span>\n  <span class=\"cursor-pntr\"><i class=\"fa fa-edit\" (click)=\"loadFormElement(field)\" ></i></span>\n  \n  </div>\n    <div class=\"col-md-12\" [ngSwitch]=\"field.type\">\n    <textbox *ngSwitchCase=\"'number'\" [field]=\"field\" [form]=\"form\"></textbox>\n    <textbox *ngSwitchCase=\"'text'\" [field]=\"field\" [form]=\"form\"></textbox>\n    <date *ngSwitchCase=\"'date'\" [field]=\"field\" [form]=\"form\"></date>\n    <slider *ngSwitchCase=\"'slider'\" [field]=\"field\" [form]=\"form\"></slider>\n      <dropdown *ngSwitchCase=\"'dropdown'\" [field]=\"field\" [form]=\"form\"></dropdown>\n      <checkbox *ngSwitchCase=\"'checkbox'\" [field]=\"field\" [form]=\"form\"></checkbox>\n      <radio *ngSwitchCase=\"'radio'\" [field]=\"field\" [form]=\"form\"></radio>\n      <lib-multi-select *ngSwitchCase=\"'multiselect'\" (childrenDropEvent)=\"childrenDropEvent($event)\" [field]=\"field\" [form]=\"form\"></lib-multi-select>\n      <file *ngSwitchCase=\"'file'\" [field]=\"field\" [form]=\"form\"></file>\n      <div style=\"float:right\">\n         \n       </div> \n       </div>`,\n  styles: [ `\n  .qtn_position {\n    float: left;\n    width: 40px;\n    padding: 5px 0px 0px 5px;\n    color: #ccc;\n  } `\n ]\n})\n\n// <div class=\"alert alert-danger my-1 p-2 fadeInDown animated\" *ngIf=\"!isValid && isDirty\">{{field.label}} is required</div>\n\nexport class FieldBuilderComponent implements OnInit {\n  @Input() field: any;\n\n  @Input() criteriaList:any;\n  @Input() form: any;\n\n  @Output() sendDataToParent = new EventEmitter<any>();\n\n  @Output() copyOrDeleteEvent = new EventEmitter<string>();\n  \n  closeResult: string;\n  modalReference: any;\n  pageNumber; any;\n  label: any;\n  type: any;\n  placeholder: any;\n  options: any;\n  newOptionKey: any;\n  newOptionLabel: any;\n\n  activeModelData: any;\n  validations: any;\n  required: any;\n  autoCollect: any;\n  openEdit: boolean = false;\n  _id: any;\n  description: any;\n  minDate: any;\n  maxDate: any;\n  min: any;\n  max: any;\n  draftCriteriaId:any;\n  subscription: Subscription;\n  allData:any;\n  currentSelectedQtn:any;\n  selectedOption:any;\n\n  listOfRelation:any = [];\n  condition:any;\n\n  conditionMatchValue:any;\n\n  conditionArray:any = [\n    {\n    label:\"equals\",\n    condition:\"===\"\n    },\n    {\n      label:\"Not Equal To\",\n      condition:\"!=\"\n    },\n    {\n      label:\"Greater Than\",\n      condition:\">\"\n    },\n    {\n      label:\"Less Than\",\n      condition:\"<\"\n    },\n    {\n      label:\"Greater Than Or Equal\",\n      condition:\">=\"\n    },\n    {\n      label:\"Less Than Or Equal\",\n      condition:\"<=\"\n    }\n  ]\n\n\n  // private modalRef: NgbModalRef;\n  @ViewChild('content', { static: false }) myModal: ElementRef;\n\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n  constructor(\n    // private modalService: NgbModal\n    private dynamicServe: DynamicFormBuilderService\n    ) { \n\n     }\n\n  // getAll(){\n  //   this.subscription = this.dynamicServe.getALl().subscribe(message => { \n  //     console.log(\"get all info\",message);\n\n  //    });\n\n  // }   \n\n\n  parentMapping(){\n\n\n    console.log(this.condition,\"condition\",this.currentSelectedQtn,\"selectedOption\",this.selectedOption);\n    let obj = {}\n\n    // option:this.selectedOption,\n    // question:this.currentSelectedQtn\n\n    // obj['visibleIf'] = [];\n\n    let condiObj = {\n      operator:this.condition,\n      value:this.conditionMatchValue,\n      field:this.field.field,\n      // parent:this.selectedOption.field\n\n    }\n\n\n    console.log(\"condiObj\",condiObj);\n\n    let getSelectQuestion = this.allData['questionList']['questionList'].filter(ele =>{\n      if(ele.field == this.field.field){\n        return ele;\n      }\n    });\n\n\n\n    console.log(\"getSelectQuestion\",getSelectQuestion);\n\n    let isAvailable = false;\n    if( getSelectQuestion['visibleIf'] && getSelectQuestion['visibleIf'].length > 0){\n      isAvailable = getSelectQuestion['visibleIf'].filter(item=>{\n            if(item.visibleIf.field==this.field.field){\n              return true\n            }\n      })\n    }\n\n\n\n    let allData = [];\n   \n     allData = this.allData['questionList']['questionList'].filter(ele =>{\n        if(ele.field == this.currentSelectedQtn.field){\n\n          if(ele.visibleIf && ele.visibleIf.length > 0 &&  isAvailable==false){\n            ele.visibleIf.push(condiObj);\n          }else{\n            ele.visibleIf = [];\n            ele.visibleIf.push(condiObj);\n          }\n          \n          return ele;\n        }else{\n          return ele\n        }\n      });\n    \n\n\n    console.log(\"all data in question\",allData);\n\n    // this.sendDataToParent()\n   \n\n    if(!this.listOfRelation.includes(condiObj)){\n      this.listOfRelation.push(condiObj);\n    } \n\n     \n\n    if(this.condition){\n\n      \n\n\n    }\n    \n\n\n    // 'option':this.selectedOption,\n    //       'question':this.currentSelectedQtn\n\n    // this.field.childQnt = this.currentSelectedQtn.field;\n\n    console.log(\"this.field.validations.relation\",this.listOfRelation);\n\n\n  }\n\n  ngOnInit() {\n    \n\n\n    // this.currentSelectedQtn = { };\n    \n    // this.dynamicServe.getALl();\n\n    this.options = [];\n    this.validations = {\n      'relation':[]\n    }\n\n    this.field.validations = {\n      'relation':[]\n  };\n\n  }\n  loadFormElement(item) {\n\n\n    this.allData =  this.dynamicServe.getALl();\n\n    console.log(this.allData,\" all questions \", this.allData['questionList']);\n\n    // this.dynamicServe.getALl()\n\n    // console.log(\"item ---\", );\n\n    this.activeModelData = \"\";\n    this.label = item.label;\n    this.type = item.type;\n    this.placeholder = item.placeholder;\n    this.options = item.options;\n    this.draftCriteriaId = item.draftCriteriaId;\n\n    \n\n    this.required = item.validations.required;\n    \n    this.description = item.description;\n\n    if(item.validations.relation){\n      this.listOfRelation = item.validations.relation;\n    }\n\n    if (item.type == \"date\") {\n      this.minDate = item.validations.minDate;\n      this.maxDate = item.validations.maxDate\n      this.autoCollect = item.validations.autoCollect;\n    }\n    else if (item.type == \"slider\") {\n      this.min = item.validations.min;\n      this.max = item.validations.max;\n    }\n\n\n  \n    this.required = this.field.validations.required;\n    console.log(item.validations.required, \"item.validations.required\", this.required, \"label\", this.label);\n    // console.log(\"label\",this.label);\n\n    this.openEdit = this.openEdit ? false : true;\n    // document.getElementById(\"openModalButton\").click();\n    // this.open(this.myModal);\n    // this.myModal.show();\n    // this.myModal.nativeElement.className = 'modal fade show';\n\n  }\n\n  saveEdit() {\n  }\n  closeModel(action) {\n\n    if (action == \"save\") {\n\n\n\n      console.log(this.validations,\"this.field\", this.required);\n      // this.modalReference.close();\n\n\n      // this.activeModelData.field = this.field.field;\n\n      // this.activeModelData.label = this.label;\n      // this.activeModelData.type = this.type;\n      // this.activeModelData.placeholder = this.placeholder;\n      // this.activeModelData.options = this.options;\n\n      let obj = {\n        label: this.label,\n        type: this.type,\n        placeholder: this.placeholder,\n        options: this.options,\n        validations: this.validations,\n        field: this.field,\n        _id: this._id,\n        description: this.description,\n        draftCriteriaId:this.draftCriteriaId,\n        \n      }\n\n      if (this.type == 'date') {\n        obj['minDate'] = this.minDate;\n        obj['maxDate'] = this.maxDate\n      } else if (this.type == 'slider') {\n        obj['min'] = this.min;\n        obj['max'] = this.max;\n      }\n\n      // console.log(\"obj\",obj);\n\n\n    \n\n      // this.field.label = this.label;\n\n\n      this.field.label = this.label;\n      this.field.type = this.type;\n      this.field.placeholder = this.placeholder;\n      this.field.options = this.options;\n      this.field.description = this.description;\n      this.field.draftCriteriaId = this.draftCriteriaId;\n\n      if (this.type == 'date') {\n        this.field.validations.minDate = this.minDate;\n        this.field.validations.maxDate = this.maxDate;\n        this.field.validations.autoCollect = this.autoCollect;\n      } else if (this.type == 'slider') {\n        this.field.validations.min = this.min;\n        this.field.validations.max = this.max;\n      }\n\n      // if(this.field.validations.relation){\n\n      if(this.listOfRelation){\n        obj.validations.relation = this.listOfRelation;\n        this.field.validations.relation = this.listOfRelation;\n      }\n        \n      // }\n\n      \n\n      // this.field.validations\n\n      // console.log(\" this.field.validations.required\", this.field.validations.required, \"sdds\", this.required);\n      this.field.validations.required = this.required;\n      this.field.validations.autoCollect = this.autoCollect;\n\n\n      console.log(obj,\"this.field.validations\",this.field.validations);\n      let op = {\n        action:\"save\",\n        data:obj\n      }\n\n      this.sendDataToParent.emit(op);\n      // this.sendDataToParent.emit(JSON.stringify(obj));\n\n      // console.log(\" this.field\", this.field);\n      this.openEdit = false;\n\n      // this.sendDataToParent.emit(this.activeModelData);\n\n    } else {\n\n      this.openEdit = false;\n      // this.modalReference.close();\n    }\n\n    // this.modalService.close();\n    //  this.myModal.nativeElement.className = 'modal hide';\n  }\n\n  open(content) {\n\n\n\n    // console.log(\" this.activeModelData\", selectedData);\n    // this.modalReference = this.modalService.open(content);\n    // this.modalReference.result.then((result) => {\n    //   this.closeResult = `Closed with`;\n    // }, (reason) => {\n    //   this.closeResult = `Dismissed`;\n    // });\n  }\n\n  // private getDismissReason(reason: any): string {\n  //   // if (reason === ModalDismissReasons.ESC) {\n  //   //   return 'by pressing ESC';\n  //   // } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n  //   //   return 'by clicking on a backdrop';\n  //   // } else {\n  //   //   return `with: ${reason}`;\n  //   // }\n  // }\n\n  deleteOption(opt, index) {\n    console.log(\"delete\", this.options);\n\n    // let newArr = [];\n    let optionsArr = this.options.filter(item => {\n      // if(item.lable==opt.label && item.key==opt.key){\n\n      // }else{\n\n      // }\n\n      return (item.label != opt.label && item.key != opt.key)\n\n      // if(item.lable==opt.label && item.key==opt.key){\n\n      // }else{\n      //   return true;\n      // }\n    })\n\n    this.options = optionsArr;\n    console.log(\"delete new \", optionsArr);\n  }\n  AddNewOptions() {\n\n    if (this.newOptionKey != \"\" && this.newOptionLabel != \"\") {\n\n      console.log(\"this.newOption\", this.newOptionLabel);\n\n      if (Array.isArray(this.options)) {\n\n      } else {\n        this.options = [];\n      }\n      this.options.push({\n        key: this.newOptionKey,\n        label: this.newOptionLabel\n      });\n\n      console.log(\"this.options.push\", this.options);\n    }\n    this.newOptionKey = \"\";\n    this.newOptionLabel = \"\";\n  }\n\n  copyElement(item) {\n    // this.field.push(item);\n    item.action = 'copy';\n    console.log(\"field ----------\", item);\n    this.copyOrDeleteEvent.emit(item);\n\n  }\n  deleteElement(item) {\n\n    item.action = 'delete';\n    this.field.isDelete = true;\n    this.copyOrDeleteEvent.emit(item);\n    console.log(\"field delete\", this.field);\n\n  }\n  childrenDropEvent($event){\n    console.log(\"childrenDropEvent\", this.field);\n    // const action  = 'childDroped';\n    let newObj = {\n      action : 'childDroped',\n      data:$event\n    }\n   \n    this.copyOrDeleteEvent.emit(JSON.stringify(newObj));\n    console.log(\"field delete\", this.field);\n  }\n}\n\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n  selector: 'textbox',\n  template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-8 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n      </label>\n    \n        <input *ngIf=\"!field.multiline\" [attr.type]=\"field.type\" class=\"form-control\"  [id]=\"field.field\" [name]=\"field.field\" >\n        <textarea *ngIf=\"field.multiline\"  [id]=\"field.field\"\n        rows=\"20\" class=\"form-control\" [placeholder]=\"field.placeholder\"></textarea>\n\n      </div> \n    `,\n    styles: [`\n    .form-control {\n      display: none;\n    }\n    \n  `]\n})\nexport class TextBoxComponent {\n  @Input() field: any = {};\n  @Input() form: FormGroup;\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n \n  \n  constructor() {\n\n    // this.form.controls = this.field.name;\n    // console.log(\"form\",this.form);\n\n  }\n \n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'dropdown',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-8 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <select class=\"form-control\" [id]=\"field.field\">\n          <option *ngFor=\"let opt of field.options\" [value]=\"opt.key\">{{opt.label}}</option>\n        </select>\n      </div> \n    `,\n    styles: [`\n    .form-control {\n      display: none;\n    }\n    \n  `]\n})\nexport class DropDownComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n\n    constructor() {\n\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'file',\n    template: `\n      <div [formGroup]=\"form\">\n        <div *ngIf=\"!field.value\" class=\"drop-container dropzone\" dropZone \\\n          (dropped)=\"field.onUpload($event)\">\n          <p class=\"m-0\">\n            Drag a file here or\n            <label class=\"upload-button\">\n              <input type=\"file\" multiple=\"\" (change)=\"field.onUpload($event.target.files)\"> browse\n            </label>\n            to upload.\n          </p>\n        </div>\n        <div *ngIf=\"field.value\">\n          <!-- <button type=\"button\" class=\"btn btn-primary\">Change</button> -->\n          <div class=\"card\">\n            <img class=\"card-img-top\" [src]=\"field.value\">\n          </div>\n        </div>\n      </div> \n    `,\n    styles:[\n      `\n      .drop-container {\n        background: #fff;\n        border-radius: 6px;\n        height: 150px;\n        width: 100%;\n        box-shadow: 1px 2px 20px hsla(0,0%,4%,.1);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border: 2px dashed #c0c4c7;\n      }\n      p {\n        font-size: 16px;\n        font-weight: 400;\n        color: #c0c4c7; \n      }\n      .upload-button {\n        display: inline-block;\n        border: none;\n        outline: none;\n        cursor: pointer;\n        color: #5754a3;\n      }\n      .upload-button input {\n        display: none;\n      }\n      .dropzone { \n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column; \n        border-radius: 5px;\n        background: white;\n        margin: 10px 0;\n      }\n      .dropzone.hovering {\n          border: 2px solid #f16624;\n          color: #dadada !important;\n      }\n      progress::-webkit-progress-value {\n        transition: width 0.1s ease;\n      }\n      `\n    ]\n})\nexport class FileComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n    }\n\n    ngOnChange(){\n      console.log(this.field.value);\n      // this.field.value.\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'checkbox',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-12 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <div [formGroupName]=\"field.field\" >\n          <div *ngFor=\"let opt of field.options\" class=\"form-check form-check\">\n          <label class=\"form-check-label\">\n             <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\" />\n             {{opt.label}}</label>\n          </div>\n        </div>\n\n      </div> \n    `,\n    styles: [`\n    .form-control {\n      display: none;\n    }\n  `]\n})\nexport class CheckBoxComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'radio',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-12 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <div class=\"form-check\" *ngFor=\"let opt of field.options\">\n          <input class=\"form-check-input\" type=\"radio\" [id]=\"field.field\" [value]=\"opt.key\">\n          <label class=\"form-check-label\">\n            {{opt.label}}\n          </label>\n        </div>\n      </div> \n    `,\n    styles: [`\n    .form-control {\n      display: none;\n    }\n    \n  `]\n})\nexport class RadioComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'date',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-8 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <input *ngIf=\"!field.multiline\" [attr.type]=\"field.type\" class=\"form-control\" \n         [id]=\"field.field\" [name]=\"field.field\">\n        <textarea *ngIf=\"field.multiline\" [class.is-invalid]=\"isDirty && !isValid\" [id]=\"field.field\"\n        rows=\"20\" class=\"form-control\" [placeholder]=\"field.placeholder\"></textarea>\n\n      </div> \n    `,\n    styles: [`\n    .form-control {\n      display: none;\n    }\n    \n  `]\n})\nexport class DateComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n      // this.form.controls = this.field.name;\n      // console.log(\"form\",this.form);\n\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'slider',\n    template: `\n      <div [formGroup]=\"form\" >\n      <label class=\"col-md-0 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <input *ngIf=\"!field.multiline\" type=\"hidden\" class=\"form-control\" [id]=\"field.field\" [name]=\"field.field\">\n        \n        <mat-slider\n   class = \"tp-margin\"\n   [disabled] = \"false\"\n   [invert] = \"false\"      \n   [thumbLabel] = \"false\"\n   [max]=\"field.max\"\n   [min]=\"field.min\"    \n   [vertical] = \"false\">\n</mat-slider>\n\n      </div> \n    `,\n    styles: [`\n    .form-control {\n      display: none;\n    \n    }\n    \n  `]\n})\nexport class SliderComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n      // this.form.controls = this.field.name;\n      // console.log(\"form\",this.form);\n\n    }\n}","import { Component, Input, Output, EventEmitter, NgModule, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [ReactiveFormsModule, FormsModule],\n  declarations: []\n})\n\n\n@Component({\n  selector: 'lib-multi-select',\n  template: `<div [formGroup]=\"form\" dndDropzone  (dndDrop)=\"onDropNew($event,field)\" class=\"card-body\">\n  <label class=\"col-md-8 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n  <textarea  rows=\"2\" class=\"form-control\">\n  \n  </textarea>\n  <div class=\"row\" *ngIf=\"openEditChild\" style=\"padding: 20px;\n  border: 1px solid #ccc;margin-top:10px; margin:40px; margin-left: 20%;\n  box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.19);\">\n\n  <div class=\"col-sm-7 form-group\">\n    <mat-form-field>\n      <input matInput placeholder=\"Label\" [(ngModel)]=\"label\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-7 form-group\">\n    <mat-form-field>\n      <input matInput placeholder=\"Input Place Holder\" [(ngModel)]=\"placeholder\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-7 form-group\">\n    <mat-form-field>\n      <input matInput placeholder=\"Hint/Description\" [(ngModel)]=\"description\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-7 form-group\">\n    <mat-form-field>\n      <mat-label>Input Type</mat-label>\n      <mat-select [(ngModel)]=\"type\" [ngModelOptions]=\"{standalone: true}\">\n        <mat-option value=\"text\">text</mat-option>\n        <mat-option value=\"number\">number</mat-option>\n        <mat-option value=\"radio\">radio</mat-option>\n        <mat-option value=\"date\">date</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-7 form-group\">\n    <mat-form-field>\n      <mat-label>Pages</mat-label>\n      <mat-select [(ngModel)]=\"pageNumber\" [ngModelOptions]=\"{standalone: true}\">\n        <mat-option value=\"page_1\">page 1</mat-option>\n        <mat-option value=\"page_2\">page 2</mat-option>\n        <mat-option value=\"page_3\">page 3</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-7 form-group\" *ngIf=\"type=='slider'\">\n    <mat-form-field>\n      <input type=\"text\" placeholder=\"Min\" matInput [(ngModel)]=\"min\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-7 form-group\" *ngIf=\"type=='slider'\">\n    <mat-form-field>\n      <input type=\"text\" placeholder=\"Max\" matInput [(ngModel)]=\"max\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-sm-12 form-group\" *ngIf=\"type=='date'\">\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"minDate\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Choose a min date\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"pickerMaxDate\" [(ngModel)]=\"maxDate\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Choose a max date\">\n      <mat-datepicker-toggle matSuffix [for]=\"pickerMaxDate\"></mat-datepicker-toggle>\n      <mat-datepicker #pickerMaxDate></mat-datepicker>\n    </mat-form-field>\n\n\n  </div>\n  <div class=\"col-sm-12 form-group\" *ngIf=\"type=='radio' || type=='checkbox' || type=='dropdown'\">\n    <label for=\"label\" class=\"col-sm-12\">Options</label>\n\n    <div class=\"col-sm-7 form-group\" *ngIf=\"type=='slider'\">\n      <mat-form-field>\n        <input type=\"text\" placeholder=\"Max\" matInput [(ngModel)]=\"max\" [ngModelOptions]=\"{standalone: true}\">\n      </mat-form-field>\n    </div>\n\n  </div>\n\n\n  <div class=\"col-sm-7\">\n    <label id=\"example-radio-group-label\">is Reqired ?</label>\n    <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"required\">\n      <mat-radio-button class=\"example-radio-button\" [value]=true>\n        Yes\n      </mat-radio-button>\n      <mat-radio-button class=\"example-radio-button\" [value]=false>\n        No\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n\n  <div class=\"col-sm-7\" *ngIf=\"type=='date'\">\n    <label id=\"example-radio-group-label\">is autoCollect</label>\n    <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [(ngModel)]=\"autoCollect\" [ngModelOptions]=\"{standalone: true}\">\n      <mat-radio-button class=\"example-radio-button\" [value]=true>\n        True\n      </mat-radio-button>\n      <mat-radio-button class=\"example-radio-button\" [value]=false>\n        False\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n\n\n  <div class=\"col-sm-12\">\n\n    <button mat-flat-button color=\"primary\" style=\"margin-right:10px;\" (click)=\"closeModelChild('save')\">\n      Save\n    </button>\n\n  </div>\n</div>\n  <div *ngIf=\"field.child.length > 0\">\n\n  <div *ngFor=\"let obj of field.child let i =index\">\n  <div style=\"float: right;right: -90px; cursor:pointer;\n  top: 20px;\" class=\"col-sm-2 edit-icon\"><i class=\"fa fa-edit\" (click)=\"loadFormElement(obj, i)\">{{i}}</i></div>\n  <div [ngSwitch]=\"obj.type\" style=\"width:80%;margin-left:20%\">\n\n  <textbox style =\"padding-left:30px\" *ngSwitchCase=\"'number'\" [field]=\"obj\" [form]=\"form\"></textbox>\n\n  <textbox style =\"padding-left:30px\" *ngSwitchCase=\"'text'\" [field]=\"obj\" [form]=\"form\"></textbox>\n\n  <date style =\"padding-left:30px\" *ngSwitchCase=\"'date'\" [field]=\"obj\" [form]=\"form\"></date>\n\n  <slider style =\"padding-left:30px\" *ngSwitchCase=\"'slider'\" [field]=\"obj\" [form]=\"form\"></slider>\n\n    <dropdown style =\"padding-left:30px\" *ngSwitchCase=\"'dropdown'\" [field]=\"obj\" [form]=\"form\"></dropdown>\n\n    <checkbox style =\"padding-left:30px\" *ngSwitchCase=\"'checkbox'\" [field]=\"obj\" [form]=\"form\"></checkbox>\n\n   <radio style =\"padding-left:30px\" *ngSwitchCase=\"'radio'\" [field]=\"obj\" [form]=\"form\"></radio>\n\n    <file style =\"padding-left:30px\" *ngSwitchCase=\"'file'\" [field]=\"obj\" [form]=\"form\"></file>\n\n    \n  </div>\n  </div>\n  </div>\n  </div>`,\n  styles: [`\n  .form-control {\n    display: none;\n  }\n  \n`]\n})\nexport class MultiSelectComponent {\n\n  @Input() field: any = {};\n  @Input() form: any;\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n  @Output() sendDataToParent = new EventEmitter<string>();\n  @Output() childrenDropEvent = new EventEmitter<string>();\n\n  activeModelData: any;\n  validations: any;\n  required: any;\n  autoCollect: any;\n  openEditChild: boolean = false;\n  _id: any;\n  description: any;\n  minDate: any;\n  maxDate: any;\n  min: any;\n  max: any;\n  label: any;\n  type: any;\n  placeholder: any;\n  options: any;\n  pageNumber: any;\n\n  constructor(public cdr: ChangeDetectorRef) {\n\n    // this.form.controls = this.field.name;\n    // console.log(\"form\",this.form);\n\n  }\n  onDropNew($event, field) {\n    console.log(\"---- MultiSelectComponent -\", $event);\n    $event.data.mutiSelect = field;\n    this.childrenDropEvent.emit($event.data);\n  }\n\n\n  closeModelChild(action, data = \"\") {\n    if (action == \"save\") {\n      debugger\n      console.log(\"closeModel\", this.field);\n      // this.modalReference.close();\n      // this.activeModelData.field = this.field.field;\n      // this.activeModelData.label = this.label;\n      // this.activeModelData.type = this.type;\n      // this.activeModelData.placeholder = this.placeholder;\n      // this.activeModelData.options = this.options;\n\n      let obj = {\n        label: this.label,\n        type: this.type,\n        placeholder: this.placeholder,\n        options: this.options,\n        validations: this.validations,\n        field: this.field,\n        _id: this._id,\n        description: this.description\n      }\n\n      if (this.type == 'date') {\n        obj['minDate'] = this.minDate;\n        obj['maxDate'] = this.maxDate\n      } else if (this.type == 'slider') {\n        obj['min'] = this.min;\n        obj['max'] = this.max;\n      }\n\n      // console.log(\"obj\",obj);\n\n\n      var index = this.field.child.findIndex(item => item.field === this.currentItem.field);\n      this.field.child.splice(index, 1, obj)\n\n      // let newObj =  this.field.child.filter(item => {\n      //   if (item.field == this.currentItem.field) {\n      //     // this.field.child[this.currentItem.position] = obj;\n      //     return obj;\n      //   } else {\n      //     return item;\n      //   }\n      // });\n\n      console.log('aaaaaaaaaaa', this.field);\n\n\n\n      // this.sendDataToParent.emit(JSON.stringify(obj));\n\n\n      // this.field.label = this.label;\n\n\n      // this.field.label = this.label;\n      // this.field.type = this.type;\n      // this.field.placeholder = this.placeholder;\n      // this.field.options = this.options;\n      // this.field.description = this.description;\n\n      // if (this.type == 'date') {\n      //   this.field.validations.minDate = this.minDate;\n      //   this.field.validations.maxDate = this.maxDate;\n      //   this.field.validations.autoCollect = this.autoCollect;\n      // } else if (this.type == 'slider') {\n      //   this.field.validations.min = this.min;\n      //   this.field.validations.max = this.max;\n      // }\n\n      // this.field.validations\n\n      // console.log(\" this.field.validations.required\", this.field.validations.required, \"sdds\", this.required);\n      // this.field.validations.required = this.required;\n      // this.field.validations.autoCollect = this.autoCollect;\n\n\n      // console.log(\" this.field\", this.field);\n      this.openEditChild = false;\n\n      // this.sendDataToParent.emit(this.activeModelData);\n\n    } else {\n\n      this.openEditChild = false;\n      // this.modalReference.close();\n    }\n\n    // this.modalService.close();\n    //  this.myModal.nativeElement.className = 'modal hide';\n  }\n\n  currentItem: any;\n\n  loadFormElement(item, id) {\n    console.log(\"item ---\", item, \"id\", id);\n    this.activeModelData = \"\";\n    this.label = item.label;\n\n    this.currentItem = item;\n\n\n    this.type = item.type;\n    this.placeholder = item.placeholder;\n    this.options = item.options;\n    this._id = item._id;\n    // this.required = item.validations.required;\n    this.description = item.description;\n    if (item.type == \"date\") {\n      this.minDate = item.validations.minDate;\n      this.maxDate = item.validations.maxDate\n      this.autoCollect = item.validations.autoCollect;\n    }\n    else if (item.type == \"slider\") {\n      this.min = item.validations.min;\n      this.max = item.validations.max;\n    }\n\n    // this.required = this.field.validations.required;\n\n    // console.log(item.validations.required, \"item.validations.required\",\n      // this.required, \"label\", this.label);\n    // console.log(\"label\",this.label);\n    this.openEditChild = this.openEditChild ? false : true;\n    this.cdr.detectChanges();\n    // document.getElementById(\"openModalButton\").click();\n    // this.open(this.myModal);\n    // this.myModal.show();\n    // this.myModal.nativeElement.className = 'modal fade show';\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\n\n\n// components\nimport { DynamicFormBuilderComponent } from './dynamic-form-builder.component';\nimport { FieldBuilderComponent } from './field-builder/field-builder.component';\nimport { TextBoxComponent } from './atoms/textbox';\nimport { DropDownComponent } from './atoms/dropdown';\nimport { FileComponent } from './atoms/file';\nimport { CheckBoxComponent } from './atoms/checkbox';\nimport { RadioComponent } from './atoms/radio';\nimport { DateComponent } from './atoms/date';\nimport { SliderComponent } from './atoms/slider';\n\n// import {MatIconModule} from '@angular/material/icon';\n// import { NgDragDropModule } from 'ng-drag-drop';\n// import { DragAndDropModule } from 'angular-draggable-droppable';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport  {\n  MatButtonModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatInputModule ,\n  MatSliderModule,\n  MatSelectModule\n} from '@angular/material';\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { MultiSelectComponent } from './atoms/multi-select';\nimport { DndModule } from 'ngx-drag-drop';\n\n\nimport {  DynamicFormBuilderService } from '../dynamic-form-builder.service'\n\n// import {  } from '@angular/cdk/'\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSliderModule,\n    MatSelectModule,\n    // MatIconModule\n    AngularFontAwesomeModule,\n    DragDropModule,\n    DndModule\n  ],\n  declarations: [\n    DynamicFormBuilderComponent,\n    FieldBuilderComponent,\n    TextBoxComponent,\n    DropDownComponent,\n    CheckBoxComponent,\n    FileComponent,\n    RadioComponent,\n    DateComponent,\n    SliderComponent,\n    MultiSelectComponent\n    \n  ],\n  exports: [DynamicFormBuilderComponent],\n  providers: [DynamicFormBuilderService]\n})\nexport class DynamicFormBuilderModule { }\n","import { NgModule } from '@angular/core';\nimport { DynamicFormBuilderComponent } from './dynamic-form-builder.component';\n\nimport { CommonModule } from '@angular/common';\n// import { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n// import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// dynamic form builder\nimport { DynamicFormBuilderModule } from './dynamic-form-builder/dynamic-form-builder.module';\n// import {} from './'\n\n// import { FormComponent } from './form.component';\nimport { HttpClientModule } from '@angular/common/http';\n// import { NgDragDropModule } from 'ng-drag-drop';\n// import { DragAndDropModule } from 'angular-draggable-droppable';\n\n\n// import { DragulaModule } from 'ng2-dragula';\n\nimport  { MatButtonModule,MatDatepickerModule, MatFormFieldModule,\n  MatTabsModule, MatSelectModule} from '@angular/material'\n\n  // import  { DynamicFormBuilderService } 'dynamic-form-builder.service';\n\nimport { DndModule } from 'ngx-drag-drop';\n\n\n@NgModule({\n  declarations: [DynamicFormBuilderComponent],\n  imports: [\n    // BrowserModule,\n    CommonModule,\n     ReactiveFormsModule,\n    DynamicFormBuilderModule,\n    HttpClientModule,\n    FormsModule,\n    MatSelectModule,\n    MatTabsModule,\n    // NgbModule.forRoot(),\n    // DragulaModule.forRoot()\n    // DragAndDropModule\n    MatFormFieldModule,\n    DndModule,\n    MatButtonModule,\n    MatDatepickerModule\n  ],\n  exports: [DynamicFormBuilderComponent]\n})\nexport class DynamicFormBuilderModule1 {\n\n\n }\n"],"names":["Subject","http","EventEmitter","FormGroup","FormControl","tslib_1.__values","Component","HttpClient","FormBuilder","Input","Output","moveItemInArray","ViewChild","NgModule","ReactiveFormsModule","FormsModule","ChangeDetectorRef","CommonModule","MatButtonModule","MatRadioModule","MatDatepickerModule","MatFormFieldModule","MatInputModule","MatSliderModule","MatSelectModule","AngularFontAwesomeModule","DragDropModule","DndModule","DynamicFormBuilderComponent","HttpClientModule","MatTabsModule"],"mappings":"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"}
