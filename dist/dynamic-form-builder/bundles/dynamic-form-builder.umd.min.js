!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("rxjs"),require("@angular/common"),require("angular-font-awesome"),require("@angular/cdk/drag-drop"),require("@angular/core"),require("@angular/forms"),require("@angular/common/http"),require("@angular/material"),require("ngx-drag-drop")):"function"==typeof define&&define.amd?define("dynamic-form-builder",["exports","rxjs","@angular/common","angular-font-awesome","@angular/cdk/drag-drop","@angular/core","@angular/forms","@angular/common/http","@angular/material","ngx-drag-drop"],t):t(e["dynamic-form-builder"]={},e.rxjs,e.ng.common,e.angularFontAwesome,e.ng.cdk["drag-drop"],e.ng.core,e.ng.forms,e.ng.common.http,e.ng.material,e.ngxDragDrop)}(this,function(e,t,n,i,o,l,x,a,r,s){"use strict";var d=(p.prototype.currentMessage=function(){return this.list},p.prototype.sendData=function(e){console.log("obj",e),this.list=e,this.communicateSubject.next()},p.prototype.getALl=function(){return this.all={questionList:this.list},this.all},p);function p(){this.communicateSubject=new t.Subject,this.list=[],this.all=[]}function D(e){var t="function"==typeof Symbol&&e[Symbol.iterator],n=0;return t?t.call(e):{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}var c=(m.prototype.sendToService=function(e){this.dynamicServe.sendData(e)},m.prototype.getCriteria=function(){return this.criteriaList},m.prototype.ngOnInit=function(){var i=this;this.criteriaList=[],this.eventsSubscription=this.events.subscribe(function(e){if(console.log("calling from parent with data === ",e),e){console.log("criteria list",e.criteriaList),i.criteriaList=e.criteriaList;var t=e.questionArray;i.formBuild(t)}else{var n={action:"all",data:i.fields};console.log("to get all",i.fields),i.questionTrigger.emit(n)}}),this.formData=[],this.jsonData=[{responseType:"text"},{responseType:"number"},{responseType:"radio"},{responseType:"checkbox"},{responseType:"dropdown"},{responseType:"date"},{responseType:"slider"},{responseType:"multiselect"}]},m.prototype.onUpload=function(e){console.log(e)},m.prototype.getFields=function(){return this.fields},m.prototype.ngDistroy=function(){this.unsubcribe()},m.prototype.getToolObj=function(e,t){var n={};return"text"==e?n={position:t,field:t+"question",type:"text",label:"Question",placeholder:"Please enter your question here",description:"",validations:{required:!0,minLenght:"",maxLength:""}}:"number"==e?n={position:t,field:t+"question",type:"number",label:"Question",placeholder:"Please enter your question here",description:"",validations:{required:!0,minLenght:"",maxLength:""}}:"radio"==e?n={position:t,field:t+"question",type:"radio",name:t+". question",label:"Question",description:"",required:!0,validations:{required:!0,minLenght:"",maxLength:""},options:[{key:"option1",label:"Label 1"},{key:"option2",label:"Label 1"}]}:"checkbox"==e?n={position:t,field:t+"question",type:"checkbox",name:t+". question",label:"Question",description:"",required:!0,validations:{required:!0,minLenght:"",maxLength:""},options:[{key:"option1",label:"option 1"},{key:"option2",label:"option 2"}]}:"dropdown"==e?n={position:t,field:t+"question",type:"dropdown",name:t+". question",label:"Question",value:"option1",description:"",required:!0,validations:{required:!0,minLenght:"",maxLength:""},options:[{key:"option1",label:"Option 1"},{key:"option1",label:"Option 2"}]}:"date"==e?n={position:t,field:t+"question",type:"date",name:t+". question",label:"Question",description:"",required:!0,validations:{required:!0,minLenght:"",maxLength:"",maxDate:"",minDate:""},options:[]}:"multiselect"==e?("childDroped"==e&&e.type,n={field:t+"question",type:"multiselect",label:"Question",child:[],placeholder:"Please add Child's here",description:"",validations:{required:!1,minLenght:"",maxLength:""}}):"slider"==e&&(n={field:t+"question",type:"slider",name:t+". question",label:"Question",description:"",required:!0,validations:{required:!0,min:"",max:"",maxDate:"",minDate:""},options:[]}),n},m.prototype.onDrop=function(e,t){var n,i,o,l;void 0===t&&(t=""),console.log("drop ele",e),e.data&&(e=e.data.responseType);var a=this.fields.length+1,r={};r="copy"==t?{position:a,field:a+"question",type:e.type,label:e.label,placeholder:e.placeholder,validations:e.validations,options:e.options,description:e.description}:this.getToolObj(e,a),this.fields;var s={action:"add",data:r};this.questionTrigger.emit(s),this.formData.push(r);var d={};this.form=new x.FormGroup(d);try{for(var p=D(this.formData),c=p.next();!c.done;c=p.next()){var m=c.value;if("checkbox"!=m.type)console.log("f.type",m.field),d[m.field]=new x.FormControl(m.value||"");else{var f={};try{for(var u=D(m.options),h=u.next();!h.done;h=u.next()){var g=h.value;f[g.key]=new x.FormControl(g.label)}}catch(v){o={error:v}}finally{try{h&&!h.done&&(l=u["return"])&&l.call(u)}finally{if(o)throw o.error}}d[m.field]=new x.FormGroup(f)}}}catch(y){n={error:y}}finally{try{c&&!c.done&&(i=p["return"])&&i.call(p)}finally{if(n)throw n.error}}this.form=new x.FormGroup(d),this.fields.push(r);var b={criteriaList:this.criteriaList,questionList:this.fields};console.log("completeData",b),this.sendToService(b),console.log("fields controls",this.form)},m.prototype.formBuild=function(e){var t,n,i,o,l;this.fields=[],this.fields.slice(this.fields.length,0),l=e;var a={};this.form=new x.FormGroup(a);try{for(var r=D(l),s=r.next();!s.done;s=r.next()){var d=s.value;if("checkbox"!=d.type)console.log("f.type",d.field),a[d.field]=new x.FormControl(d.value||"");else{var p={};try{for(var c=D(d.options),m=c.next();!m.done;m=c.next()){var f=m.value;p[f.key]=new x.FormControl(f.label)}}catch(h){i={error:h}}finally{try{m&&!m.done&&(o=c["return"])&&o.call(c)}finally{if(i)throw i.error}}a[d.field]=new x.FormGroup(p)}}}catch(g){t={error:g}}finally{try{s&&!s.done&&(n=r["return"])&&n.call(r)}finally{if(t)throw t.error}}this.form=new x.FormGroup(a);var u={action:"all",data:this.fields=l};console.log("this.fields-------",this.fields),this.questionTrigger.emit(u)},m.prototype.onSubmit=function(e){console.log("value",this.fields);var t={action:"all",data:this.fields};this.questionTrigger.emit(t)},m.prototype.ngOnDestroy=function(){this.eventsSubscription.unsubscribe()},m.prototype.onFieldUpdate=function(n){var i=this;console.log("eventData sssssss------",n.data);var o=n,e={};if("copy"==n.action)this.onDrop(n.data,"copy");else if("delete"==n.action)e={action:"delete",data:n};else if("childDroped"==n.action){console.log("this.fields",this.fields);var t=this.fields.filter(function(e){if(e.field!==o.data.mutiSelect.field)return e;var t=i.getToolObj(n.data.responseType,e.child.length+1);return e.child.push(t),e});console.log("final result",t)}else e={action:"update",data:n};var l={questionList:this.fields,criteriaList:this.criteriaList};console.log("completeData",l),this.sendToService(l),this.questionTrigger.emit(e)},m.decorators=[{type:l.Component,args:[{selector:"lib-dynamic-form-builder",template:'<style>\n  p {\n      font-family: Lato;\n    }\n    .noPadding {\n        padding: 0px;\n    }\n    .margin-5 {\n        margin-top:5%;\n    }\n    .element {\n      border: 1px solid #ccc;\n      padding: 10px;\n      margin-bottom: 10px;\n      color: #333;\n      text-align: left;\n      text-transform: capitalize;\n      box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.19);\n  }\n    .form-group {\n        margin-bottom: 0.5rem;\n        border: 1px solid #ece7e7;\n    }\n    span.cursor-pntr {\n        cursor: pointer;\n        padding: 2px;\n    }\n    \n    \n  </style>\n  <div class="col-sm-12">\n      \n\n    <div class="col-sm-12 noPadding">\n   \n    <div class="card">\n          <div dndDropzone class="card-body" (dndDrop)="onDrop($event)" >\n              <form (ngSubmit)="onSubmit(this.form.value)" [formGroup]="form" class="form-horizontal">\n            <dynamic-form-builder [criteriaList]="getCriteria()" [fields]="getFields()" [form]="form"  (onFieldUpdate)="onFieldUpdate($event)" ></dynamic-form-builder>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div class="col-sm-4" style="padding-top:25px">\n          \n          <div  class="col-md-12">\n            \x3c!-- <dynamic-form-builder [criteriaList]="getCriteria()" [fields]="getFields()"></dynamic-form-builder> --\x3e\n      \n            <span *ngFor="let item of jsonData" style ="padding:5px">\n              <span [dndDraggable]="item"  class="element"  >{{ item.responseType==\'multiselect\'?\'metrix\':item.responseType }}</span>\n              </span>\n\n              \x3c!-- <div class="col-sm-12 element" (click)="addFormElement(item.responseType)" >Number</div> --\x3e\n            \x3c!-- <div class="col-sm-12 element" (click)="addFormElement(\'input\')" >Input</div>\n            <div class="col-sm-12 element" (click)="addFormElement(\'number\')" >Number</div> --\x3e\n\n          </div>\n      </div>\n\n\n      \n      <div class="col-sm-12">\n      </div>',styleUrls:[]}]}],m.ctorParameters=function(){return[{type:a.HttpClient},{type:x.FormBuilder},{type:x.FormBuilder},{type:d}]},m.propDecorators={events:[{type:l.Input}],questionTrigger:[{type:l.Output}]},m);function m(e,t,n,i){this.http=e,this._formBuilder=t,this.fb=n,this.dynamicServe=i,this.questionTrigger=new l.EventEmitter,this.fields=[],this.form=new x.FormGroup({fields:new x.FormControl(JSON.stringify(this.fields))}),this.unsubcribe=this.form.valueChanges.subscribe(function(e){console.log(e)})}var f=(u.prototype.drop=function(e){o.moveItemInArray(this.fields,e.previousIndex,e.currentIndex)},u.prototype.copyOrDeleteEvent=function(e){if(console.log("data type",typeof e),"string"==typeof e&&(e=JSON.parse(e),console.log("inside string")),console.log(e,"copyEvent occured"),"copy"==e.action){console.log(e,"this.form before");var t={action:"copy",data:e};this.onFieldUpdate.emit(t)}else if("delete"==e.action){var n=this.fields.indexOf(e);console.log("ind",n),this.onFieldUpdate.emit(e)}else"childDroped"==e.action&&this.onFieldUpdate.emit(e)},u.prototype.eventFromChild=function(e){this.onFieldUpdate.emit(e),console.log("data from child  ------- ",e)},u.prototype.ngOnInit=function(){this.formData=this.fields,console.log("this.form ---",this.form)},u.decorators=[{type:l.Component,args:[{selector:"dynamic-form-builder",template:'\n   \n     <div cdkDropList (cdkDropListDropped)="drop($event)"> <div *ngFor="let field of fields"  cdkDrag>\n          <field-builder [criteriaList]="criteriaList" *ngIf="!field.isDeleted" [field]="field" [form]="form"  \n          (sendDataToParent)="eventFromChild($event)" (copyOrDeleteEvent)="copyOrDeleteEvent($event)">\n          </field-builder>\n      </div></div>'}]}],u.ctorParameters=function(){return[]},u.propDecorators={onFieldUpdate:[{type:l.Output}],fields:[{type:l.Input}],criteriaList:[{type:l.Input}],form:[{type:l.Input}]},u);function u(){this.onFieldUpdate=new l.EventEmitter,this.fields=[],this.criteriaList=[],this.formData=[]}var h=(Object.defineProperty(g.prototype,"isValid",{get:function(){return this.form.controls[this.field.name].valid},enumerable:!0,configurable:!0}),Object.defineProperty(g.prototype,"isDirty",{get:function(){return this.form.controls[this.field.name].dirty},enumerable:!0,configurable:!0}),g.prototype.parentMapping=function(){var t=this;console.log(this.condition,"condition",this.currentSelectedQtn,"selectedOption",this.selectedOption);var n={operator:this.condition,value:this.conditionMatchValue,field:this.field.field};console.log("condiObj",n);var e=this.allData.questionList.questionList.filter(function(e){if(e.field==t.field.field)return e});console.log("getSelectQuestion",e);var i,o=!1;e.visibleIf&&0<e.visibleIf.length&&(o=e.visibleIf.filter(function(e){if(e.visibleIf.field==t.field.field)return!0})),i=this.allData.questionList.questionList.filter(function(e){return e.field==t.currentSelectedQtn.field&&(e.visibleIf&&0<e.visibleIf.length&&0==o||(e.visibleIf=[]),e.visibleIf.push(n)),e}),console.log("all data in question",i),this.listOfRelation.includes(n)||this.listOfRelation.push(n),this.condition,console.log("this.field.validations.relation",this.listOfRelation)},g.prototype.ngOnInit=function(){this.options=[],this.validations={relation:[]},this.field.validations={relation:[]}},g.prototype.loadFormElement=function(e){this.allData=this.dynamicServe.getALl(),console.log(this.allData," all questions ",this.allData.questionList),this.activeModelData="",this.label=e.label,this.type=e.type,this.placeholder=e.placeholder,this.options=e.options,this.draftCriteriaId=e.draftCriteriaId,this.required=e.validations.required,this.description=e.description,e.validations.relation&&(this.listOfRelation=e.validations.relation),"date"==e.type?(this.minDate=e.validations.minDate,this.maxDate=e.validations.maxDate,this.autoCollect=e.validations.autoCollect):"slider"==e.type&&(this.min=e.validations.min,this.max=e.validations.max),this.required=this.field.validations.required,console.log(e.validations.required,"item.validations.required",this.required,"label",this.label),this.openEdit=!this.openEdit},g.prototype.saveEdit=function(){},g.prototype.closeModel=function(e){if("save"==e){console.log(this.validations,"this.field",this.required);var t={label:this.label,type:this.type,placeholder:this.placeholder,options:this.options,validations:this.validations,field:this.field,_id:this._id,description:this.description,draftCriteriaId:this.draftCriteriaId};"date"==this.type?(t.minDate=this.minDate,t.maxDate=this.maxDate):"slider"==this.type&&(t.min=this.min,t.max=this.max),this.field.label=this.label,this.field.type=this.type,this.field.placeholder=this.placeholder,this.field.options=this.options,this.field.description=this.description,this.field.draftCriteriaId=this.draftCriteriaId,"date"==this.type?(this.field.validations.minDate=this.minDate,this.field.validations.maxDate=this.maxDate,this.field.validations.autoCollect=this.autoCollect):"slider"==this.type&&(this.field.validations.min=this.min,this.field.validations.max=this.max),this.listOfRelation&&(t.validations.relation=this.listOfRelation,this.field.validations.relation=this.listOfRelation),this.field.validations.required=this.required,this.field.validations.autoCollect=this.autoCollect,console.log(t,"this.field.validations",this.field.validations);var n={action:"save",data:t};this.sendDataToParent.emit(n),this.openEdit=!1}else this.openEdit=!1},g.prototype.open=function(e){},g.prototype.deleteOption=function(t,e){console.log("delete",this.options);var n=this.options.filter(function(e){return e.label!=t.label&&e.key!=t.key});this.options=n,console.log("delete new ",n)},g.prototype.AddNewOptions=function(){""!=this.newOptionKey&&""!=this.newOptionLabel&&(console.log("this.newOption",this.newOptionLabel),Array.isArray(this.options)||(this.options=[]),this.options.push({key:this.newOptionKey,label:this.newOptionLabel}),console.log("this.options.push",this.options)),this.newOptionKey="",this.newOptionLabel=""},g.prototype.copyElement=function(e){e.action="copy",console.log("field ----------",e),this.copyOrDeleteEvent.emit(e)},g.prototype.deleteElement=function(e){e.action="delete",this.field.isDelete=!0,this.copyOrDeleteEvent.emit(e),console.log("field delete",this.field)},g.prototype.childrenDropEvent=function(e){console.log("childrenDropEvent",this.field);var t={action:"childDroped",data:e};this.copyOrDeleteEvent.emit(JSON.stringify(t)),console.log("field delete",this.field)},g.decorators=[{type:l.Component,args:[{selector:"field-builder",template:'\n  <style>\n  .mat-slider-horizontal {\n    min-width: 80% !important;\n  }\n  .example-radio-group {\n    display: flex;\n    flex-direction: block;\n    margin: 15px 0;\n  }\n\n  .mat-form-field {\n    display: block;\n    position: relative;\n    flex: auto;\n    min-width: 0;\n    width: 372px;\n  }\n  .input-group {\n    position: relative;\n     border-collapse: separate;\n     display: block;\n  }\n  \n  .example-radio-button {\n    margin: 5px;\n  }\n  .action-component {\n    padding:10px 10px 0px 0px;\n    right: 0px;\n    cursor: pointer;\n    float: right;\n  \n}\nspan.cursor-pntr {\n  cursor: pointer;\n  padding: 2px;\n}\n.form-control {\n  display: block;\n  visibility: hidden;\n\n}\n.label.col-md-8.form-control-label {\n  text-decoration: underline;\n}\n\n  </style>\n  <div class="row"  *ngIf="openEdit" style="padding: 15px;\n  border: 1px solid #ccc;margin-top:10px;width:85%;margin: auto;\n  box-shadow: 1px 1px 1px 1px rgba(0,0,0,0.19);">\n\n    <div class="col-sm-6">\n      <mat-form-field>\n        <input matInput placeholder="Label" [(ngModel)]="label" name="label">\n      </mat-form-field>\n    </div>\n\n    <div class="col-sm-6">\n      <mat-form-field>\n        <input matInput placeholder="Input Place Holder" [(ngModel)]="placeholder" name="placeholder">\n      </mat-form-field>\n    </div>\n\n    <div class="col-sm-6">\n      <mat-form-field>\n        <input matInput placeholder="Hint/Description" [(ngModel)]="description" name="Description">\n      </mat-form-field>\n    </div>\n\n<div class="col-sm-6 " style="display:none">\n  <mat-form-field>\n  <mat-label>Input Type</mat-label>\n    <mat-select  [(ngModel)]="type">\n      <mat-option value="text">text</mat-option>\n      <mat-option value="number">number</mat-option>\n      <mat-option value="radio">radio</mat-option>\n      <mat-option value="date">date</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<div class="col-sm-6">\n<mat-form-field>\n<mat-label>Pages</mat-label>\n  <mat-select  [(ngModel)]="pageNumber">\n    <mat-option value="page_1">page 1</mat-option>\n    <mat-option value="page_2">page 2</mat-option>\n    <mat-option value="page_3">page 3</mat-option>\n  </mat-select>\n</mat-form-field>\n</div>\n \n<div class="col-sm-6">\n<mat-form-field>\n<mat-label>Criteria</mat-label>\n  <mat-select  [(ngModel)]="draftCriteriaId">\n    <mat-option *ngFor="let item of criteriaList" value="item._id">{{ item.name}}</mat-option>\n   </mat-select>\n</mat-form-field>\n</div>\n\n\n\n    <div class="col-sm-6" *ngIf="type==\'slider\'">\n    <mat-form-field>\n    <input type="text" placeholder="Min" matInput  [(ngModel)]="min" name="min value">\n    </mat-form-field>\n    </div>\n\n    <div class="col-sm-6" *ngIf="type==\'slider\'">\n    <mat-form-field>\n    <input type="text" placeholder="Max" matInput  [(ngModel)]="max" name="min value">\n    </mat-form-field>\n    </div>\n    \n  <div class="col-sm-6" *ngIf="type==\'date\'">\n    <mat-form-field>\n      <input matInput [matDatepicker]="picker" [(ngModel)]="minDate" placeholder="Choose a min date">\n      <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput [matDatepicker]="pickerMaxDate" [(ngModel)]="maxDate" placeholder="Choose a max date">\n      <mat-datepicker-toggle matSuffix [for]="pickerMaxDate"></mat-datepicker-toggle>\n      <mat-datepicker #pickerMaxDate></mat-datepicker>\n    </mat-form-field>\n\n\n    </div>\n    <div class="col-sm-12" *ngIf="type==\'radio\' || type==\'checkbox\' || type==\'dropdown\'">\n    <label for="label" class="col-sm-12">Options</label>\n    \n    <ul class="col" *ngFor="let opt of options;let index">\n     <li class="">\n      <span>{{opt.label}} </span><span style="\n      margin-left: 30px;" (click)="deleteOption(opt,index)">\n      <i class="fa fa-trash"></i></span>\n    </li>\n    </ul>\n\n    <div class="col-sm-6">\n    <div class="input-group">\n    <mat-form-field>\n    <input type="text" placeholder="Label" matInput style="margin-bottom: 10px;" [(ngModel)]="newOptionLabel" name="newOption">\n    </mat-form-field>\n    <mat-form-field>\n    <input type="tex" matInput name="newOption" placeholder="key"  [(ngModel)]="newOptionKey">\n    </mat-form-field>  \n    </div>\n      <button mat-flat-button color="primary" style="margin-top: 10px;"  (click)="AddNewOptions()">\n      Add\n      </button>\n    </div>\n    </div>\n\n        \n    <div class="col-sm-12">\n<label id="example-radio-group-label">Do you want to related the question based on below options ?</label>\n<mat-radio-group\naria-labelledby="example-radio-group-label"\nclass="example-radio-group"\n[(ngModel)]="selectedOption">\n<mat-radio-button class="example-radio-button" *ngFor="let ele of options"  [value]="ele">\n{{ ele.label }}\n</mat-radio-button>\n</mat-radio-group>\n</div>\n\n\n<div class="col-sm-6">\n<mat-form-field >\n<mat-label>Select Question to add </mat-label>\n<select matNativeControl [(ngModel)]="currentSelectedQtn" >\n<option *ngFor="let values of allData.questionList.questionList"  [ngValue]="values"> {{ values.label }} </option>\n</select>  \n</mat-form-field>\n</div>\n\n<div class="col-sm-6" *ngIf="type==\'text\' || type==\'date\' || type==\'number\'">\n<mat-form-field >\n<mat-label>Select Condition </mat-label>\n<select matNativeControl [(ngModel)]="condition" >\n<option *ngFor="let values of conditionArray"  [ngValue]="values.condition"> {{ values.label }} </option>\n</select>\n</mat-form-field>\n</div>\n\n<div class="col-sm-12" *ngIf="type==\'text\' || type==\'date\' || type==\'number\'">\n<mat-form-field>\n  <input type="tex" matInput name="conditionMatchValue" placeholder=""  [(ngModel)]="conditionMatchValue">\n  </mat-form-field> \n</div>\n\n<div class="col-sm-2">\n<button mat-flat-button color="primary" style="margin-top: 10px;"  (click)="parentMapping()">\nAdd\n</button>\n</div>\n<ul class="col-sm-12" *ngFor="let relate of listOfRelation;let index">\n <li class="col-sm-12">\n  <span>{{relate.field}} </span><span style="\n  margin-left: 30px;" >\n  <i class="fa fa-trash"></i></span>\n</li>\n</ul>\n\n    \n<div class="col-sm-12">\n<label id="example-radio-group-label">is Reqired ?</label>\n<mat-radio-group\n  aria-labelledby="example-radio-group-label"\n  class="example-radio-group"\n  [(ngModel)]="required">\n  <mat-radio-button class="example-radio-button" [value]=true>\n    Yes\n  </mat-radio-button>\n  <mat-radio-button class="example-radio-button" [value]=false>\n    No\n  </mat-radio-button>\n</mat-radio-group>\n</div>\n\n<div class="col-sm-12" *ngIf="type==\'date\'">\n<label id="example-radio-group-label">is autoCollect</label>\n<mat-radio-group\n  aria-labelledby="example-radio-group-label"\n  class="example-radio-group"\n  [(ngModel)]="autoCollect">\n  <mat-radio-button class="example-radio-button" [value]=true>\n    True\n  </mat-radio-button>\n  <mat-radio-button class="example-radio-button" [value]=false>\n    False\n  </mat-radio-button>\n</mat-radio-group>\n</div>\n\n  \n<div  class="col-sm-12">\n\n<button mat-flat-button color="primary" style="margin-right:10px;"  (click)="closeModel(\'save\')">\nSave\n</button>\n\n</div>\n  </div>\n  <div class="form-group row" [formGroup]="form" style="padding:0px;margin:0px;margin-top:10px;box-shadow: 1px 1px 2px 1px rgba(0,0,0,0.19);padding-bottom:10px;">\n  <span class="qtn_position"><span class="">#{{ field.position }}</span></span>\n  <div class="action-component" >\n\n  <span class="cursor-pntr" (click)="copyElement(field)"><i class="fa fa-copy"></i></span>\n  <span class="cursor-pntr" (click)="deleteElement(field)"><i class="fa fa-trash"></i> </span>\n  <span class="cursor-pntr"><i class="fa fa-edit" (click)="loadFormElement(field)" ></i></span>\n  \n  </div>\n    <div class="col-md-12" [ngSwitch]="field.type">\n    <textbox *ngSwitchCase="\'number\'" [field]="field" [form]="form"></textbox>\n    <textbox *ngSwitchCase="\'text\'" [field]="field" [form]="form"></textbox>\n    <date *ngSwitchCase="\'date\'" [field]="field" [form]="form"></date>\n    <slider *ngSwitchCase="\'slider\'" [field]="field" [form]="form"></slider>\n      <dropdown *ngSwitchCase="\'dropdown\'" [field]="field" [form]="form"></dropdown>\n      <checkbox *ngSwitchCase="\'checkbox\'" [field]="field" [form]="form"></checkbox>\n      <radio *ngSwitchCase="\'radio\'" [field]="field" [form]="form"></radio>\n      <lib-multi-select *ngSwitchCase="\'multiselect\'" (childrenDropEvent)="childrenDropEvent($event)" [field]="field" [form]="form"></lib-multi-select>\n      <file *ngSwitchCase="\'file\'" [field]="field" [form]="form"></file>\n      <div style="float:right">\n         \n       </div> \n       </div>',styles:["\n  .qtn_position {\n    float: left;\n    width: 40px;\n    padding: 5px 0px 0px 5px;\n    color: #ccc;\n  } "]}]}],g.ctorParameters=function(){return[{type:d}]},g.propDecorators={field:[{type:l.Input}],criteriaList:[{type:l.Input}],form:[{type:l.Input}],sendDataToParent:[{type:l.Output}],copyOrDeleteEvent:[{type:l.Output}],myModal:[{type:l.ViewChild,args:["content",{"static":!1}]}]},g);function g(e){this.dynamicServe=e,this.sendDataToParent=new l.EventEmitter,this.copyOrDeleteEvent=new l.EventEmitter,this.openEdit=!1,this.listOfRelation=[],this.conditionArray=[{label:"equals",condition:"==="},{label:"Not Equal To",condition:"!="},{label:"Greater Than",condition:">"},{label:"Less Than",condition:"<"},{label:"Greater Than Or Equal",condition:">="},{label:"Less Than Or Equal",condition:"<="}]}var b=(Object.defineProperty(v.prototype,"isValid",{get:function(){return this.form.controls[this.field.name].valid},enumerable:!0,configurable:!0}),Object.defineProperty(v.prototype,"isDirty",{get:function(){return this.form.controls[this.field.name].dirty},enumerable:!0,configurable:!0}),v.decorators=[{type:l.Component,args:[{selector:"textbox",template:'\n      <div [formGroup]="form">\n      <label class="col-md-8 form-control-label" [attr.for]="field.label">\n      {{field.label}}\n      </label>\n    \n        <input *ngIf="!field.multiline" [attr.type]="field.type" class="form-control"  [id]="field.field" [name]="field.field" >\n        <textarea *ngIf="field.multiline"  [id]="field.field"\n        rows="20" class="form-control" [placeholder]="field.placeholder"></textarea>\n\n      </div> \n    ',styles:["\n    .form-control {\n      display: none;\n    }\n    \n  "]}]}],v.ctorParameters=function(){return[]},v.propDecorators={field:[{type:l.Input}],form:[{type:l.Input}]},v);function v(){this.field={}}var y=(M.decorators=[{type:l.Component,args:[{selector:"dropdown",template:'\n      <div [formGroup]="form">\n      <label class="col-md-8 form-control-label" [attr.for]="field.label">\n      {{field.label}}\n    </label>\n        <select class="form-control" [id]="field.field">\n          <option *ngFor="let opt of field.options" [value]="opt.key">{{opt.label}}</option>\n        </select>\n      </div> \n    ',styles:["\n    .form-control {\n      display: none;\n    }\n    \n  "]}]}],M.ctorParameters=function(){return[]},M.propDecorators={field:[{type:l.Input}],form:[{type:l.Input}]},M);function M(){this.field={}}var w=(Object.defineProperty(k.prototype,"isValid",{get:function(){return this.form.controls[this.field.name].valid},enumerable:!0,configurable:!0}),Object.defineProperty(k.prototype,"isDirty",{get:function(){return this.form.controls[this.field.name].dirty},enumerable:!0,configurable:!0}),k.prototype.ngOnChange=function(){console.log(this.field.value)},k.decorators=[{type:l.Component,args:[{selector:"file",template:'\n      <div [formGroup]="form">\n        <div *ngIf="!field.value" class="drop-container dropzone" dropZone           (dropped)="field.onUpload($event)">\n          <p class="m-0">\n            Drag a file here or\n            <label class="upload-button">\n              <input type="file" multiple="" (change)="field.onUpload($event.target.files)"> browse\n            </label>\n            to upload.\n          </p>\n        </div>\n        <div *ngIf="field.value">\n          \x3c!-- <button type="button" class="btn btn-primary">Change</button> --\x3e\n          <div class="card">\n            <img class="card-img-top" [src]="field.value">\n          </div>\n        </div>\n      </div> \n    ',styles:["\n      .drop-container {\n        background: #fff;\n        border-radius: 6px;\n        height: 150px;\n        width: 100%;\n        box-shadow: 1px 2px 20px hsla(0,0%,4%,.1);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border: 2px dashed #c0c4c7;\n      }\n      p {\n        font-size: 16px;\n        font-weight: 400;\n        color: #c0c4c7; \n      }\n      .upload-button {\n        display: inline-block;\n        border: none;\n        outline: none;\n        cursor: pointer;\n        color: #5754a3;\n      }\n      .upload-button input {\n        display: none;\n      }\n      .dropzone { \n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column; \n        border-radius: 5px;\n        background: white;\n        margin: 10px 0;\n      }\n      .dropzone.hovering {\n          border: 2px solid #f16624;\n          color: #dadada !important;\n      }\n      progress::-webkit-progress-value {\n        transition: width 0.1s ease;\n      }\n      "]}]}],k.ctorParameters=function(){return[]},k.propDecorators={field:[{type:l.Input}],form:[{type:l.Input}]},k);function k(){this.field={}}var I=(Object.defineProperty(O.prototype,"isValid",{get:function(){return this.form.controls[this.field.name].valid},enumerable:!0,configurable:!0}),Object.defineProperty(O.prototype,"isDirty",{get:function(){return this.form.controls[this.field.name].dirty},enumerable:!0,configurable:!0}),O.decorators=[{type:l.Component,args:[{selector:"checkbox",template:'\n      <div [formGroup]="form">\n      <label class="col-md-12 form-control-label" [attr.for]="field.label">\n      {{field.label}}\n    </label>\n        <div [formGroupName]="field.field" >\n          <div *ngFor="let opt of field.options" class="form-check form-check">\n          <label class="form-check-label">\n             <input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="option1" />\n             {{opt.label}}</label>\n          </div>\n        </div>\n\n      </div> \n    ',styles:["\n    .form-control {\n      display: none;\n    }\n  "]}]}],O.propDecorators={field:[{type:l.Input}],form:[{type:l.Input}]},O);function O(){this.field={}}var C=(q.decorators=[{type:l.Component,args:[{selector:"radio",template:'\n      <div [formGroup]="form">\n      <label class="col-md-12 form-control-label" [attr.for]="field.label">\n      {{field.label}}\n    </label>\n        <div class="form-check" *ngFor="let opt of field.options">\n          <input class="form-check-input" type="radio" [id]="field.field" [value]="opt.key">\n          <label class="form-check-label">\n            {{opt.label}}\n          </label>\n        </div>\n      </div> \n    ',styles:["\n    .form-control {\n      display: none;\n    }\n    \n  "]}]}],q.propDecorators={field:[{type:l.Input}],form:[{type:l.Input}]},q);function q(){this.field={}}var F=(Object.defineProperty(L.prototype,"isValid",{get:function(){return this.form.controls[this.field.name].valid},enumerable:!0,configurable:!0}),Object.defineProperty(L.prototype,"isDirty",{get:function(){return this.form.controls[this.field.name].dirty},enumerable:!0,configurable:!0}),L.decorators=[{type:l.Component,args:[{selector:"date",template:'\n      <div [formGroup]="form">\n      <label class="col-md-8 form-control-label" [attr.for]="field.label">\n      {{field.label}}\n    </label>\n        <input *ngIf="!field.multiline" [attr.type]="field.type" class="form-control" \n         [id]="field.field" [name]="field.field">\n        <textarea *ngIf="field.multiline" [class.is-invalid]="isDirty && !isValid" [id]="field.field"\n        rows="20" class="form-control" [placeholder]="field.placeholder"></textarea>\n\n      </div> \n    ',styles:["\n    .form-control {\n      display: none;\n    }\n    \n  "]}]}],L.ctorParameters=function(){return[]},L.propDecorators={field:[{type:l.Input}],form:[{type:l.Input}]},L);function L(){this.field={}}var S=(Object.defineProperty(E.prototype,"isValid",{get:function(){return this.form.controls[this.field.name].valid},enumerable:!0,configurable:!0}),Object.defineProperty(E.prototype,"isDirty",{get:function(){return this.form.controls[this.field.name].dirty},enumerable:!0,configurable:!0}),E.decorators=[{type:l.Component,args:[{selector:"slider",template:'\n      <div [formGroup]="form" >\n      <label class="col-md-0 form-control-label" [attr.for]="field.label">\n      {{field.label}}\n    </label>\n        <input *ngIf="!field.multiline" type="hidden" class="form-control" [id]="field.field" [name]="field.field">\n        \n        <mat-slider\n   class = "tp-margin"\n   [disabled] = "false"\n   [invert] = "false"      \n   [thumbLabel] = "false"\n   [max]="field.max"\n   [min]="field.min"    \n   [vertical] = "false">\n</mat-slider>\n\n      </div> \n    ',styles:["\n    .form-control {\n      display: none;\n    \n    }\n    \n  "]}]}],E.ctorParameters=function(){return[]},E.propDecorators={field:[{type:l.Input}],form:[{type:l.Input}]},E);function E(){this.field={}}var j=(Object.defineProperty(T.prototype,"isValid",{get:function(){return this.form.controls[this.field.name].valid},enumerable:!0,configurable:!0}),Object.defineProperty(T.prototype,"isDirty",{get:function(){return this.form.controls[this.field.name].dirty},enumerable:!0,configurable:!0}),T.prototype.onDropNew=function(e,t){console.log("---- MultiSelectComponent -",e),e.data.mutiSelect=t,this.childrenDropEvent.emit(e.data)},T.prototype.closeModelChild=function(e,t){var n=this;if(void 0===t&&(t=""),"save"==e){console.log("closeModel",this.field);var i={label:this.label,type:this.type,placeholder:this.placeholder,options:this.options,validations:this.validations,field:this.field,_id:this._id,description:this.description};"date"==this.type?(i.minDate=this.minDate,i.maxDate=this.maxDate):"slider"==this.type&&(i.min=this.min,i.max=this.max);var o=this.field.child.findIndex(function(e){return e.field===n.currentItem.field});this.field.child.splice(o,1,i),console.log("aaaaaaaaaaa",this.field),this.openEditChild=!1}else this.openEditChild=!1},T.prototype.loadFormElement=function(e,t){console.log("item ---",e,"id",t),this.activeModelData="",this.label=e.label,this.currentItem=e,this.type=e.type,this.placeholder=e.placeholder,this.options=e.options,this._id=e._id,this.description=e.description,"date"==e.type?(this.minDate=e.validations.minDate,this.maxDate=e.validations.maxDate,this.autoCollect=e.validations.autoCollect):"slider"==e.type&&(this.min=e.validations.min,this.max=e.validations.max),this.openEditChild=!this.openEditChild,this.cdr.detectChanges()},T.decorators=[{type:l.NgModule,args:[{imports:[x.ReactiveFormsModule,x.FormsModule],declarations:[]}]},{type:l.Component,args:[{selector:"lib-multi-select",template:'<div [formGroup]="form" dndDropzone  (dndDrop)="onDropNew($event,field)" class="card-body">\n  <label class="col-md-8 form-control-label" [attr.for]="field.label">\n      {{field.label}}\n    </label>\n  <textarea  rows="2" class="form-control">\n  \n  </textarea>\n  <div class="row" *ngIf="openEditChild" style="padding: 20px;\n  border: 1px solid #ccc;margin-top:10px; margin:40px; margin-left: 20%;\n  box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.19);">\n\n  <div class="col-sm-7 form-group">\n    <mat-form-field>\n      <input matInput placeholder="Label" [(ngModel)]="label" [ngModelOptions]="{standalone: true}">\n    </mat-form-field>\n  </div>\n\n  <div class="col-sm-7 form-group">\n    <mat-form-field>\n      <input matInput placeholder="Input Place Holder" [(ngModel)]="placeholder" [ngModelOptions]="{standalone: true}">\n    </mat-form-field>\n  </div>\n\n  <div class="col-sm-7 form-group">\n    <mat-form-field>\n      <input matInput placeholder="Hint/Description" [(ngModel)]="description" [ngModelOptions]="{standalone: true}">\n    </mat-form-field>\n  </div>\n\n  <div class="col-sm-7 form-group">\n    <mat-form-field>\n      <mat-label>Input Type</mat-label>\n      <mat-select [(ngModel)]="type" [ngModelOptions]="{standalone: true}">\n        <mat-option value="text">text</mat-option>\n        <mat-option value="number">number</mat-option>\n        <mat-option value="radio">radio</mat-option>\n        <mat-option value="date">date</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div class="col-sm-7 form-group">\n    <mat-form-field>\n      <mat-label>Pages</mat-label>\n      <mat-select [(ngModel)]="pageNumber" [ngModelOptions]="{standalone: true}">\n        <mat-option value="page_1">page 1</mat-option>\n        <mat-option value="page_2">page 2</mat-option>\n        <mat-option value="page_3">page 3</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div class="col-sm-7 form-group" *ngIf="type==\'slider\'">\n    <mat-form-field>\n      <input type="text" placeholder="Min" matInput [(ngModel)]="min" [ngModelOptions]="{standalone: true}">\n    </mat-form-field>\n  </div>\n\n  <div class="col-sm-7 form-group" *ngIf="type==\'slider\'">\n    <mat-form-field>\n      <input type="text" placeholder="Max" matInput [(ngModel)]="max" [ngModelOptions]="{standalone: true}">\n    </mat-form-field>\n  </div>\n\n  <div class="col-sm-12 form-group" *ngIf="type==\'date\'">\n    <mat-form-field>\n      <input matInput [matDatepicker]="picker" [(ngModel)]="minDate" [ngModelOptions]="{standalone: true}" placeholder="Choose a min date">\n      <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput [matDatepicker]="pickerMaxDate" [(ngModel)]="maxDate" [ngModelOptions]="{standalone: true}" placeholder="Choose a max date">\n      <mat-datepicker-toggle matSuffix [for]="pickerMaxDate"></mat-datepicker-toggle>\n      <mat-datepicker #pickerMaxDate></mat-datepicker>\n    </mat-form-field>\n\n\n  </div>\n  <div class="col-sm-12 form-group" *ngIf="type==\'radio\' || type==\'checkbox\' || type==\'dropdown\'">\n    <label for="label" class="col-sm-12">Options</label>\n\n    <div class="col-sm-7 form-group" *ngIf="type==\'slider\'">\n      <mat-form-field>\n        <input type="text" placeholder="Max" matInput [(ngModel)]="max" [ngModelOptions]="{standalone: true}">\n      </mat-form-field>\n    </div>\n\n  </div>\n\n\n  <div class="col-sm-7">\n    <label id="example-radio-group-label">is Reqired ?</label>\n    <mat-radio-group aria-labelledby="example-radio-group-label" class="example-radio-group" [ngModelOptions]="{standalone: true}" [(ngModel)]="required">\n      <mat-radio-button class="example-radio-button" [value]=true>\n        Yes\n      </mat-radio-button>\n      <mat-radio-button class="example-radio-button" [value]=false>\n        No\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n\n  <div class="col-sm-7" *ngIf="type==\'date\'">\n    <label id="example-radio-group-label">is autoCollect</label>\n    <mat-radio-group aria-labelledby="example-radio-group-label" class="example-radio-group" [(ngModel)]="autoCollect" [ngModelOptions]="{standalone: true}">\n      <mat-radio-button class="example-radio-button" [value]=true>\n        True\n      </mat-radio-button>\n      <mat-radio-button class="example-radio-button" [value]=false>\n        False\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n\n\n  <div class="col-sm-12">\n\n    <button mat-flat-button color="primary" style="margin-right:10px;" (click)="closeModelChild(\'save\')">\n      Save\n    </button>\n\n  </div>\n</div>\n  <div *ngIf="field.child.length > 0">\n\n  <div *ngFor="let obj of field.child let i =index">\n  <div style="float: right;right: -90px; cursor:pointer;\n  top: 20px;" class="col-sm-2 edit-icon"><i class="fa fa-edit" (click)="loadFormElement(obj, i)">{{i}}</i></div>\n  <div [ngSwitch]="obj.type" style="width:80%;margin-left:20%">\n\n  <textbox style ="padding-left:30px" *ngSwitchCase="\'number\'" [field]="obj" [form]="form"></textbox>\n\n  <textbox style ="padding-left:30px" *ngSwitchCase="\'text\'" [field]="obj" [form]="form"></textbox>\n\n  <date style ="padding-left:30px" *ngSwitchCase="\'date\'" [field]="obj" [form]="form"></date>\n\n  <slider style ="padding-left:30px" *ngSwitchCase="\'slider\'" [field]="obj" [form]="form"></slider>\n\n    <dropdown style ="padding-left:30px" *ngSwitchCase="\'dropdown\'" [field]="obj" [form]="form"></dropdown>\n\n    <checkbox style ="padding-left:30px" *ngSwitchCase="\'checkbox\'" [field]="obj" [form]="form"></checkbox>\n\n   <radio style ="padding-left:30px" *ngSwitchCase="\'radio\'" [field]="obj" [form]="form"></radio>\n\n    <file style ="padding-left:30px" *ngSwitchCase="\'file\'" [field]="obj" [form]="form"></file>\n\n    \n  </div>\n  </div>\n  </div>\n  </div>',styles:["\n  .form-control {\n    display: none;\n  }\n  \n"]}]}],T.ctorParameters=function(){return[{type:l.ChangeDetectorRef}]},T.propDecorators={field:[{type:l.Input}],form:[{type:l.Input}],sendDataToParent:[{type:l.Output}],childrenDropEvent:[{type:l.Output}]},T);function T(e){this.cdr=e,this.field={},this.sendDataToParent=new l.EventEmitter,this.childrenDropEvent=new l.EventEmitter,this.openEditChild=!1}var P=(G.decorators=[{type:l.NgModule,args:[{imports:[n.CommonModule,x.ReactiveFormsModule,x.FormsModule,r.MatButtonModule,r.MatRadioModule,r.MatDatepickerModule,r.MatFormFieldModule,r.MatInputModule,r.MatSliderModule,r.MatSelectModule,i.AngularFontAwesomeModule,o.DragDropModule,s.DndModule],declarations:[f,h,b,y,I,w,C,F,S,j],exports:[f],providers:[d]}]}],G);function G(){}var N=(_.decorators=[{type:l.NgModule,args:[{declarations:[c],imports:[n.CommonModule,x.ReactiveFormsModule,P,a.HttpClientModule,x.FormsModule,r.MatSelectModule,r.MatTabsModule,r.MatFormFieldModule,s.DndModule,r.MatButtonModule,r.MatDatepickerModule],exports:[c]}]}],_);function _(){}e.DynamicFormBuilderService=d,e.DynamicFormBuilderModule1=N,e.ɵa=c,e.ɵg=I,e.ɵj=F,e.ɵf=y,e.ɵh=w,e.ɵl=j,e.ɵi=C,e.ɵk=S,e.ɵe=b,e.ɵc=f,e.ɵb=P,e.ɵd=h,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=dynamic-form-builder.umd.min.js.map