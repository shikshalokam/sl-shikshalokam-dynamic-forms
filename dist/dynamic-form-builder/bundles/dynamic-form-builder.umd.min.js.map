{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://dynamic-form-builder/lib/dynamic-form-builder.service.ts","ng://dynamic-form-builder/lib/dynamic-form-builder.component.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/dynamic-form-builder.component.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/field-builder/field-builder.component.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/textbox.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/dropdown.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/file.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/checkbox.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/radio.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/date.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/slider.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/atoms/multi-select.ts","ng://dynamic-form-builder/lib/dynamic-form-builder/dynamic-form-builder.module.ts","ng://dynamic-form-builder/lib/dynamic-form-builder.module.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","DynamicFormBuilderService","this","communicateSubject","Subject","list","all","criteriaList","prototype","currentMessage","sendData","obj","console","log","setPageNumber","data","pagelist","getPageNumbers","getALl","questionList","setCriteria","DynamicFormBuilderComponent","http","_formBuilder","fb","dynamicServe","questionTrigger","EventEmitter","fields","showQuestionBlock","form","FormGroup","FormControl","JSON","stringify","unsubcribe","valueChanges","subscribe","update","showQBlock","getCriteria","ngOnInit","_this","eventsSubscription","events","dt","formBuild","completeData","sendToService","pages","action","emit","formData","jsonData","responseType","icon","onUpload","e","getFields","ngDistroy","getToolObj","ele","len","position","field","type","label","placeholder","description","validations","required","minLenght","maxLength","name","options","key","maxDate","minDate","push","child","min","max","onDrop","trnasformData","fieldsCtrls","_c","tslib_1.__values","_d","f","opts","_e","_f","opt","slice","formData_1","formData_1_1","onSubmit","ngOnDestroy","unsubscribe","onFieldUpdate","$event","eventObj","element","final","filter","item","mutiSelect","parse","Component","args","selector","template","styleUrls","HttpClient","FormBuilder","Input","Output","DynamicFormBuilderComponent$1","addElement","copyOrDeleteEvent","drop","event","moveItemInArray","previousIndex","currentIndex","transferData","eventFromChild","styles","FieldBuilderComponent","sendDataToParent","openEdit","listOfRelation","conditionArray","condition","Object","defineProperty","controls","valid","dirty","parentMapping","currentSelectedQtn","selectedOption","condiObj","operator","conditionMatchValue","getSelectQuestion","allData","isAvailable","visibleIf","addObj","parentChildren","indexOf","alert","includes","relation","loadFormElement","filtereddata","t","activeModelData","draftCriteriaId","pageNumber","autoCollect","saveEdit","closeModel","_id","op","open","content","deleteOption","index","splice","AddNewOptions","newOptionLabel","newOptionKey","Array","isArray","copyElement","deleteElement","isDelete","childrenDropEvent","newObj","deleteCondition","add","page","ViewChild","static","TextBoxComponent","DropDownComponent","FileComponent","ngOnChange","CheckBoxComponent","RadioComponent","DateComponent","SliderComponent","MultiSelectComponent","cdr","openEditChild","onDropNew","closeModelChild","findIndex","currentItem","id","expand","detectChanges","deleteindex","NgModule","imports","ReactiveFormsModule","FormsModule","declarations","ChangeDetectorRef","DynamicFormBuilderModule","CommonModule","MatButtonModule","MatRadioModule","MatDatepickerModule","MatFormFieldModule","MatInputModule","MatSliderModule","MatSelectModule","AngularFontAwesomeModule","DragDropModule","DndModule","exports","providers","DynamicFormBuilderModule1","HttpClientModule","MatTabsModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n// import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\n\n\n// @Injectable({\n//   // providedIn: 'root'\n// })\nexport class DynamicFormBuilderService {\n\n  communicateSubject: Subject<any> = new Subject<any>();\n\n  // private messageSource = new BehaviorSubject('default message');\n  // currentMessage = this.messageSource.asObservable();\n\n  list: any = [];\n  pagelist: any;\n\n  all: any = [];\n  criteriaList: any = [];\n\n  constructor() { }\n\n  currentMessage() {\n    return this.list;\n  }\n\n  sendData(obj) {\n\n    console.log(\"obj\", obj);\n\n    this.list = obj;\n    this.communicateSubject.next();\n  }\n\n  setPageNumber(data) {\n    this.pagelist = data;\n    this.communicateSubject.next();\n  }\n\n  getPageNumbers(): Observable<any> {\n    return this.pagelist;\n\n  }\n  // setQuestionList(list){\n  //   this.list = list;\n  // }\n\n  // changeMessage(message: string) {\n  //   this.messageSource.next(message);\n  // }\n\n  getALl(): Observable<any> {\n\n    // let all = {\n    //   questionList:[]\n    // }\n    this.all = {\n      criteriaList: this.criteriaList,\n      questionList: this.list\n    }\n    // return this.communicateSubject.asObservable();\n    return this.all;\n  }\n  setCriteria(list) {\n\n    this.criteriaList = list;\n\n  }\n\n\n}","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, FormArray } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { DndDropEvent } from 'ngx-drag-drop'\nimport { DynamicFormBuilderService } from './dynamic-form-builder.service';\n\n// import  { } from './dynamic-form-builder.service'\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'lib-dynamic-form-builder',\n  template: `<style>\n  p {\n      font-family: Lato;\n    }\n    .noPadding {\n        padding: 0px;\n    }\n    .margin-5 {\n        margin-top:5%;\n    }\n    .element {\n      border: 1px solid midnightblue;\n    list-style: none;\n    padding: 10px;\n    margin-bottom: 10px;\n    color: midnightblue;\n    width: 100%;\n    text-align: left;\n    cursor: pointer;  \n    text-transform: capitalize;\n  }\n  .element-old {\n    border: 1px solid #ccc;\n    padding: 10px;\n    margin-bottom: 10px;\n    color: #333;\n    text-align: left;\n    text-transform: capitalize;\n  }\n\n   .toolbar {\n    border: 1px solid midnightblue;\n    list-style: none;\n    padding: 10px;\n    margin-bottom: 10px;\n    color: midnightblue;\n    width: 100%;\n    text-align: left;\n    cursor: pointer;\n    text-transform: capitalize;\n   }\n    .element span {\n      text-transform: uppercase !important;\n    }\n    .form-group {\n        margin-bottom: 0.5rem;\n        border: 1px solid #ece7e7;\n    }\n    .cursor-pntr {\n        cursor: pointer;\n    }\n\n    .showQBlock {\n      background: #a5f1d7;\n      padding: 50px;\n      opacity: 0.75;\n      min-height: 390px;\n    }\n    \n    .start-create {\n      width: 50%;\n      margin:auto;\n      padding:20px;\n    }\n    .start-create:hover .add-qicons{\n      display:block;\n    }\n    .toolbar i.material-icons {\n      vertical-align: middle;\n      padding: 6px;\n    }\n    .element i.material-icons {\n      vertical-align: middle;\n      float: right;\n    }\n    .add-qicons{\n     \n      // background: #d9d9f9;\n      padding: 5px;\n      text-align: center;\n      width:100%\n      margin: auto;\n      // box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.19);\n    }\n    \n  </style>\n  <div class=\"col-sm-12\">\n      \n\n    <div class=\"col-sm-12 noPadding\">\n    <div class=\"card showQBlock\" *ngIf=\"fields.length <= 0 && showQuestionBlock\">\n\n      <div>\n        <div class=\"start-create\">\n         <h2 class=\"text-center\" ><span class=\"start-create\">Start Creating a Question</span></h2>\n         <div class=\"add-qicons\">\n              <div class=\"col-sm-6\"  *ngFor=\"let item of jsonData;let i = index\">\n                <div *ngIf=\"i <= 4\" class=\"element\"   (click)=\"onDrop(item.responseType)\">\n                  <span  >\n                  <i class=\"material-icons\">{{ item.icon }}</i>{{ item.responseType }}\n                  </span>\n                </div>\n                <div *ngIf=\"i > 4\" class=\"element\" (click)=\"onDrop(item.responseType)\">\n                  <span   >\n                  <i class=\"material-icons\">{{ item.icon }}</i>{{ item.responseType }}\n                  </span>\n                </div>\n              </div>\n              </div>\n         </div>\n      </div>\n\n    </div>\n    <div class=\"card\" *ngIf=\"fields.length > 0 || !showQuestionBlock\">\n          <div dndDropzone class=\"card-body\" (dndDrop)=\"onDrop($event)\">\n              <form (ngSubmit)=\"onSubmit(this.form.value)\" [formGroup]=\"form\" class=\"form-horizontal\">\n            <dynamic-form-builder [fields]=\"getFields()\" [form]=\"form\"  (onFieldUpdate)=\"onFieldUpdate($event)\" ></dynamic-form-builder>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-12\" style=\"padding-top:25px\" *ngIf=\"fields.length > 0  || !showQuestionBlock\">\n          \n          <div  class=\"col-md-12\">\n            <!-- <dynamic-form-builder [fields]=\"getFields()\"></dynamic-form-builder> -->\n      \n            <span *ngFor=\"let item of jsonData\" >\n              <span [dndDraggable]=\"item\" (click)=\"onDrop(item.responseType)\"  class=\"toolbar\"  >\n            {{ item.responseType }}   <i class=\"material-icons\">{{ item.icon }}</i>\n             </span>\n              </span>\n\n              <!-- <div class=\"col-sm-12 element\" (click)=\"addFormElement(item.responseType)\" >Number</div> -->\n            <!-- <div class=\"col-sm-12 element\" (click)=\"addFormElement('input')\" >Input</div>\n            <div class=\"col-sm-12 element\" (click)=\"addFormElement('number')\" >Number</div> -->\n\n          </div>\n      </div>\n\n\n      \n      <div class=\"col-sm-12\">\n      </div>`,\n  styleUrls: []\n})\nexport class DynamicFormBuilderComponent implements OnInit {\n  public form: FormGroup;\n  unsubcribe: any;\n  jsonData: any;\n  formData: any;\n  pageNumber: any;\n\n  // @Input() data;\n  @Input() events: Observable<any>;\n  // @Output() questionList = new EventEmitter();\n  @Output() questionTrigger = new EventEmitter();\n  eventsSubscription: any;\n  criteriaList: any;\n\n  public fields: any[] = [];\n  showQuestionBlock = true;\n\n  constructor(private http: HttpClient,\n    private _formBuilder: FormBuilder,\n    private fb: FormBuilder,\n    private dynamicServe: DynamicFormBuilderService\n  ) {\n    // this.form = new FormGroup({\n    //   fields: this.fb.array([]),\n    // })\n    this.form = new FormGroup({\n      fields: new FormControl(JSON.stringify(this.fields))\n    })\n\n    this.unsubcribe = this.form.valueChanges.subscribe((update) => {\n      console.log(update);\n      // this.fields = JSON.parse(update.fields);\n    });\n  }\n\n\n\n  showQBlock() {\n    this.showQuestionBlock = false;\n  }\n\n  getCriteria() {\n    return this.criteriaList;\n  }\n  ngOnInit() {\n    this.criteriaList = [];\n    this.getCriteria();\n     this.eventsSubscription = this.events.subscribe(data => {\n      console.log(\"calling from parent with data\", data);\n      if (data) {\n        // let dt = data;\n        // this.formBuild(dt);\n        this.criteriaList = data.criteriaList;\n        let dt = data['questionArray'];\n\n        console.log(\"\")\n        this.formBuild(dt);\n\n        let completeData = {\n          questionList: data['questionArray'],\n          criteriaList: data.criteriaList\n        }\n\n        console.log(\" eventsSubscription completeData\", completeData);\n        this.sendToService(completeData);\n\n      } else {\n        const pages = this.dynamicServe.getPageNumbers();\n        let obj = {\n          action: \"all\",\n          data: this.fields,\n          pages: pages\n        }\n        console.log(\"to get all\", this.fields);\n       \n        this.questionTrigger.emit(obj);\n      }\n    })\n    this.formData = [];\n    this.jsonData = [\n      {\n        \"responseType\": \"text\",\n        \"icon\": \"text_format\"\n      }, {\n        \"responseType\": \"number\",\n        \"icon\": \"indeterminate_check_box\"\n      }, {\n        \"responseType\": \"radio\",\n        \"icon\": \"radio_button_checked\"\n      },\n      {\n        \"responseType\": \"checkbox\",\n        \"icon\": \"check_box\"\n      },\n      {\n        \"responseType\": \"dropdown\",\n        \"icon\": \"arrow_drop_down_circle\"\n      }, {\n        \"responseType\": \"date\",\n        \"icon\": \"date_range\"\n      }, {\n        \"responseType\": \"slider\",\n        \"icon\": \"date_range\"\n      },\n      {\n        \"responseType\": \"matrix\",\n        \"icon\": \"date_range\"\n      }\n    ]\n  }\n  onUpload(e) {\n    console.log(e);\n  }\n\n  getFields() {\n    return this.fields;\n  }\n\n  ngDistroy() {\n    this.unsubcribe();\n  }\n\n  sendToService(data): void {\n    // send message to subscribers via observable subject\n    this.dynamicServe.sendData(data);\n  }\n\n  getToolObj(ele, len) {\n\n    let obj = {\n\n    }\n    if (ele == 'text') {\n      obj = {\n        \"position\": len,\n        \"field\": len + \"question\",\n        \"type\": \"text\",\n        \"label\": \"Question\",\n        \"placeholder\": \"Please enter your question here\",\n        \"description\": \"\",\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        }\n      }\n    } else if (ele == 'number') {\n      obj = {\n        \"field\": len + \"question\",\n        \"type\": \"number\",\n        \"position\": len,\n        \"label\": \"Question\",\n        \"placeholder\": \"Please enter your question here\",\n        \"description\": \"\",\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        }\n      }\n    } else if (ele == 'radio') {\n      obj = {\n        field: len + \"question\",\n        \"position\": len,\n        type: 'radio',\n        name: len + \". question\",\n        label: \"Question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        },\n        options: [\n          { key: 'option1', label: 'Label 1' },\n          { key: 'option2', label: 'Label 1' }\n        ]\n      }\n    } else if (ele == \"checkbox\") {\n      obj = {\n        field: len + \"question\",\n        type: \"checkbox\",\n        \"position\": len,\n        name: len + \". question\",\n        label: \"Question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        },\n        options: [\n          { key: 'option1', label: 'option 1' },\n          { key: 'option2', label: 'option 2' }\n        ]\n      }\n    } else if (ele == \"dropdown\") {\n      obj = {\n        field: len + \"question\",\n        type: 'dropdown',\n        \"position\": len,\n        name: len + \". question\",\n        label: \"Question\",\n        value: 'option1',\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        },\n        options: [\n          { key: 'option1', label: 'Option 1' },\n          { key: 'option1', label: 'Option 2' }\n        ]\n      }\n    }\n    else if (ele == \"date\") {\n      obj = {\n        field: len + \"question\",\n        type: 'date',\n        \"position\": len,\n        name: len + \". question\",\n        label: \"Question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\",\n          \"maxDate\": \"\",\n          \"minDate\": \"\",\n\n        },\n        options: [\n\n        ]\n      }\n    } else if (ele == 'matrix') {\n      if (ele == 'childDroped') {\n        let childdata = {\n          \"field\": len + \"question\",\n          \"type\": ele.type,\n          \"position\": len,\n          \"label\": \"Question\",\n          \"child\": [],\n          \"placeholder\": \"Please add Child's here\",\n          \"description\": \"\",\n          \"validations\": {\n            \"required\": false,\n            \"minLenght\": \"\",\n            \"maxLength\": \"\"\n          }\n        }\n      }\n      let finalchild = [];\n\n      finalchild.push()\n\n\n      obj = {\n        \"field\": len + \"question\",\n        \"type\": \"matrix\",\n        \"label\":  \"Question\",\n        \"child\": [],\n        \"placeholder\": \"Please add Child's here\",\n        \"description\": \"\",\n        \"validations\": {\n          \"required\": false,\n          \"minLenght\": \"\",\n          \"maxLength\": \"\"\n        }\n      }\n    } else if (ele == \"slider\") {\n      obj = {\n        field: len + \"question\",\n        type: 'slider',\n        \"position\": len,\n        name: len + \". question\",\n        label: len + \". question\",\n        description: \"\",\n        required: true,\n        \"validations\": {\n          \"required\": true,\n          \"min\": \"\",\n          \"max\": \"\",\n          \"maxDate\": \"\",\n          \"minDate\": \"\",\n\n        },\n        options: [\n\n        ]\n      }\n    }\n\n    return obj;\n  }\n\n  onDrop(ele, action = \"\") {\n\n    this.showQuestionBlock = false;\n    console.log(\"drop ele\", ele);\n    if (ele.data) {\n      ele = ele.data.responseType\n    }\n    let len = this.fields.length + 1;\n    var obj = {};\n    if (action == \"copy\") {\n      let copyObj = {\n        \"position\": len,\n        \"field\": len + \"question\",\n        \"type\": ele.type,\n        \"label\": ele.label,\n        \"placeholder\": ele.placeholder,\n        \"validations\": ele.validations,\n        \"options\": ele.options,\n        \"description\": ele.description\n      }\n      obj = copyObj;\n\n    } else {\n\n\n      obj = this.getToolObj(ele, len);\n\n\n\n    }\n\n\n    let elem = this.fields;\n    let trnasformData = {\n      action: 'add',\n      data: obj\n    }\n    console.log(\"transf\", trnasformData);\n    this.questionTrigger.emit(trnasformData);\n\n    this.formData.push(obj);\n    let fieldsCtrls = {};\n\n    this.form = new FormGroup(fieldsCtrls);\n    console.log(\"------\", obj);\n    for (let f of this.formData) {\n\n\n      if (f['type'] != 'checkbox') {\n\n        console.log(\"f.type\", f['field']);\n        fieldsCtrls[f['field']] = new FormControl(f['value'] || '')\n      } else {\n\n        let opts = {};\n        for (let opt of f['options']) {\n\n          opts[opt.key] = new FormControl(opt.label);\n        }\n        fieldsCtrls[f['field']] = new FormGroup(opts)\n      }\n\n      // const creds = this.form.controls.fields as FormArray;\n      // creds.push(this.fb.group(fieldsCtrls));\n\n\n      // console.log(\"fieldsCtrls\",fieldsCtrls);\n\n      // this.formData =  this.fields;\n\n    }\n    this.form = new FormGroup(fieldsCtrls);\n    // this.fields\n    // this.formBuild();\n    this.fields.push(obj);\n    let completeData = {\n      questionList: this.fields,\n      criteriaList: this.criteriaList\n    }\n\n    console.log(\"completeData\", completeData);\n    this.sendToService(completeData);\n\n    this.questionTrigger.emit(trnasformData);\n\n    console.log(\"fields controls\", this.form);\n\n  }\n\n\n  formBuild(data) {\n    let formData = [];\n    this.fields = [];\n\n    this.fields.slice(this.fields.length, 0);\n    formData = data;\n    let fieldsCtrls = {};\n    this.form = new FormGroup(fieldsCtrls);\n    for (let f of formData) {\n      if (f['type'] != 'checkbox') {\n        console.log(\"f.type\", f['field']);\n        fieldsCtrls[f['field']] = new FormControl(f['value'] || '')\n      } else {\n        let opts = {};\n        for (let opt of f['options']) {\n          opts[opt.key] = new FormControl(opt.label);\n        }\n        fieldsCtrls[f['field']] = new FormGroup(opts)\n      }\n    }\n    this.form = new FormGroup(fieldsCtrls);\n\n    this.fields = formData;\n    let obj = {\n      action: \"all\",\n      data: formData\n    }\n\n    console.log(\"this.fields-------\", this.fields);\n    this.questionTrigger.emit(obj);\n\n\n    // this.fields = data;\n\n    // let fieldsCtrls = {};\n\n    // console.log(\" this.fields\", data);\n    // for (let f of data) {\n\n\n    //   if (f.type != 'checkbox') {\n\n    //     fieldsCtrls[f.name] = new FormControl(f.value || '')\n    //   } else {\n    //     let opts = {};\n    //     for (let opt of f.options) {\n\n    //       opts[opt.key] = new FormControl(opt.value);\n    //     }\n    //     fieldsCtrls[f.name] = new FormGroup(opts)\n    //   }\n    // }\n    // this.form = new FormGroup(fieldsCtrls);\n  }\n\n  onSubmit(value) {\n    console.log(\"value\", this.fields);\n\n    // this.questionList.emit(this.fields);\n\n    let obj = {\n      action: \"all\",\n      data: this.fields\n    }\n    this.questionTrigger.emit(obj);\n  }\n\n\n  // (event) {\n  //   console.log('Element was dragged', event);\n  // }\n\n  ngOnDestroy() {\n    this.eventsSubscription.unsubscribe()\n  }\n  onFieldUpdate($event) {\n    console.log(\"eventData sssssss------\", $event);\n\n    let eventObj = $event\n    let trnasformData = {};\n    if ($event.action == \"addnew\") {\n      this.onDrop($event.data.element);\n    }\n    if ($event.action == \"copy\") {\n      this.onDrop($event.data, \"copy\");\n    } else if ($event.action == \"delete\") {\n      trnasformData = {\n        action: 'delete',\n        data: $event\n      }\n    }\n     else if ($event.action == 'childDelete') {\n      trnasformData = {\n        action: 'childDelete',\n        data: $event\n      }\n    } \n    else if ($event.action == \"childDroped\") {\n\n      console.log('this.fields', this.fields);\n\n      var final = this.fields.filter(\n        item => {\n          if (item.field === eventObj.data.mutiSelect.field) {\n\n            console.log(\"\");\n            console.log(eventObj.data.mutiSelect.field, '====== this.fields  =====', item);\n\n            // if(item.child){\n            let obj = this.getToolObj($event.data.responseType, item.child.length + 1);\n            // }\n\n            item.child.push(obj);\n            return item;\n          } else {\n            return item;\n          }\n        });\n\n      // final.push(obj);\n\n\n      // this.fields\n\n      console.log('final result', final);\n\n      // console.log(\"main obj\", obj);\n\n    } else {\n      trnasformData = {\n        action: 'update',\n        data: JSON.parse($event)\n      }\n    }\n    this.questionTrigger.emit(trnasformData);\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'dynamic-form-builder',\n  styles: [`\n      \n  .addElement {\n    display:none;\n  }\n  .add-qicons {\n    display:none;\n    font-size: 17px;\n    width: 60%;\n    margin-left: 40%;\n    background: #a5f1d7;\n    float: left;\n    padding: 0px;\n  }\n  .element {\n    line-height: 26px;\n    font-size: 17px;\n    padding: 6px;\n    margin: 8px;\n    border: 1px solid midnightblue;\n    font-weight: bold;\n    color: midnightblue;\n  }\n  .element i.material-icons {\n    vertical-align: middle;\n    float: right;\n  }\n  .addElement:hover .add-qicons {\n    display:block;\n  }\n  `],\n  template: `\n   \n     <div cdkDropList (cdkDropListDropped)=\"drop($event)\"> <div *ngFor=\"let field of fields\"  cdkDrag>\n          <field-builder *ngIf=\"!field.isDeleted\" [field]=\"field\" [form]=\"form\"  \n          (sendDataToParent)=\"eventFromChild($event)\" (copyOrDeleteEvent)=\"copyOrDeleteEvent($event)\">\n          </field-builder>\n          <div class=\"addElement\">\n          <div style=\"float: right;\n          font-size: 4.5em;\n          color: midnightblue;\n          cursor: pointer;\n          line-height: 46px;\">+</div>\n\n          <div class=\"col add-qicons\">\n              <div class=\"col-sm-6\"  *ngFor=\"let item of jsonData;let i = index\">\n                <div *ngIf=\"i <= 4\" class=\"element\" (click)=\"addElement(item.responseType)\"  >\n                  <span  >\n                  <i class=\"material-icons\">{{ item.icon }}</i>{{ item.responseType }}\n                  </span>\n                </div>\n                <div *ngIf=\"i > 4\" class=\"element\" (click)=\"addElement(item.responseType)\" >\n                  <span   >\n                  <i class=\"material-icons\">{{ item.icon }}</i>{{ item.responseType }}\n                  </span>\n                </div>\n              </div>\n              </div>\n         \n          </div>\n      </div></div>`\n\n})\nexport class DynamicFormBuilderComponent implements OnInit {\n  @Output() onFieldUpdate = new EventEmitter();\n  @Input() fields: any[] = [];\n  // form: FormGroup;\n  @Input() form: any;\n  formData: any = [];\n  constructor() { };\n  jsonData = [\n    {\n      \"responseType\": \"text\",\n      \"icon\": \"text_format\"\n    }, {\n      \"responseType\": \"number\",\n      \"icon\": \"indeterminate_check_box\"\n    }, {\n      \"responseType\": \"radio\",\n      \"icon\": \"radio_button_checked\"\n    },\n    {\n      \"responseType\": \"checkbox\",\n      \"icon\": \"check_box\"\n    },\n    {\n      \"responseType\": \"dropdown\",\n      \"icon\": \"arrow_drop_down_circle\"\n    }, {\n      \"responseType\": \"date\",\n      \"icon\": \"date_range\"\n    }, {\n      \"responseType\": \"slider\",\n      \"icon\": \"date_range\"\n    },\n    {\n      \"responseType\": \"matrix\",\n      \"icon\": \"date_range\"\n    }\n  ]\n\n\n  addElement(element) {\n\n    let obj = {\n      action: \"addnew\",\n      element: element\n    }\n    this.copyOrDeleteEvent(obj)\n  }\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.fields, event.previousIndex, event.currentIndex);\n  }\n\n  copyOrDeleteEvent(data) {\n    debugger\n    console.log('data type', data);\n    console.log('this.fields', this.fields);\n\n    if (typeof (data) === 'string') {\n      data = JSON.parse(data);\n\n    }\n\n    // let childdata = data;\n    // let finaldata = JSON.parse(childdata);\n\n    // console.log(JSON.parse(data),\"parse copyEvent occured\");\n    // let obj = data;\n    console.log(data, \"copyEvent occured\");\n\n    // data.field =(this.fields.length+1)+\"question\";\n    // data.label = (this.fields.length+1)+\" question\";\n\n    if (data.action == \"addnew\") {\n\n\n      let transferData = {\n        action: \"addnew\",\n        data: data\n      }\n\n      this.onFieldUpdate.emit(transferData);\n\n    } else if (data.action == \"copy\") {\n\n      console.log(data, \"this.form before\");\n\n      let transferData = {\n        action: \"copy\",\n        data: data\n      }\n\n      this.onFieldUpdate.emit(transferData);\n\n      //  data.field = (this.fields.length+1)+\"question\";\n\n      //  console.log(\"data\",data)\n      // this.formBuild(obj);\n\n    } else if (data.action == \"delete\") {\n\n      // var index = this.fields.indexOf(data);\n\n      // console.log(\"ind\", index);\n\n      this.onFieldUpdate.emit(data);\n\n      // this.fields.splice(index, 1);\n\n\n\n      // this.fields = this.fields.filter(function(value, index, arr){\n      //   return value!=data;\n      // });\n\n\n\n      // console.log(\"evens\",evens);\n      // this.fields= evens;\n      // console.log(\"this.form\",this.form);\n      // this.fields.\n      // console.log(this.fields.length,\"copyEvent occured\",evens);\n    } else if(data.action == \"childDelete\"){\n\n      // console.log('childDelete', this.fields);\n\n      \n      // var index = this.fields[0].child.indexOf(data);\n\n      // console.log(\"ind\", index);\n\n      this.onFieldUpdate.emit(data);\n    }\n     else if (data.action == \"childDroped\") {\n      this.onFieldUpdate.emit(data);\n    }\n\n  }\n\n  eventFromChild(data) {\n\n    this.onFieldUpdate.emit(data);\n    console.log(\"data from child  ------- \", data);\n  }\n\n  ngOnInit() {\n\n    this.formData = this.fields;\n\n    console.log(\"this.form ---\", this.form)\n    // this.formBuild();\n  }\n\n  //   formBuild(item){\n  //     let fieldsCtrls = {};\n\n  //     this.form = new FormGroup(fieldsCtrls);\n\n  //     // var formData = this.fields;\n\n  //     // console.log(\"this.fields\",this.fields); \n\n  //     let len = this.fields.length + 1;\n\n\n  //     var obj = {\n  //       \"position\":len,\n  //       \"field\": len + \"question\",\n  //       \"type\": item.type,\n  //       \"label\": item.label,\n  //       \"placeholder\": item.placeholder,\n  //       \"validations\":item.validations  \n\n  //     }\n\n  //     this.fields.push(obj);\n  //    this.fields.forEach(function(f){\n  //     // console.log(\"f.type\", f);\n\n  //     if (f['type'] != 'checkbox') {\n\n  //       fieldsCtrls[f['field']] = new FormControl(f['value'] || '')\n  //     } else {\n\n  //       let opts = {};\n  //       for (let opt of f['options']) {\n\n  //         opts[opt.key] = new FormControl(opt.label);\n  //       }\n  //       fieldsCtrls[f['field']] = new FormGroup(opts)\n  //     }\n  //   });\n\n  //   this.form = new FormGroup(fieldsCtrls);\n\n  //   // console.log(\"fieldsCtrls\",fieldsCtrls);\n  // }\n}\n","import { Component, Input, OnInit, ViewChild, ElementRef, EventEmitter, Output } from '@angular/core';\n// import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { DynamicFormBuilderService } from '../../dynamic-form-builder.service';\nimport { Subscription } from 'rxjs';\nimport { isNgTemplate } from '@angular/compiler';\n\n\n\n\n@Component({\n  selector: 'field-builder',\n  template: `\n  <style>\n  .mat-slider-horizontal {\n    min-width: 80% !important;\n  }\n  .example-radio-group {\n    display: flex;\n    flex-direction: block;\n    margin: 15px 0; \n  }\n\n  .mat-form-field {\n    display: block;\n    position: relative;\n    flex: auto;\n    min-width: 0;\n    width: 372px;\n  }\n  .input-group {\n    position: relative;\n     border-collapse: separate;\n     display: block;\n  }\n  \n  .example-radio-button {\n    margin: 5px;\n  }\n  .action-component {\n    padding:10px 10px 0px 0px;\n    right: 0px;\n    cursor: pointer;\n    float: right;\n  \n}\nspan.cursor-pntr {\n  cursor: pointer;\n  padding: 3px;\n}\n.form-control {\n  display: block;\n  visibility: hidden;\n\n}\n.label.col-md-8.form-control-label {\n  text-decoration: underline;\n}\n\n  </style>\n  <div class=\"row\" *ngIf=\"openEdit\" style=\"padding: 15px;\n  border: 1px solid #ccc;margin-top:10px;width:85%;margin-top:40px;margin: auto;\n  box-shadow: 1px 1px 1px 1px rgba(0,0,0,0.19);margin-top:20px;\">\n    <div class=\"col-sm-6\">\n      <mat-form-field>\n        <input matInput placeholder=\"Label\" [(ngModel)]=\"label\" name=\"label\">\n      </mat-form-field>\n    </div>\n  \n    <div class=\"col-sm-6\">\n      <mat-form-field>\n        <input matInput placeholder=\"Input Place Holder\" [(ngModel)]=\"placeholder\" name=\"placeholder\">\n      </mat-form-field>\n    </div>\n  \n    <div class=\"col-sm-6\">\n      <mat-form-field>\n        <input matInput placeholder=\"Hint/Description\" [(ngModel)]=\"description\" name=\"Description\">\n      </mat-form-field>\n    </div>\n  \n    <div class=\"col-sm-6 \" style=\"display:none\">\n      <mat-form-field>\n        <mat-label>Input Type</mat-label>\n        <mat-select [(ngModel)]=\"type\">\n          <mat-option value=\"text\">text</mat-option>\n          <mat-option value=\"number\">number</mat-option>\n          <mat-option value=\"radio\">radio</mat-option>\n          <mat-option value=\"date\">date</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  \n    <div class=\"col-sm-5\">\n      <mat-form-field>\n        <mat-label>Pages</mat-label>\n  \n        <mat-select [(ngModel)]=\"pageNumber\">\n          <mat-option *ngFor=\"let page of pages; let i = index\" value=\"{{page.value}}\">{{page.label}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"col-sm-1\">\n      <span style=\"float:right;padding-top:15px\" class=\"cursor-pntr\"><i title=\"Add Page\" class=\"fa fa-plus\"\n          (click)=\"add(pages)\"></i></span>\n    </div>\n  \n    <div class=\"col-sm-6\">\n      <mat-form-field>\n        <mat-label>Criteria</mat-label>\n        <mat-select [(ngModel)]=\"draftCriteriaId\">\n          <mat-option *ngFor=\"let item of criteriaList\" [value]=\"item._id\">{{ item.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  \n  \n  \n    <div class=\"col-sm-6\" *ngIf=\"type=='slider'\">\n      <mat-form-field>\n        <input type=\"text\" placeholder=\"Min\" matInput [(ngModel)]=\"min\" name=\"min value\">\n      </mat-form-field>\n    </div>\n  \n    <div class=\"col-sm-6\" *ngIf=\"type=='slider'\">\n      <mat-form-field>\n        <input type=\"text\" placeholder=\"Max\" matInput [(ngModel)]=\"max\" name=\"min value\">\n      </mat-form-field>\n    </div>\n  \n    <div class=\"col-sm-6\" *ngIf=\"type=='date'\">\n      <mat-form-field>\n        <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"minDate\" placeholder=\"Choose a min date\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n  \n      <mat-form-field>\n        <input matInput [matDatepicker]=\"pickerMaxDate\" [(ngModel)]=\"maxDate\" placeholder=\"Choose a max date\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerMaxDate\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerMaxDate></mat-datepicker>\n      </mat-form-field>\n  \n  \n    </div>\n    <div class=\"col-sm-12\" *ngIf=\"type=='radio' || type=='checkbox' || type=='dropdown'\">\n      <label for=\"label\" class=\"col-sm-12\">Options</label>\n  \n      <ul class=\"col\" *ngFor=\"let opt of options;let i = index\">\n        <li class=\"\">\n          <span>{{opt.label}} </span><span style=\"\n      margin-left: 30px;\" (click)=\"deleteOption(opt,i)\">\n            <i class=\"fa fa-trash\"></i></span>\n        </li>\n      </ul>\n  \n      <div class=\"col-sm-6\">\n        <div class=\"input-group\">\n          <mat-form-field>\n            <input type=\"text\" placeholder=\"Label\" matInput style=\"margin-bottom: 10px;\" [(ngModel)]=\"newOptionLabel\"\n              name=\"newOption\">\n          </mat-form-field>\n          <mat-form-field>\n            <input type=\"tex\" disabled matInput name=\"newOption\" placeholder=\"key\" [(ngModel)]=\"newOptionKey\">\n          </mat-form-field>\n        </div>\n        <button mat-flat-button color=\"primary\" style=\"margin-top: 10px;\" (click)=\"AddNewOptions()\">\n          Add\n        </button>\n      </div>\n    </div>\n  \n    <div *ngIf=\"filtereddata && filtereddata.length > 0\">\n      <div class=\"col-sm-12\">\n        <label id=\"example-radio-group-label\">Do you want to related the question based on below options ?</label>\n        <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\"\n          [(ngModel)]=\"selectedOption\">\n          <mat-radio-button class=\"example-radio-button\" *ngFor=\"let ele of options\" [value]=\"ele\">\n            {{ ele.label }}\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n  \n  \n      <div class=\"col-sm-6\">\n        <mat-form-field>\n          <mat-label>Select Question to add </mat-label>\n          <select matNativeControl [(ngModel)]=\"currentSelectedQtn\">\n            <option *ngFor=\"let values of filtereddata\" [ngValue]=\"values\"> {{ values.label }} </option>\n          </select>\n        </mat-form-field>\n      </div>\n  \n      <div class=\"col-sm-6\" *ngIf=\"type=='text' || type=='date' || type=='number'\">\n        <mat-form-field>\n          <mat-label>Select Condition </mat-label>\n          <select matNativeControl [(ngModel)]=\"condition\">\n            <option *ngFor=\"let values of conditionArray\" [ngValue]=\"values.condition\"> {{ values.label }} </option>\n          </select>\n        </mat-form-field>\n      </div>\n  \n      <div class=\"col-sm-6\" *ngIf=\"type=='text' || type=='date' || type=='number'\">\n        <mat-form-field>\n          <input type=\"tex\" matInput name=\"conditionMatchValue\" placeholder=\"\" [(ngModel)]=\"conditionMatchValue\">\n        </mat-form-field>\n      </div>\n  \n      <div class=\"col-sm-2\">\n        <button mat-flat-button color=\"primary\" style=\"margin-top: 10px;\" (click)=\"parentMapping()\">\n          Add\n        </button>\n      </div>\n    </div>\n  \n    <ul class=\"col-sm-12\" *ngFor=\"let relate of listOfRelation;let i = index\">\n      <li class=\"col-sm-12\">\n        <span>{{relate.label}} </span><span style=\"\n  margin-left: 30px;\" (click)=\"deleteCondition(relate,i)\">\n          <i class=\"fa fa-trash\"></i></span>\n      </li>\n    </ul>\n  \n  \n    <div class=\"col-sm-12\">\n      <label id=\"example-radio-group-label\">is Reqired ?</label>\n      <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [(ngModel)]=\"required\">\n        <mat-radio-button class=\"example-radio-button\" [value]=true>\n          Yes\n        </mat-radio-button>\n        <mat-radio-button class=\"example-radio-button\" [value]=false>\n          No\n        </mat-radio-button>\n      </mat-radio-group>\n    </div>\n  \n    <div class=\"col-sm-12\" *ngIf=\"type=='date'\">\n      <label id=\"example-radio-group-label\">is autoCollect</label>\n      <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [(ngModel)]=\"autoCollect\">\n        <mat-radio-button class=\"example-radio-button\" [value]=true>\n          True\n        </mat-radio-button>\n        <mat-radio-button class=\"example-radio-button\" [value]=false>\n          False\n        </mat-radio-button>\n      </mat-radio-group>\n    </div>\n  \n  \n    <div class=\"col-sm-12\">\n  \n      <button mat-flat-button color=\"primary\" style=\"margin-right:10px;\" (click)=\"closeModel('save')\">\n        Save\n      </button>\n  \n    </div>\n  \n  </div>\n  <div class=\"form-group row\" [formGroup]=\"form\"\n    style=\"padding:0px;margin:0px;margin-top:10px;box-shadow: 1px 1px 2px 1px rgba(0,0,0,0.19);padding-bottom:10px;\">\n    <span class=\"qtn_position\"><span class=\"\">#{{ field.position }}</span></span>\n  \n    <div class=\"action-component\">\n  \n      <span class=\"cursor-pntr\" (click)=\"deleteElement(field)\"><i class=\"fa fa-trash\"></i> </span>\n      <span class=\"cursor-pntr\" (click)=\"copyElement(field)\"><i class=\"fa fa-copy\"></i></span>\n      <span class=\"cursor-pntr\"><i class=\"fa fa-edit\" (click)=\"loadFormElement(field)\"></i></span>\n  \n    </div>\n    <div class=\"col-md-12\" [ngSwitch]=\"field.type\">\n      <textbox *ngSwitchCase=\"'number'\" [field]=\"field\" [form]=\"form\"></textbox>\n      <textbox *ngSwitchCase=\"'text'\" [field]=\"field\" [form]=\"form\"></textbox>\n      <date *ngSwitchCase=\"'date'\" [field]=\"field\" [form]=\"form\"></date>\n      <slider *ngSwitchCase=\"'slider'\" [field]=\"field\" [form]=\"form\"></slider>\n      <dropdown *ngSwitchCase=\"'dropdown'\" [field]=\"field\" [form]=\"form\"></dropdown>\n      <checkbox *ngSwitchCase=\"'checkbox'\" [field]=\"field\" [form]=\"form\"></checkbox>\n      <radio *ngSwitchCase=\"'radio'\" [field]=\"field\" [form]=\"form\"></radio>\n      <lib-multi-select *ngSwitchCase=\"'matrix'\" cdkDrag   (sendDataToParent)=\"eventFromChild($event)\" \n      (childrenDropEvent)=\"childrenDropEvent($event)\" [field]=\"field\" [form]=\"form\"></lib-multi-select>\n      <file *ngSwitchCase=\"'file'\" [field]=\"field\" [form]=\"form\"></file>\n      <div style=\"float:right\">\n      </div>\n    </div>\n    </div>`,\n  styles: [`\n  .qtn_position {\n    float: left;\n    width: 40px;\n    padding: 5px 0px 0px 5px;\n    color: #ccc;\n  } `\n  ]\n})\n\n// <div class=\"alert alert-danger my-1 p-2 fadeInDown animated\" *ngIf=\"!isValid && isDirty\">{{field.label}} is required</div>\n\nexport class FieldBuilderComponent implements OnInit {\n  @Input() field: any;\n\n  @Input() criteriaList: any;\n  @Input() form: any;\n\n  @Output() sendDataToParent = new EventEmitter<any>();\n\n  @Output() copyOrDeleteEvent = new EventEmitter<any>();\n  filtereddata: any;\n  getSelectQuestion: any;\n  closeResult: string;\n  modalReference: any;\n  label: any;\n  type: any;\n  placeholder: any;\n  options: any;\n  newOptionKey: any;\n  newOptionLabel: any;\n\n  pages = [{\n    label: 'page 1',\n    value: 'page 1'\n  }, {\n    label: 'page 2',\n    value: 'page 2'\n  }, {\n    label: 'page 3',\n    value: 'page 3'\n  }]\n\n  activeModelData: any;\n  validations: any;\n  required: any;\n  autoCollect: any;\n  openEdit: boolean = false;\n  _id: any;\n  description: any;\n  pageNumber: any;\n  minDate: any;\n  maxDate: any;\n  min: any;\n  max: any;\n  draftCriteriaId: any;\n  subscription: Subscription;\n  allData: any;\n  currentSelectedQtn: any;\n  selectedOption: any;\n\n  listOfRelation: any = [];\n  condition: any;\n\n  conditionMatchValue: any;\n\n  conditionArray: any = [\n    {\n      label: \"equals\",\n      condition: \"===\"\n    },\n    {\n      label: \"Not Equal To\",\n      condition: \"!=\"\n    },\n    {\n      label: \"Greater Than\",\n      condition: \">\"\n    },\n    {\n      label: \"Less Than\",\n      condition: \"<\"\n    },\n    {\n      label: \"Greater Than Or Equal\",\n      condition: \">=\"\n    },\n    {\n      label: \"Less Than Or Equal\",\n      condition: \"<=\"\n    }\n  ]\n\n\n  // private modalRef: NgbModalRef;\n  @ViewChild('content', { static: false }) myModal: ElementRef;\n\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n  constructor(\n    // private modalService: NgbModal\n    private dynamicServe: DynamicFormBuilderService\n  ) {\n\n  }\n\n  // getAll(){\n  //   this.subscription = this.dynamicServe.getALl().subscribe(message => { \n  //     console.log(\"get all info\",message);\n\n  //    });\n\n  // }   \n\n\n  parentMapping() {\n    console.log(this.condition, \"condition\", this.currentSelectedQtn, \"selectedOption\", this.selectedOption);\n    let obj = {}\n    // option:this.selectedOption,\n    // question:this.currentSelectedQtn\n    // obj['visibleIf'] = [];\n\n\n    let condiObj = {\n      operator: this.condition,\n      value: this.conditionMatchValue,\n      field: this.field.field,\n      label: this.field.label\n      // parent:this.selectedOption.field\n    }\n\n    // if (this.currentSelectedQtn.parentChildren) {\n    //   this.currentSelectedQtn.parentChildren.push(condiObj);\n    // } else {\n    //   this.currentSelectedQtn.parentChildren = [];\n    //   this.currentSelectedQtn.parentChildren.push(condiObj);\n    // }\n    console.log('this.currentSelectedQtn', this.currentSelectedQtn);\n\n    console.log(\"condiObj\", condiObj);\n    this.getSelectQuestion = this.allData['questionList']['questionList'].filter(ele => {\n      if (ele.field == this.field.field) {\n        return ele;\n      }\n    });\n\n    console.log(\"getSelectQuestion\", this.getSelectQuestion);\n\n    let isAvailable = false;\n    if (this.getSelectQuestion['visibleIf'] && this.getSelectQuestion['visibleIf'].length > 0) {\n      isAvailable = this.getSelectQuestion['visibleIf'].filter(item => {\n        if (item.visibleIf.field == this.field.field) {\n          return true\n        }\n      })\n    }\n\n\n\n\n\n    console.log(\"after getSelectQuestion\", this.getSelectQuestion);\n\n    let allData = [];\n\n\n\n    let addObj = false;\n    for (let i = 0; i < this.getSelectQuestion.length; i++) {\n      debugger\n      if (this.getSelectQuestion[i].parentChildren) {\n        if (this.getSelectQuestion[i].parentChildren.indexOf(this.currentSelectedQtn.field) !== -1) {\n          alert(\"Value exists!\")\n\n          addObj = false;\n\n        } else {\n\n          addObj = true;\n          this.getSelectQuestion[i].parentChildren.push(this.currentSelectedQtn.field);\n        }\n\n      } else {\n        addObj = true;\n        this.getSelectQuestion[i].parentChildren = [];\n        this.getSelectQuestion[i].parentChildren.push(this.currentSelectedQtn.field);\n      }\n    }\n\n\n    if (addObj) {\n\n\n      allData = this.allData['questionList']['questionList'].filter(ele => {\n        if (ele.field == this.currentSelectedQtn.field) {\n          if (ele.visibleIf && ele.visibleIf.length > 0 && isAvailable == false) {\n            ele.visibleIf.push(condiObj);\n          } else {\n            ele.visibleIf = [];\n            ele.visibleIf.push(condiObj);\n          }\n          return ele;\n        } else {\n          return ele\n        }\n      });\n\n\n\n      console.log(\"all data in question\", allData);\n\n      // this.sendDataToParent()\n\n\n\n\n\n\n      if (!this.listOfRelation.includes(condiObj)) {\n\n        this.listOfRelation.push(condiObj);\n\n\n      }\n\n\n    }\n\n\n\n    if (this.condition) {\n\n\n\n\n    }\n\n\n\n    // 'option':this.selectedOption,\n    //       'question':this.currentSelectedQtn\n\n    // this.field.childQnt = this.currentSelectedQtn.field;\n\n    console.log(\"this.field.validations.relation\", this.listOfRelation);\n\n\n  }\n\n  ngOnInit() {\n    // this.currentSelectedQtn = { };\n    // this.dynamicServe.getALl();\n    this.options = [];\n    this.validations = {\n      'relation': []\n    }\n\n    this.field.validations = {\n      'relation': []\n    };\n    this.dynamicServe.setPageNumber(this.pages);\n  }\n  loadFormElement(item) {\n\n    console.log('loadFormElement', item);\n    this.allData = this.dynamicServe.getALl();\n\n    console.log(this.allData, \" all questions \", this.allData['questionList']);\n\n\n\n    this.filtereddata = this.allData['questionList']['questionList'].filter(t => t.field !== item.field);\n\n    this.allData['questionList']['questionList'];\n\n    this.criteriaList = this.allData['criteriaList'];\n    console.log('const filtereddata', this.filtereddata);\n    // console.log('length', this.filtereddata['questionList'].length);\n\n    // this.dynamicServe.getALl()\n\n    // console.log(\"item ---\", );\n\n    this.activeModelData = \"\";\n    this.label = item.label;\n    this.type = item.type;\n    this.placeholder = item.placeholder;\n    this.options = item.options;\n    this.draftCriteriaId = item.draftCriteriaId;\n    // this.pages = this.pages\n    this.required = item.validations.required;\n\n    this.description = item.description;\n    this.pageNumber = item.pageNumber;\n\n    if (item.validations.relation) {\n      this.listOfRelation = item.validations.relation;\n    }\n\n    if (item.type == \"date\") {\n      this.minDate = item.validations.minDate;\n      this.maxDate = item.validations.maxDate\n      this.autoCollect = item.validations.autoCollect;\n    }\n    else if (item.type == \"slider\") {\n      this.min = item.validations.min;\n      this.max = item.validations.max;\n    }\n\n\n\n    this.required = this.field.validations.required;\n    console.log(item.validations.required, \"item.validations.required\", this.required, \"label\", this.label);\n    // console.log(\"label\",this.label);\n\n    this.openEdit = this.openEdit ? false : true;\n    // document.getElementById(\"openModalButton\").click();\n    // this.open(this.myModal);\n    // this.myModal.show();\n    // this.myModal.nativeElement.className = 'modal fade show';\n\n  }\n\n  saveEdit() {\n  }\n  closeModel(action) {\n\n    if (action == \"save\") {\n\n\n\n      console.log(this.validations, \"this.field\", this.required);\n      // this.modalReference.close();\n\n\n      // this.activeModelData.field = this.field.field;\n\n      // this.activeModelData.label = this.label;\n      // this.activeModelData.type = this.type;\n      // this.activeModelData.placeholder = this.placeholder;\n      // this.activeModelData.options = this.options;\n\n      let obj = {\n        label: this.label,\n        type: this.type,\n        placeholder: this.placeholder,\n        options: this.options,\n        validations: this.validations,\n        field: this.field,\n        _id: this._id,\n        description: this.description,\n        pageNumber: this.pageNumber,\n        draftCriteriaId: this.draftCriteriaId,\n\n      }\n\n      if (this.type == 'date') {\n        obj['minDate'] = this.minDate;\n        obj['maxDate'] = this.maxDate\n      } else if (this.type == 'slider') {\n        obj['min'] = this.min;\n        obj['max'] = this.max;\n      }\n\n      // console.log(\"obj\",obj);\n\n\n\n\n      // this.field.label = this.label;\n\n\n      this.field.label = this.label;\n      this.field.type = this.type;\n      this.field.placeholder = this.placeholder;\n      this.field.options = this.options;\n      this.field.description = this.description;\n      this.field.pageNumber = this.pageNumber;\n      this.field.draftCriteriaId = this.draftCriteriaId;\n\n      if (this.type == 'date') {\n        this.field.validations.minDate = this.minDate;\n        this.field.validations.maxDate = this.maxDate;\n        this.field.validations.autoCollect = this.autoCollect;\n      } else if (this.type == 'slider') {\n        this.field.validations.min = this.min;\n        this.field.validations.max = this.max;\n      }\n\n      // if(this.field.validations.relation){\n\n      if (this.listOfRelation) {\n        obj.validations.relation = this.listOfRelation;\n        this.field.validations.relation = this.listOfRelation;\n      }\n\n      // }\n\n\n\n      // this.field.validations\n\n      // console.log(\" this.field.validations.required\", this.field.validations.required, \"sdds\", this.required);\n      this.field.validations.required = this.required;\n      this.field.validations.autoCollect = this.autoCollect;\n\n\n      console.log(obj, \"this.field.validations\", this.field.validations);\n      let op = {\n        action: \"save\",\n        data: obj\n      }\n\n      this.sendDataToParent.emit(op);\n      // this.sendDataToParent.emit(JSON.stringify(obj));\n\n      // console.log(\" this.field\", this.field);\n      this.openEdit = false;\n\n      // this.sendDataToParent.emit(this.activeModelData);\n\n    } else {\n\n      this.openEdit = false;\n      // this.modalReference.close();\n    }\n\n    // this.modalService.close();\n    //  this.myModal.nativeElement.className = 'modal hide';\n  }\n\n  open(content) {\n\n\n\n    // console.log(\" this.activeModelData\", selectedData);\n    // this.modalReference = this.modalService.open(content);\n    // this.modalReference.result.then((result) => {\n    //   this.closeResult = `Closed with`;\n    // }, (reason) => {\n    //   this.closeResult = `Dismissed`;\n    // });\n  }\n\n  // private getDismissReason(reason: any): string {\n  //   // if (reason === ModalDismissReasons.ESC) {\n  //   //   return 'by pressing ESC';\n  //   // } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n  //   //   return 'by clicking on a backdrop';\n  //   // } else {\n  //   //   return `with: ${reason}`;\n  //   // }\n  // }\n\n  deleteOption(opt, index) {\n    console.log(\"delete\", this.options);\n\n    // let newArr = [];\n    // let optionsArr = this.options.filter(item => {\n    // if(item.lable==opt.label && item.key==opt.key){\n\n    // }else{\n\n    // }\n\n    // return (item.label != opt.label && item.key != opt.key)\n\n    // if(item.lable==opt.label && item.key==opt.key){\n\n    // }else{\n    //   return true;\n    // }\n    // })\n    this.options.splice(index, 1);\n\n    // this.options = optionsArr;\n    console.log(\"delete new \", this.options);\n  }\n  AddNewOptions() {\n\n    if (this.newOptionLabel != \"\") {\n\n      this.newOptionKey = 'R' + this.options.length;\n      console.log(\"this.newOption\", this.newOptionLabel);\n\n      if (Array.isArray(this.options)) {\n\n      } else {\n        this.options = [];\n      }\n\n      this.options.push({\n        key: this.newOptionKey,\n        label: this.newOptionLabel\n      });\n\n      console.log(\"this.options.push\", this.options);\n    }\n    this.newOptionKey = \"\";\n    this.newOptionLabel = \"\";\n  }\n\n  copyElement(item) {\n    // this.field.push(item);\n    item.action = 'copy';\n    console.log(\"field ----------\", item);\n    this.copyOrDeleteEvent.emit(item);\n\n  }\n  deleteElement(item) {\n    item.action = 'delete';\n    this.field.isDelete = true;\n    this.copyOrDeleteEvent.emit(item);\n    console.log(\"field delete\", this.field);\n\n  }\n  childrenDropEvent($event) {\n    console.log(\"childrenDropEvent\", this.field);\n    // const action  = 'childDroped';\n    let newObj = {\n      action: 'childDroped',\n      data: $event\n    }\n    this.copyOrDeleteEvent.emit(newObj);\n    console.log(\"field delete\", this.field);\n  }\n\n  deleteCondition(data, value) {\n    // var index = this.listOfRelation.indexOf(value);\n    // if (index > -1) {\n    this.listOfRelation.splice(value, 1);\n    this.getSelectQuestion[0].parentChildren.splice(value, 1);\n    // }\n\n    console.log('after delete data', this.listOfRelation);\n  }\n\n\n  add(data) {\n    console.log(' add data', data);\n    let page = {\n      label: 'page' + ' ' + (data.length + 1),\n      value: 'page' + ' ' + (data.length + 1),\n    }\n    this.pages.push(page);\n    this.dynamicServe.setPageNumber(this.pages);\n  }\n\n  eventFromChild($event) {\n    console.log('sri==========', $event);\n     $event.action = 'childDelete';\n    this.copyOrDeleteEvent.emit($event);\n   }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n  selector: 'textbox',\n  template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-0 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n      </label>\n    \n        <input *ngIf=\"!field.multiline\" [attr.type]=\"field.type\" class=\"form-control\"  [id]=\"field.field\" [name]=\"field.field\" >\n        <textarea *ngIf=\"field.multiline\"  [id]=\"field.field\"\n        rows=\"20\" class=\"form-control\" [placeholder]=\"field.placeholder\"></textarea>\n\n      </div> \n    `,\n    styles:[`\n    .form-control {\n      display: none;\n    }\n    `]\n})\nexport class TextBoxComponent {\n  @Input() field: any = {};\n  @Input() form: FormGroup;\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n \n  \n  constructor() {\n\n    // this.form.controls = this.field.name;\n    // console.log(\"form\",this.form);\n\n  }\n \n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'dropdown',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-sm-0 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <select class=\"form-control\" [id]=\"field.field\">\n          <option *ngFor=\"let opt of field.options\" [value]=\"opt.key\">{{opt.label}}</option>\n        </select>\n      </div> \n    `,\n    styles:[`\n    .form-control {\n      display: none;\n    }\n    `]\n})\nexport class DropDownComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n\n    constructor() {\n\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'file',\n    template: `\n      <div [formGroup]=\"form\">\n        <div *ngIf=\"!field.value\" class=\"drop-container dropzone\" dropZone \\\n          (dropped)=\"field.onUpload($event)\">\n          <p class=\"m-0\">\n            Drag a file here or\n            <label class=\"upload-button\">\n              <input type=\"file\" multiple=\"\" (change)=\"field.onUpload($event.target.files)\"> browse\n            </label>\n            to upload.\n          </p>\n        </div>\n        <div *ngIf=\"field.value\">\n          <!-- <button type=\"button\" class=\"btn btn-primary\">Change</button> -->\n          <div class=\"card\">\n            <img class=\"card-img-top\" [src]=\"field.value\">\n          </div>\n        </div>\n      </div> \n    `,\n    styles:[\n      `\n      .form-control {\n        display:none;\n      }\n      .drop-container {\n        background: #fff;\n        border-radius: 6px;\n        height: 150px;\n        width: 100%;\n        box-shadow: 1px 2px 20px hsla(0,0%,4%,.1);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border: 2px dashed #c0c4c7;\n      }\n      p {\n        font-size: 16px;\n        font-weight: 400;\n        color: #c0c4c7; \n      }\n      .upload-button {\n        display: inline-block;\n        border: none;\n        outline: none;\n        cursor: pointer;\n        color: #5754a3;\n      }\n      .upload-button input {\n        display: none;\n      }\n      .dropzone { \n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column; \n        border-radius: 5px;\n        background: white;\n        margin: 10px 0;\n      }\n      .dropzone.hovering {\n          border: 2px solid #f16624;\n          color: #dadada !important;\n      }\n      progress::-webkit-progress-value {\n        transition: width 0.1s ease;\n      }\n      `\n    ]\n})\nexport class FileComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n    }\n\n    ngOnChange(){\n      console.log(this.field.value);\n      // this.field.value.\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'checkbox',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-sm -12 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <div [formGroupName]=\"field.field\" >\n          <div *ngFor=\"let opt of field.options\" class=\"form-check form-check\">\n          <label class=\"form-check-label\">\n             <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\" />\n             {{opt.label}}</label>\n          </div>\n        </div>\n\n      </div> \n    `,\n    styles:[`\n    .form-control {\n      display: none;\n    }\n    `]\n})\nexport class CheckBoxComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'radio',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-sm-12 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <div class=\"form-check\" *ngFor=\"let opt of field.options\">\n          <input class=\"form-check-input\" type=\"radio\" [id]=\"field.field\" [value]=\"opt.key\">\n          <label class=\"form-check-label\">\n            {{opt.label}}\n          </label>\n        </div>\n      </div> \n    `,\n    styles:[`\n    .form-control {\n      display: none;\n    }\n    `]\n})\nexport class RadioComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'date',\n    template: `\n      <div [formGroup]=\"form\">\n      <label class=\"col-md-8 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <input *ngIf=\"!field.multiline\" [attr.type]=\"field.type\" class=\"form-control\" \n         [id]=\"field.field\" [name]=\"field.field\">\n        <textarea *ngIf=\"field.multiline\" [class.is-invalid]=\"isDirty && !isValid\" [id]=\"field.field\"\n        rows=\"20\" class=\"form-control\" [placeholder]=\"field.placeholder\"></textarea>\n\n      </div> \n    `,\n    styles:[`\n    .form-control {\n      display: none;\n    }\n    `]\n})\nexport class DateComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n      // this.form.controls = this.field.name;\n      // console.log(\"form\",this.form);\n\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'slider',\n    template: `\n      <div [formGroup]=\"form\" >\n      <label class=\"col-md-0 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n    </label>\n        <input *ngIf=\"!field.multiline\" type=\"hidden\" class=\"form-control\" [id]=\"field.field\" [name]=\"field.field\">\n        \n        <mat-slider\n   class = \"tp-margin\"\n   [disabled] = \"false\"\n   [invert] = \"false\"      \n   [thumbLabel] = \"false\"\n   [max]=\"field.max\"\n   [min]=\"field.min\"    \n   [vertical] = \"false\">\n</mat-slider>\n\n      </div> \n    `,\n    styles:[`\n    .form-control {\n      display: none;\n    }\n    `]\n})\nexport class SliderComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n      // this.form.controls = this.field.name;\n      // console.log(\"form\",this.form);\n\n    }\n}","import { Component, Input, Output, EventEmitter, NgModule, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { DynamicFormBuilderService } from '../../dynamic-form-builder.service';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@NgModule({\n  imports: [ReactiveFormsModule, FormsModule],\n  declarations: []\n})\n\n\n@Component({\n  selector: 'lib-multi-select',\n  template: `<div [formGroup]=\"form\" dndDropzone (dndDrop)=\"onDropNew($event,field)\" class=\"card-body\">\n  <label class=\"col-md-0 form-control-label\" [attr.for]=\"field.label\">\n    {{field.label}}\n  </label>\n  <textarea rows=\"2\" class=\"form-control\">\n\n  </textarea>\n \n\n  <div *ngIf=\"field.child.length > 0\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\n\n    <div *ngFor=\"let obj of field.child; let i =index; let data\" cdkDrag>\n      <div style=\"float: right;right: -90px; cursor:pointer;\" class=\"col-sm-2 edit-icon\">\n        <i class=\"fa fa-trash\" (click)=\"deleteElement(obj, i)\"></i>\n        <i class=\"fa fa-copy\" (click)=\"copyElement(obj, i)\"></i>\n        <i class=\"fa fa-edit\" (click)=\"loadFormElement(obj, i)\"></i>\n      </div>\n\n\n      <div class=\"col-md-0\" [ngSwitch]=\"obj.type\" style=\"width: 80%;\n          margin-left: 20%;\n          padding-left: 10px;\n          margin-top: 10px;\n          box-shadow: 1px 1px 2px 1px rgba(0,0,0,0.19);\n          padding-bottom: 10px;\">\n\n        <textbox style=\"padding-left:30px\" *ngSwitchCase=\"'number'\" [field]=\"obj\" [form]=\"form\"></textbox>\n\n        <textbox style=\"padding-left:30px\" *ngSwitchCase=\"'text'\" [field]=\"obj\" [form]=\"form\"></textbox>\n\n        <date style=\"padding-left:30px\" *ngSwitchCase=\"'date'\" [field]=\"obj\" [form]=\"form\"></date>\n\n        <slider style=\"padding-left:30px\" *ngSwitchCase=\"'slider'\" [field]=\"obj\" [form]=\"form\"></slider>\n\n        <dropdown style=\"padding-left:30px\" *ngSwitchCase=\"'dropdown'\" [field]=\"obj\" [form]=\"form\"></dropdown>\n\n        <checkbox style=\"padding-left:30px\" *ngSwitchCase=\"'checkbox'\" [field]=\"obj\" [form]=\"form\"></checkbox>\n\n        <radio style=\"padding-left:30px\" *ngSwitchCase=\"'radio'\" [field]=\"obj\" [form]=\"form\"></radio>\n\n        <file style=\"padding-left:30px\" *ngSwitchCase=\"'file'\" [field]=\"obj\" [form]=\"form\"></file>\n\n\n      </div>\n      <div class=\"row\" *ngIf=\"obj.expand\" style=\"padding: 20px;\n      border: 1px solid #ccc;margin-top:10px; margin:40px; margin-left: 20%;\n      box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.19); margin-top:20px;\">\n      \n          <div class=\"col-sm-6\">\n            <mat-form-field>\n              <input matInput placeholder=\"Label\" [(ngModel)]=\"obj.label\" [ngModelOptions]=\"{standalone: true}\">\n            </mat-form-field>\n          </div>\n      \n          <div class=\"col-sm-6\">\n            <mat-form-field>\n              <input matInput placeholder=\"Input Place Holder\" [(ngModel)]=\"obj.placeholder\"\n                [ngModelOptions]=\"{standalone: true}\">\n            </mat-form-field>\n          </div>\n      \n          <div class=\"col-sm-6\">\n            <mat-form-field>\n              <input matInput placeholder=\"Hint/Description\" [(ngModel)]=\"obj.description\" [ngModelOptions]=\"{standalone: true}\">\n            </mat-form-field>\n          </div>\n      \n          <div class=\"col-sm-6\">\n            <mat-form-field>\n              <mat-label>Input Type</mat-label>\n              <mat-select [(ngModel)]=\"obj.type\" [ngModelOptions]=\"{standalone: true}\">\n                <mat-option value=\"text\">text</mat-option>\n                <mat-option value=\"number\">number</mat-option>\n                <mat-option value=\"radio\">radio</mat-option>\n                <mat-option value=\"date\">date</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n      \n          <div class=\"col-sm-6\" *ngIf=\"obj.type=='slider'\">\n            <mat-form-field>\n              <input type=\"text\" placeholder=\"Min\" matInput [(ngModel)]=\"min\" [ngModelOptions]=\"{standalone: true}\">\n            </mat-form-field>\n          </div>\n      \n          <div class=\"col-sm-6\" *ngIf=\"obj.type=='slider'\">\n            <mat-form-field>\n              <input type=\"text\" placeholder=\"Max\" matInput [(ngModel)]=\"max\" [ngModelOptions]=\"{standalone: true}\">\n            </mat-form-field>\n          </div>\n      \n          <div class=\"col-sm-6\" *ngIf=\"obj.type=='date'\">\n            <mat-form-field>\n              <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"minDate\" [ngModelOptions]=\"{standalone: true}\"\n                placeholder=\"Choose a min date\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n      \n            <mat-form-field>\n              <input matInput [matDatepicker]=\"pickerMaxDate\" [(ngModel)]=\"maxDate\" [ngModelOptions]=\"{standalone: true}\"\n                placeholder=\"Choose a max date\">\n              <mat-datepicker-toggle matSuffix [for]=\"pickerMaxDate\"></mat-datepicker-toggle>\n              <mat-datepicker #pickerMaxDate></mat-datepicker>\n            </mat-form-field>\n      \n      \n          </div>\n          <div class=\"col-sm-12 form-group\" *ngIf=\"type=='radio' || type=='checkbox' || type=='dropdown'\">\n            <label for=\"label\" class=\"col-sm-12\">Options</label>\n      \n            <div class=\"col-sm-7 form-group\" *ngIf=\"type=='slider'\">\n              <mat-form-field>\n                <input type=\"text\" placeholder=\"Max\" matInput [(ngModel)]=\"max\" [ngModelOptions]=\"{standalone: true}\">\n              </mat-form-field>\n            </div>\n      \n          </div>\n      \n          <div *ngIf=\"field.child && field.child.length > 0\">\n            <div class=\"col-sm-12\">\n              <label id=\"example-radio-group-label\">Do you want to related the question based on below options ?</label>\n              <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\"\n                [(ngModel)]=\"selectedOption\" [ngModelOptions]=\"{standalone: true}\">\n                <mat-radio-button style=\"padding: 10px\" class=\"example-radio-button\" *ngFor=\"let ele of options\"\n                  [value]=\"ele\">\n                  {{ ele.label }}\n                </mat-radio-button>\n              </mat-radio-group>\n            </div>\n      \n      \n            <div class=\"col-sm-6\">\n              <mat-form-field>\n                <mat-label>Select Question to add </mat-label>\n                <select matNativeControl [(ngModel)]=\"currentSelectedQtn\" [ngModelOptions]=\"{standalone: true}\">\n                  <option *ngFor=\"let values of filtereddata\" [ngValue]=\"values\"> {{ values.label }} </option>\n                </select>\n              </mat-form-field>\n            </div>\n      \n            <div class=\"col-sm-6\" *ngIf=\"type=='text' || type=='date' || type=='number'\">\n              <mat-form-field>\n                <mat-label>Select Condition </mat-label>\n                <select matNativeControl [(ngModel)]=\"condition\" [ngModelOptions]=\"{standalone: true}\">\n                  <option *ngFor=\"let values of conditionArray\" [ngValue]=\"values.condition\"> {{ values.label }} </option>\n                </select>\n              </mat-form-field>\n            </div>\n      \n            <div class=\"col-sm-6\" *ngIf=\"type=='text' || type=='date' || type=='number'\">\n              <mat-form-field>\n                <input type=\"tex\" matInput name=\"conditionMatchValue\" placeholder=\"\" [(ngModel)]=\"conditionMatchValue\"\n                  [ngModelOptions]=\"{standalone: true}\">\n              </mat-form-field>\n            </div>\n      \n            <div class=\"col-sm-2\">\n              <button mat-flat-button color=\"primary\" style=\"margin-top: 10px;\" (click)=\"parentMapping()\">\n                Add\n              </button>\n            </div>\n          </div>\n      \n          <ul class=\"col-sm-12\" *ngFor=\"let relate of listOfRelation;let i = index\">\n            <li class=\"col-sm-12\">\n              <span>{{relate.label}} </span><span style=\"\n      margin-left: 30px;\" (click)=\"deleteCondition(relate,i)\">\n                <i class=\"fa fa-trash\"></i></span>\n            </li>\n          </ul>\n      \n      \n          <div class=\"col-sm-7\">\n            <label id=\"example-radio-group-label\">is Reqired ?</label>\n            <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\"\n              [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"required\">\n              <mat-radio-button class=\"example-radio-button\" [value]=true>\n                Yes\n              </mat-radio-button>\n              <mat-radio-button class=\"example-radio-button\" [value]=false>\n                No\n              </mat-radio-button>\n            </mat-radio-group>\n          </div>\n      \n          <div class=\"col-sm-7\" *ngIf=\"type=='date'\">\n            <label id=\"example-radio-group-label\">is autoCollect</label>\n            <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [(ngModel)]=\"autoCollect\"\n              [ngModelOptions]=\"{standalone: true}\">\n              <mat-radio-button class=\"example-radio-button\" [value]=true>\n                True\n              </mat-radio-button>\n              <mat-radio-button class=\"example-radio-button\" [value]=false>\n                False\n              </mat-radio-button>\n            </mat-radio-group>\n          </div>\n      \n      \n          <div class=\"col-sm-12\">\n      \n            <button mat-flat-button color=\"primary\" style=\"margin-right:10px;\" (click)=\"closeModelChild('save', obj)\">\n              Save\n            </button>\n      \n          </div>\n        </div>\n    </div>\n\n  </div>\n</div>\n`,\n  styles: [`\n    .form-control {\n      display: none;\n    }\n    .mat-form-field {\n      display: block;\n    }\n    .fa {\n      padding: 3px;\n    }\n    `]\n})\nexport class MultiSelectComponent {\n\n  @Input() field: any = {};\n  @Input() form: any;\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n  @Output() sendDataToParent = new EventEmitter<string>();\n  @Output() childrenDropEvent = new EventEmitter<string>();\n  @Output() copyOrDeleteEvent = new EventEmitter<string>();\n  @Output() onFieldUpdate = new EventEmitter();\n\n  activeModelData: any;\n  validations: any;\n  required: any;\n  autoCollect: any;\n  openEditChild: boolean = false;\n  _id: any;\n  description: any;\n  minDate: any;\n  maxDate: any;\n  min: any;\n  max: any;\n  label: any;\n  type: any;\n  placeholder: any;\n  options: any;\n  pageNumber: any;\n  allData: any;\n  filtereddata: any;\n  conditionMatchValue: any;\n  selectedOption: any;\n  currentSelectedQtn: any;\n  listOfRelation: any = [];\n  condition: any;\n  getSelectQuestion: any;\n  conditionArray: any = [\n    {\n      label: \"equals\",\n      condition: \"===\"\n    },\n    {\n      label: \"Not Equal To\",\n      condition: \"!=\"\n    },\n    {\n      label: \"Greater Than\",\n      condition: \">\"\n    },\n    {\n      label: \"Less Than\",\n      condition: \"<\"\n    },\n    {\n      label: \"Greater Than Or Equal\",\n      condition: \">=\"\n    },\n    {\n      label: \"Less Than Or Equal\",\n      condition: \"<=\"\n    }\n  ]\n\n  constructor(public cdr: ChangeDetectorRef,\n    private dynamicServe: DynamicFormBuilderService) {\n\n    // this.form.controls = this.field.name;\n    // console.log(\"form\",this.form);\n\n  }\n  onDropNew($event, field) {\n    console.log(\"---- MultiSelectComponent -\", $event);\n\n    if ($event.data.responseType && $event.data.responseType != 'matrix') {\n\n      $event.data.mutiSelect = field;\n      this.childrenDropEvent.emit($event.data);\n    } else {\n      console.log(\"not allowed\");\n    }\n  }\n\n\n  parentMapping() {\n    console.log(this.condition, \"condition\", this.currentSelectedQtn, \"selectedOption\", this.selectedOption);\n    let obj = {}\n    // option:this.selectedOption,\n    // question:this.currentSelectedQtn\n    // obj['visibleIf'] = [];\n    let condiObj = {\n      operator: this.condition,\n      value: this.conditionMatchValue,\n      field: this.field.field,\n      label: this.field.label\n      // parent:this.selectedOption.field\n    }\n\n    // if (this.currentSelectedQtn.parentChildren) {\n    //   this.currentSelectedQtn.parentChildren.push(condiObj);\n    // } else {\n    //   this.currentSelectedQtn.parentChildren = [];\n    //   this.currentSelectedQtn.parentChildren.push(condiObj);\n    // }\n    console.log('this.currentSelectedQtn', this.currentSelectedQtn);\n\n    console.log(\"condiObj\", condiObj);\n    this.getSelectQuestion = this.allData['questionList']['questionList'].filter(ele => {\n      if (ele.field == this.field.field) {\n        return ele;\n      }\n    });\n\n    console.log(\"getSelectQuestion\", this.getSelectQuestion);\n\n    let isAvailable = false;\n    if (this.getSelectQuestion['visibleIf'] && this.getSelectQuestion['visibleIf'].length > 0) {\n      isAvailable = this.getSelectQuestion['visibleIf'].filter(item => {\n        if (item.visibleIf.field == this.field.field) {\n          return true\n        }\n      })\n    }\n    console.log(\"after getSelectQuestion\", this.getSelectQuestion);\n    let allData = [];\n    let addObj = false;\n    for (let i = 0; i < this.getSelectQuestion.length; i++) {\n      debugger\n      if (this.getSelectQuestion[i].parentChildren) {\n        if (this.getSelectQuestion[i].parentChildren.indexOf(this.currentSelectedQtn.field) !== -1) {\n          alert(\"Value exists!\")\n\n          addObj = false;\n\n        } else {\n\n          addObj = true;\n          this.getSelectQuestion[i].parentChildren.push(this.currentSelectedQtn.field);\n        }\n\n      } else {\n        addObj = true;\n        this.getSelectQuestion[i].parentChildren = [];\n        this.getSelectQuestion[i].parentChildren.push(this.currentSelectedQtn.field);\n      }\n    }\n    if (addObj) {\n      allData = this.allData['questionList']['questionList'].filter(ele => {\n        if (ele.field == this.currentSelectedQtn.field) {\n          if (ele.visibleIf && ele.visibleIf.length > 0 && isAvailable == false) {\n            ele.visibleIf.push(condiObj);\n          } else {\n            ele.visibleIf = [];\n            ele.visibleIf.push(condiObj);\n          }\n          return ele;\n        } else {\n          return ele\n        }\n      });\n      console.log(\"all data in question\", allData);\n      // this.sendDataToParent()\n      if (!this.listOfRelation.includes(condiObj)) {\n        this.listOfRelation.push(condiObj);\n      }\n    }\n    if (this.condition) {\n    }\n    // 'option':this.selectedOption,\n    //       'question':this.currentSelectedQtn\n    // this.field.childQnt = this.currentSelectedQtn.field;\n    console.log(\"this.field.validations.relation\", this.listOfRelation);\n  }\n\n  closeModelChild(action, data) {\n    if (action == \"save\") {\n      console.log(\"closeModel\", this.field);\n      console.log('!!!!!!!!!!!', data);\n      // this.modalReference.close();\n      // this.activeModelData.field = this.field.field;\n      // this.activeModelData.label = this.label;\n      // this.activeModelData.type = this.type;\n      // this.activeModelData.placeholder = this.placeholder;\n      // this.activeModelData.options = this.options;\n\n      let obj = {\n        label: this.label,\n        type: this.type,\n        placeholder: this.placeholder,\n        options: this.options,\n        validations: this.validations,\n        field: this.field,\n        _id: this._id,\n        description: this.description\n      }\n\n      obj.label = data.label;\n      obj.field = data.field;\n      obj.type = data.type;\n      obj.placeholder = data.placeholder;\n      obj.options = data.options;\n      obj.description = data.description;\n\n      if (this.type == 'date') {\n        obj['minDate'] = this.minDate;\n        obj['maxDate'] = this.maxDate\n      } else if (this.type == 'slider') {\n        obj['min'] = this.min;\n        obj['max'] = this.max;\n      }\n\n      // console.log(\"obj\",obj);\n\n\n      var index = this.field.child.findIndex(item => item.field === this.currentItem.field);\n      this.field.child.splice(index, 1, obj)\n\n      // let newObj =  this.field.child.filter(item => {\n      //   if (item.field == this.currentItem.field) {\n      //     // this.field.child[this.currentItem.position] = obj;\n      //     return obj;\n      //   } else {\n      //     return item;\n      //   }\n      // });\n\n      console.log('aaaaaaaaaaa', this.field);\n\n\n\n      // this.sendDataToParent.emit(JSON.stringify(obj));\n\n\n      // this.field.label = this.label;\n\n\n      // this.field.label = this.label;\n      // this.field.type = this.type;\n      // this.field.placeholder = this.placeholder;\n      // this.field.options = this.options;\n      // this.field.description = this.description;\n\n      // if (this.type == 'date') {\n      //   this.field.validations.minDate = this.minDate;\n      //   this.field.validations.maxDate = this.maxDate;\n      //   this.field.validations.autoCollect = this.autoCollect;\n      // } else if (this.type == 'slider') {\n      //   this.field.validations.min = this.min;\n      //   this.field.validations.max = this.max;\n      // }\n\n      // this.field.validations\n\n      // console.log(\" this.field.validations.required\", this.field.validations.required, \"sdds\", this.required);\n      // this.field.validations.required = this.required;\n      // this.field.validations.autoCollect = this.autoCollect;\n\n\n      // console.log(\" this.field\", this.field);\n      this.openEditChild = false;\n\n      // this.sendDataToParent.emit(this.activeModelData);\n\n    } else {\n\n      this.openEditChild = false;\n      // this.modalReference.close();\n    }\n\n    // this.modalService.close();\n    //  this.myModal.nativeElement.className = 'modal hide';\n  }\n\n  currentItem: any;\n\n  loadFormElement(item, id) {\n    console.log(\"item ---\", item, \"id\", id);\n    item.expand = ! item.expand;\n    this.activeModelData = \"\";\n    this.label = item.label;\n    this.currentItem = item;\n    this.allData = this.dynamicServe.getALl();\n    console.log('this.field', this.field);\n    // for(let i = 0; i < this.allData['questionList']['questionList'][0].child.length; i++) {\n      this.filtereddata = this.field.child.filter(t => t.field !== item.field);\n    // }\n    // this.filtereddata = this.field.child;\n\n\n    console.log('multi select', this.allData);\n    console.log('this.filtereddata', this.filtereddata)\n    this.type = item.type;\n    this.placeholder = item.placeholder;\n    this.options = item.options;\n    this._id = item._id;\n    // this.required = item.validations.required;\n    this.description = item.description;\n    if (item.type == \"date\") {\n      this.minDate = item.validations.minDate;\n      this.maxDate = item.validations.maxDate\n      this.autoCollect = item.validations.autoCollect;\n    }\n    else if (item.type == \"slider\") {\n      this.min = item.validations.min;\n      this.max = item.validations.max;\n    }\n\n    // this.required = this.field.validations.required;\n\n    // console.log(item.validations.required, \"item.validations.required\",\n    // this.required, \"label\", this.label);\n    // console.log(\"label\",this.label);\n    this.openEditChild = this.openEditChild ? false : true;\n    this.cdr.detectChanges();\n    // document.getElementById(\"openModalButton\").click();\n    // this.open(this.myModal);\n    // this.myModal.show();\n    // this.myModal.nativeElement.className = 'modal fade show';\n  }\n\n  deleteCondition(data, value) {\n    // var index = this.listOfRelation.indexOf(value);\n    // if (index > -1) {\n    this.listOfRelation.splice(value, 1);\n    this.getSelectQuestion[0].child.splice(value, 1);\n    // }\n\n    console.log('after delete data', this.listOfRelation);\n  }\n\n  deleteElement(item, index) {\n    console.log('deleteElement', item);\n    item.deleteindex  = index;\n    \n    item.action = 'childDelete';\n    this.field.isDelete = true;\n    this.field.child.splice(index, 1);\n    this.sendDataToParent.emit(item);\n    // this.childrenDropEvent.emit(item);\n    // console.log(\"field delete\", this.field, 'index', index);\n    // console.log('after delete', this.allData);\n\n  }\n\n  copyElement(item, index) {\n    // this.field.push(item);\n    item.action = 'copy';\n    console.log(\"copy field ----------\", item, 'index', index);\n    this.field.child.push(item);\n    this.copyOrDeleteEvent.emit(item);\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.field.child, event.previousIndex, event.currentIndex);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\n\n\n// components\nimport { DynamicFormBuilderComponent } from './dynamic-form-builder.component';\nimport { FieldBuilderComponent } from './field-builder/field-builder.component';\nimport { TextBoxComponent } from './atoms/textbox';\nimport { DropDownComponent } from './atoms/dropdown';\nimport { FileComponent } from './atoms/file';\nimport { CheckBoxComponent } from './atoms/checkbox';\nimport { RadioComponent } from './atoms/radio';\nimport { DateComponent } from './atoms/date';\nimport { SliderComponent } from './atoms/slider';\n\n// import {MatIconModule} from '@angular/material/icon';\n// import { NgDragDropModule } from 'ng-drag-drop';\n// import { DragAndDropModule } from 'angular-draggable-droppable';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport  {\n  MatButtonModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatInputModule ,\n  MatSliderModule,\n  MatSelectModule\n} from '@angular/material';\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { MultiSelectComponent } from './atoms/multi-select';\nimport { DndModule } from 'ngx-drag-drop';\n\nimport {  DynamicFormBuilderService } from '../dynamic-form-builder.service'\n// import {  } from '@angular/cdk/'\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSliderModule,\n    MatSelectModule,\n    // MatIconModule\n    AngularFontAwesomeModule,\n    DragDropModule,\n    DndModule\n  ],\n  declarations: [\n    DynamicFormBuilderComponent,\n    FieldBuilderComponent,\n    TextBoxComponent,\n    DropDownComponent,\n    CheckBoxComponent,\n    FileComponent,\n    RadioComponent,\n    DateComponent,\n    SliderComponent,\n    MultiSelectComponent\n    \n  ],\n  exports: [DynamicFormBuilderComponent],\n  providers: [DynamicFormBuilderService]\n})\nexport class DynamicFormBuilderModule { }\n","import { NgModule } from '@angular/core';\nimport { DynamicFormBuilderComponent } from './dynamic-form-builder.component';\n\nimport { CommonModule } from '@angular/common';\n// import { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n// import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// dynamic form builder\nimport { DynamicFormBuilderModule } from './dynamic-form-builder/dynamic-form-builder.module';\n// import {} from './'\n\n// import { FormComponent } from './form.component';\nimport { HttpClientModule } from '@angular/common/http';\n// import { NgDragDropModule } from 'ng-drag-drop';\n// import { DragAndDropModule } from 'angular-draggable-droppable';\n\n\n// import { DragulaModule } from 'ng2-dragula';\n// \n// import  {  } from ''\n\nimport  { MatButtonModule,MatDatepickerModule, MatFormFieldModule,\n  MatTabsModule, MatSelectModule} from '@angular/material'\n\nimport { DndModule } from 'ngx-drag-drop';\n\n\n@NgModule({\n  declarations: [DynamicFormBuilderComponent],\n  imports: [\n    // BrowserModule,\n    CommonModule,\n     ReactiveFormsModule,\n    DynamicFormBuilderModule,\n    HttpClientModule,\n    FormsModule,\n    MatSelectModule,\n    MatTabsModule,\n    // NgbModule.forRoot(),\n    // DragulaModule.forRoot()\n    // DragAndDropModule\n    MatFormFieldModule,\n    DndModule,\n    MatButtonModule,\n    MatDatepickerModule\n  ],\n  exports: [DynamicFormBuilderComponent]\n})\nexport class DynamicFormBuilderModule1 {\n\n\n }\n"]}